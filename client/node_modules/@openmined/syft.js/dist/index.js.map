{"version":3,"file":"index.js","sources":["../src/_constants.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../src/events.js","../src/logger.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../src/utils/random-buffer.js","../src/speed-test.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../src/_errors.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../src/utils/base64.js","../src/grid-api-client.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../node_modules/syft-proto/js/protobuf.js","../node_modules/syft-proto/js/index.js","../src/types/protocol.js","../src/types/plan.js","../src/object-registry.js","../src/types/role.js","../src/types/state.js","../src/types/message.js","../src/types/torch.js","../src/types/placeholder.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/types/pointer-tensor.js","../src/types/computation-action.js","../src/protobuf/mapping.js","../node_modules/long/src/long.js","../src/protobuf/index.js","../src/syft-model.js","../src/data/transform/core/index.js","../node_modules/@babel/runtime/helpers/toArray.js","../src/data/transform/tfjs/index.js","../src/data/dataset.js","../src/data/sampler.js","../src/data/fetch.js","../src/data/collate.js","../src/data/data-loader.js","../src/plan-trainer.js","../src/job.js","../src/syft.js"],"sourcesContent":["// Sockets\nexport const SOCKET_STATUS = 'socket-status';\nexport const SOCKET_PING = 'socket-ping';\n\n// Grid\nexport const GET_PROTOCOL = 'get-protocol';\nexport const CYCLE_STATUS_ACCEPTED = 'accepted';\nexport const CYCLE_STATUS_REJECTED = 'rejected';\n\n// WebRTC\nexport const WEBRTC_JOIN_ROOM = 'webrtc: join-room';\nexport const WEBRTC_INTERNAL_MESSAGE = 'webrtc: internal-message';\nexport const WEBRTC_PEER_LEFT = 'webrtc: peer-left';\n\n// WebRTC: Data Channel\nexport const WEBRTC_DATACHANNEL_CHUNK_SIZE = 64 * 1024;\nexport const WEBRTC_DATACHANNEL_MAX_BUFFER = 4 * 1024 * 1024;\nexport const WEBRTC_DATACHANNEL_BUFFER_TIMEOUT = 2000;\nexport const WEBRTC_DATACHANNEL_MAX_BUFFER_TIMEOUTS = 5;\n\nexport const WEBRTC_PEER_CONFIG = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:stun1.l.google.com:19302',\n        'stun:stun2.l.google.com:19302', // FF says too many stuns are bad, don't send more than this\n      ],\n    },\n  ],\n};\n\nexport const WEBRTC_PEER_OPTIONS = {\n  optional: [\n    { DtlsSrtpKeyAgreement: true }, // Required for connection between Chrome and Firefox\n    // FF works w/o this option, but Chrome fails with it\n    // { RtpDataChannels: true } // Required in Firefox to use the DataChannels API\n  ],\n};\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Event Observer that subscribes, unsubscribes and broadcasts events.\n *\n * @property {Object.<string, Function>} observers - Event dictionary.\n */\nexport default class EventObserver {\n  constructor() {\n    this.observers = [];\n  }\n\n  /**\n   * Subscribes an event and its handler to the event dictionary.\n   *\n   * @param {string} type - Event type.\n   * @param {Function} func - Event handler.\n   * @param {number|boolean} [expires] - Expire subscription after N invocations.\n   */\n  subscribe(type, func, expires = false) {\n    this.observers.push({ type, func, expires });\n  }\n\n  /**\n   * Unsubscribes an event from the event dictionary.\n   *\n   * @param {string} eventType - Event type.\n   * @param {Function} [func] - Event handler.\n   */\n  unsubscribe(eventType, func) {\n    this.observers = this.observers.filter((i) => {\n      return eventType !== i.type && func !== i.func;\n    });\n  }\n\n  /**\n   * Broadcasts a specific event type.\n   *\n   * @param {string} eventType - Event type.\n   * @param {Object} data - Data to be broadcasted.\n   */\n  broadcast(eventType, data) {\n    this.observers.forEach((observer) => {\n      if (\n        eventType === observer.type &&\n        (observer.expires === false || observer.expires > 0)\n      ) {\n        if (typeof observer.expires === 'number') {\n          observer.expires--;\n        }\n        observer.func(data);\n      }\n    });\n\n    // Remove expired subscriptions\n    this.observers = this.observers.filter((i) => {\n      return i.expires > 0 || i.expires === false;\n    });\n  }\n}\n","// A simple logging function\nexport default class Logger {\n  constructor(system, verbose) {\n    if (!Logger.instance) {\n      this.system = system;\n      this.verbose = verbose;\n      Logger.instance = this;\n    }\n    return Logger.instance;\n  }\n\n  log(message, data) {\n    // Only log if verbose is turned on\n    if (this.verbose) {\n      const output = `${Date.now()}: ${this.system} - ${message}`;\n\n      // Have the passed additional data?\n      if (data) {\n        console.log(output, data);\n      } else {\n        console.log(output);\n      }\n    }\n  }\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  function ensureDefaultToStringTag(object, defaultValue) {\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1644581#c6\n    return toStringTagSymbol in object\n      ? object[toStringTagSymbol]\n      : object[toStringTagSymbol] = defaultValue;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = ensureDefaultToStringTag(\n    GeneratorFunctionPrototype,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      ensureDefaultToStringTag(genFun, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  ensureDefaultToStringTag(Gp, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","/**\n * Creates ArrayBuffer with given size populated with random values\n * @param size {number} - Buffer size in bytes\n * @returns {ArrayBuffer}\n */\nexport const createRandomBuffer = async (size) => {\n  return new Promise((resolve) => {\n    // Uint32Array is faster, 4 times less Math.random() calls\n    const int32BuffSize = Math.ceil(size / 4);\n    const buff = new Uint32Array(int32BuffSize);\n    const int32Max = Math.pow(2, 32);\n    const randomInt32 = () => Math.random() * int32Max;\n\n    // Don't block event loop too much, break every 1mb\n    const int32ChunkSize = (1024 * 1024) / 4;\n    const fillNextChunk = (offset = 0) => {\n      const stop = Math.min(offset + int32ChunkSize, int32BuffSize);\n      for (let i = offset; i < stop; i++) {\n        buff[i] = randomInt32();\n      }\n      if (stop !== int32BuffSize) {\n        setTimeout(fillNextChunk, 0, offset + int32ChunkSize);\n      } else {\n        resolve(buff.buffer);\n      }\n    };\n    setTimeout(fillNextChunk, 0);\n  });\n};\n","import { createRandomBuffer } from './utils/random-buffer';\n\n/**\n * SpeedTest is a class that contains the necessary components\n * to measure download/upload speed, and ping.\n */\nexport class SpeedTest {\n  /**\n   * @param {string} downloadUrl\n   * @param {string} uploadUrl\n   * @param {string} pingUrl\n   * @param {number} maxUploadSizeMb\n   * @param {number} maxTestTimeSec\n   */\n  constructor({\n    downloadUrl,\n    uploadUrl,\n    pingUrl,\n    maxUploadSizeMb = 64,\n    maxTestTimeSec = 10,\n  }) {\n    this.downloadUrl = downloadUrl;\n    this.uploadUrl = uploadUrl;\n    this.pingUrl = pingUrl;\n    this.maxUploadSizeMb = maxUploadSizeMb;\n    this.maxTestTimeSec = maxTestTimeSec;\n\n    // Various settings to tune.\n    this.bwAvgWindow = 5;\n    this.bwLowJitterThreshold = 0.05;\n    this.bwMaxLowJitterConsecutiveMeasures = 5;\n  }\n\n  /**\n   * Measures the time taken to make an XMLHttpRequest (xhr).\n   * Gets called before the request is sent, to set up values and tools to measure time.\n   * Returns a promise that gets updated when the request is sent and a response is received with no errors.\n   *  If the request is successful, then the value of the promise is the time that the request took (in seconds)\n   *  Else, the value is an Error\n   * @param {XMLHttpRequest} xhr - XMLHttpRequest\n   * @param {boolean} isUpload\n   */\n  async meterXhr(xhr, isUpload = false) {\n    return new Promise((resolve, reject) => {\n      // Set up the initial values to measure time\n      let timeoutHandler = null,\n        prevTime = 0,\n        prevSize = 0,\n        avgCollector = new AvgCollector({\n          avgWindow: this.bwAvgWindow,\n          lowJitterThreshold: this.bwLowJitterThreshold,\n          maxLowJitterConsecutiveMeasures: this\n            .bwMaxLowJitterConsecutiveMeasures,\n        });\n\n      const req = isUpload ? xhr.upload : xhr;\n\n      // Update the value of the promise when the request is finished\n      const finish = (error = null) => {\n        if (timeoutHandler) {\n          clearTimeout(timeoutHandler);\n        }\n\n        // Clean up\n        req.onprogress = null;\n        req.onload = null;\n        req.onerror = null;\n        xhr.abort();\n\n        // Return result\n        if (!error) {\n          resolve(avgCollector.getAvg());\n        } else {\n          reject(new Error(error));\n        }\n      };\n\n      req.onreadystatechange = () => {\n        if (xhr.readyState === 1) {\n          // As soon as connection is opened, set speed test timeout\n          timeoutHandler = setTimeout(finish, this.maxTestTimeSec * 1000);\n          // Set initial time/size values\n          if (!prevTime) {\n            prevTime = Date.now() / 1000;\n            prevSize = 0;\n          }\n        }\n      };\n\n      req.onprogress = (e) => {\n        const // mbit\n          size = (8 * e.loaded) / 1048576,\n          // seconds\n          time = Date.now() / 1000;\n\n        if (!prevTime) {\n          prevTime = time;\n          prevSize = size;\n          return;\n        }\n\n        // Update change in time and size as the request i in progress\n        let deltaSize = size - prevSize,\n          deltaTime = time - prevTime,\n          speed = deltaSize / deltaTime;\n\n        if (deltaTime === 0 || !Number.isFinite(speed)) {\n          // Cap to 1Gbps\n          speed = 1000;\n        }\n\n        const canStop = avgCollector.collect(speed);\n        if (canStop) {\n          finish();\n        }\n\n        prevSize = size;\n        prevTime = time;\n      };\n\n      req.onload = () => {\n        finish();\n      };\n      req.onerror = (e) => {\n        finish(e);\n      };\n    });\n  }\n\n  async getDownloadSpeed() {\n    let xhr = new XMLHttpRequest();\n    const result = this.meterXhr(xhr);\n\n    xhr.open('GET', this.downloadUrl + '?' + Math.random(), true);\n    xhr.send();\n\n    return result;\n  }\n\n  async getUploadSpeed() {\n    const xhr = new XMLHttpRequest();\n    const result = this.meterXhr(xhr, true);\n    const buff = await createRandomBuffer(this.maxUploadSizeMb * 1024 * 1024);\n\n    xhr.open('POST', this.uploadUrl, true);\n    xhr.send(buff);\n\n    return result;\n  }\n\n  async getPing() {\n    return new Promise((resolve, reject) => {\n      // Set up values to measure ping\n      const avgCollector = new AvgCollector({});\n      let currXhr;\n      let timeoutHandler;\n\n      // Update value of promise once test is finished\n      const finish = (xhr, error = null) => {\n        if (timeoutHandler) {\n          clearTimeout(timeoutHandler);\n        }\n\n        // Clean up\n        xhr.onprogress = null;\n        xhr.onload = null;\n        xhr.onerror = null;\n        xhr.abort();\n\n        // Return result\n        if (!error) {\n          resolve(avgCollector.getAvg());\n        } else {\n          reject(new Error(error));\n        }\n      };\n\n      const runPing = () => {\n        const xhr = new XMLHttpRequest();\n        currXhr = xhr;\n        let startTime = Date.now();\n\n        xhr.onload = () => {\n          const ping = Date.now() - startTime;\n          const canStop = avgCollector.collect(ping);\n          if (canStop) {\n            finish(xhr);\n          } else {\n            setTimeout(runPing, 0);\n          }\n        };\n\n        xhr.onerror = (e) => {\n          finish(xhr, e);\n        };\n\n        xhr.open('GET', this.pingUrl + '?' + Math.random(), true);\n        xhr.send();\n      };\n\n      timeoutHandler = setTimeout(() => {\n        finish(currXhr);\n      }, this.maxTestTimeSec * 1000);\n      runPing();\n    });\n  }\n}\n\n/**\n * Helper to average series of values.\n *\n * @private\n * @param options {Object}\n * @param options.avgWindow {number} Window to average (last N measurements)\n * @param options.lowJitterThreshold {number} Change of avg considered stable\n * @param maxLowJitterConsecutiveMeasures {number} Number of measures\n *  when avg stays stable to stop collecting more samples\n */\nclass AvgCollector {\n  constructor({\n    avgWindow = 5,\n    lowJitterThreshold = 0.05,\n    maxLowJitterConsecutiveMeasures = 5,\n  }) {\n    this.measuresCount = 0;\n    this.prevAvg = 0;\n    this.avg = 0;\n    this.lowJitterConsecutiveMeasures = 0;\n\n    this.avgWindow = avgWindow;\n    this.lowJitterThreshold = lowJitterThreshold;\n    this.maxLowJitterConsecutiveMeasures = maxLowJitterConsecutiveMeasures;\n    this.name = name;\n  }\n\n  /**\n   * Collects one sample for averaging.\n   * @param value {number} Reported speed\n   * @returns {boolean} Can stop collecting due to average value stability\n   */\n  collect(value) {\n    this.prevAvg = this.avg;\n    const avgWindow = Math.min(this.measuresCount, this.avgWindow);\n    this.avg = (this.avg * avgWindow + value) / (avgWindow + 1);\n    this.measuresCount++;\n\n    // Return true if measurements are stable.\n    if (\n      this.prevAvg > 0 &&\n      this.avg < this.prevAvg * (1 + this.lowJitterThreshold) &&\n      this.avg > this.prevAvg * (1 - this.lowJitterThreshold)\n    ) {\n      this.lowJitterConsecutiveMeasures++;\n    } else {\n      this.lowJitterConsecutiveMeasures = 0;\n    }\n\n    return (\n      this.lowJitterConsecutiveMeasures >= this.maxLowJitterConsecutiveMeasures\n    );\n  }\n\n  getAvg() {\n    return this.avg;\n  }\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","export class NoDetailerError extends Error {\n  constructor(d) {\n    super(\n      `Serialized object contains type that may exist in PySyft, but is not currently supported in syft.js. Please file a feature request (https://github.com/OpenMined/syft.js/issues) for type ${d}.`\n    );\n    this.name = 'NoDetailerError';\n  }\n}\n\nexport class NotEnoughArgsError extends Error {\n  constructor(passed, expected) {\n    super(\n      `You have passed ${passed} argument(s) when the plan requires ${expected} argument(s).`\n    );\n    this.name = 'NotEnoughArgsError';\n  }\n}\n\nexport class MissingVariableError extends Error {\n  constructor() {\n    super(`Command requires variable that is missing.`);\n    this.name = 'MissingVariableError';\n  }\n}\n\nexport class NoPlanError extends Error {\n  constructor() {\n    super(\n      `The operation you're attempting to run requires a plan before being called.`\n    );\n    this.name = 'NoPlanError';\n  }\n}\n\nexport class PlanAlreadyCompletedError extends Error {\n  constructor(name, id) {\n    super(\n      `You have already executed the plan named \"${name}\" with id \"${id}\".`\n    );\n    this.name = 'PlanAlreadyCompletedError';\n  }\n}\n\nexport class CannotFindCommandError extends Error {\n  constructor(command) {\n    super(`Command ${command} not found in in TensorFlow.js.`);\n    this.name = 'CannotFindCommandError';\n  }\n}\n\nexport class GridUnknownCycleStatusError extends Error {\n  constructor(status) {\n    super(`Unknown cycle status: ${status}`);\n    this.name = 'GridUnknownCycleStatusError';\n  }\n}\n\nexport class GridError extends Error {\n  constructor(status) {\n    super(`Grid error: ${status}`);\n    this.name = 'GridError';\n  }\n}\n\nexport class ModelLoadFailedError extends Error {\n  constructor(status) {\n    super(`Failed to load Model: ${status}`);\n    this.name = 'ModelLoadFailedError';\n  }\n}\n\nexport class PlanLoadFailedError extends Error {\n  constructor(planName, status) {\n    super(`Failed to load '${planName}' Plan: ${status}`);\n    this.name = 'PlanLoadFailedError';\n  }\n}\n\nexport class ProtobufUnserializeFailedError extends Error {\n  constructor(pbType, status) {\n    super(\n      `Failed to unserialize binary protobuf data into ${pbType}: ${status}`\n    );\n    this.name = 'ProtobufUnserializeFailedError';\n  }\n}\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","import { decode, encode } from 'base64-arraybuffer';\n\n/**\n * Decodes base64-encoded string to ArrayBuffer\n * @param {string} str\n * @returns {Uint8Array}\n */\nexport const base64Decode = (str) => {\n  return new Uint8Array(decode(str));\n};\n\n/**\n * Encodes ArrayBuffer to base64 string\n * @param {ArrayBuffer} array\n * @returns {string}\n */\nexport const base64Encode = (array) => {\n  return encode(array);\n};\n","import Logger from './logger';\nimport { SpeedTest } from './speed-test';\nimport { GridError } from './_errors';\nimport EventObserver from './events';\nimport { createRandomBuffer } from './utils/random-buffer';\nimport { base64Encode } from './utils/base64';\n\n// Define the type of request (GET, POST) associated with each possible call\nconst HTTP_PATH_VERB = {\n  'model-centric/get-plan': 'GET',\n  'model-centric/get-model': 'GET',\n  'model-centric/get-protocol': 'GET',\n  'model-centric/cycle-request': 'POST',\n  'model-centric/report': 'POST',\n  'model-centric/authenticate': 'POST',\n};\n\n/**\n * GridAPIClient defines the possible API calls that can be made to PyGrid from a client perspective\n * Operations include get-plan, get-model, get-protocol, cycle-request, report and authenticate\n */\nexport default class GridAPIClient {\n  constructor({ url, allowInsecureUrl = false }) {\n    // Choose between web socket or http protocol\n    this.transport = url.match(/^ws/i) ? 'ws' : 'http';\n    if (this.transport === 'ws') {\n      this.wsUrl = url;\n      this.httpUrl = url.replace(/^ws(s)?/i, 'http$1');\n    } else {\n      this.httpUrl = url;\n      this.wsUrl = url.replace(/^http(s)?/i, 'ws$1');\n    }\n    if (!allowInsecureUrl) {\n      this.wsUrl = this.wsUrl.replace('ws', 'wss');\n      this.httpUrl = this.httpUrl.replace('http', 'https');\n    }\n\n    // Define all necessary components for both web socket and http\n    this.ws = null;\n    this.observer = new EventObserver();\n    this.wsMessages = {};\n    this.logger = new Logger('grid', true);\n    this.responseTimeout = 10000;\n\n    this._handleWsMessage = this._handleWsMessage.bind(this);\n    this._handleWsError = this._handleWsError.bind(this);\n    this._handleWsClose = this._handleWsClose.bind(this);\n  }\n\n  /**\n   * Authenticates a connection to the grid\n   * using a particular token associated with a model name and version\n   * @param {string} modelName\n   * @param {string} modelVersion\n   * @param {string} authToken\n   */\n  async authenticate(modelName, modelVersion, authToken) {\n    this.logger.log(\n      `Authenticating against ${modelName} ${modelVersion} with ${authToken}...`\n    );\n\n    const response = await this._send('model-centric/authenticate', {\n      model_name: modelName,\n      model_version: modelVersion,\n      auth_token: authToken,\n    });\n\n    return response;\n  }\n\n  /**\n   * Requests to join an active federated learning cycle in PyGrid\n   * @param {string} workerId\n   * @param {string} modelName\n   * @param {string} modelVersion\n   * @param {number} ping\n   * @param {number} download\n   * @param {number} upload\n   */\n  requestCycle(workerId, modelName, modelVersion, ping, download, upload) {\n    this.logger.log(\n      `[WID: ${workerId}] Requesting cycle for model ${modelName} v.${modelVersion} [${ping}, ${download}, ${upload}]...`\n    );\n\n    const response = this._send('model-centric/cycle-request', {\n      worker_id: workerId,\n      model: modelName,\n      version: modelVersion,\n      ping: ping,\n      download: download,\n      upload: upload,\n    });\n\n    return response;\n  }\n\n  async getModel(workerId, requestKey, modelId) {\n    this.logger.log(\n      `[WID: ${workerId}, KEY: ${requestKey}] Requesting model ${modelId}...`\n    );\n\n    const response = await this._sendHttp(\n      'model-centric/get-model',\n      {\n        worker_id: workerId,\n        request_key: requestKey,\n        model_id: modelId,\n      },\n      'arrayBuffer'\n    );\n    return response;\n  }\n\n  async getPlan(workerId, requestKey, planId) {\n    this.logger.log(\n      `[WID: ${workerId}, KEY: ${requestKey}] Requesting plan ${planId}...`\n    );\n\n    const response = await this._sendHttp(\n      'model-centric/get-plan',\n      {\n        worker_id: workerId,\n        request_key: requestKey,\n        plan_id: planId,\n        receive_operations_as: 'tfjs',\n      },\n      'arrayBuffer'\n    );\n\n    return response;\n  }\n\n  getProtocol(workerId, requestKey, protocolId) {\n    this.logger.log(\n      `[WID: ${workerId}, KEY: ${requestKey}] Requesting protocol ${protocolId}...`\n    );\n    return Promise.resolve(\n      'CgYIjcivoCUqEwoGCIHIr6AlEgkSB3dvcmtlcjEqEwoGCIXIr6AlEgkSB3dvcmtlcjIqEwoGCInIr6AlEgkSB3dvcmtlcjM='\n    );\n  }\n\n  /**\n   * Submits a report indicating the difference between the model parameters from workerID and original PyGrid parameters\n   * @param {string} workerId\n   * @param {string} requestKey\n   * @param {string} diff - a base64 encoded string difference between current and original model parameters in PyGrid\n   */\n  async submitReport(workerId, requestKey, diff) {\n    this.logger.log(\n      `[WID: ${workerId}, KEY: ${requestKey}] Submitting report...`\n    );\n\n    const response = await this._send('model-centric/report', {\n      worker_id: workerId,\n      request_key: requestKey,\n      diff,\n    });\n\n    return response;\n  }\n\n  async getConnectionSpeed(workerId) {\n    const speedTest = new SpeedTest({\n      downloadUrl:\n        this.httpUrl +\n        '/model-centric/speed-test?worker_id=' +\n        encodeURIComponent(workerId) +\n        '&random=' +\n        Math.random(),\n      uploadUrl:\n        this.httpUrl +\n        '/model-centric/speed-test?worker_id=' +\n        encodeURIComponent(workerId) +\n        '&random=' +\n        Math.random(),\n      pingUrl:\n        this.httpUrl +\n        '/model-centric/speed-test?is_ping=1&worker_id=' +\n        encodeURIComponent(workerId) +\n        '&random=' +\n        Math.random(),\n    });\n\n    const ping = await speedTest.getPing();\n    // Start tests altogether\n    const [download, upload] = await Promise.all([\n      speedTest.getDownloadSpeed(),\n      speedTest.getUploadSpeed(),\n    ]);\n\n    return {\n      ping,\n      download,\n      upload,\n    };\n  }\n\n  async _send(path, data) {\n    const response =\n      this.transport === 'ws'\n        ? await this._sendWs(path, data)\n        : await this._sendHttp(path, data);\n\n    if (response.error) {\n      throw new Error(response.error);\n    }\n\n    return response;\n  }\n\n  async _sendHttp(path, data, type = 'json') {\n    const method = HTTP_PATH_VERB[path] || 'GET';\n    let response;\n\n    if (method === 'GET') {\n      const query = Object.keys(data)\n        .map((k) => encodeURIComponent(k) + '=' + encodeURIComponent(data[k]))\n        .join('&');\n      response = await fetch(this.httpUrl + '/' + path + '?' + query, {\n        method: 'GET',\n        mode: 'cors',\n      });\n    } else {\n      response = await fetch(this.httpUrl + '/' + path, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n    }\n\n    if (!response.ok) {\n      let error = `${response.status} ${response.statusText}`;\n      try {\n        let res = await response.json();\n        if (res.error) {\n          error = res.error;\n        }\n      } catch (e) {\n        // not JSON\n      }\n      throw new GridError(error);\n    }\n\n    return response[type]();\n  }\n\n  async _sendWs(type, data) {\n    if (!this.ws) {\n      await this._initWs();\n    }\n    const request_id = base64Encode(await createRandomBuffer(32));\n    const message = { request_id, type, data };\n    this.logger.log('Sending WS message', request_id, type);\n\n    return new Promise((resolve, reject) => {\n      this.ws.send(JSON.stringify(message));\n\n      const cleanUp = () => {\n        // Remove all handlers related to message.\n        delete this.wsMessages[request_id];\n        this.observer.unsubscribe('ws-error', onError);\n        this.observer.unsubscribe('ws-close', onClose);\n        clearTimeout(timeoutHandler);\n      };\n\n      const timeoutHandler = setTimeout(() => {\n        cleanUp();\n        reject(new Error('Response timeout'));\n      }, this.responseTimeout);\n\n      const onMessage = (data) => {\n        cleanUp();\n        resolve(data.data);\n      };\n\n      const onError = (event) => {\n        cleanUp();\n        reject(new Error(event));\n      };\n\n      const onClose = () => {\n        cleanUp();\n        reject(new Error('WS connection closed'));\n      };\n\n      // Save response handler under specific request_id.\n      // We expect same request_id in the response.\n      this.wsMessages[request_id] = onMessage;\n\n      // Other events while waiting for response.\n      this.observer.subscribe('ws-error', onError);\n      this.observer.subscribe('ws-close', onClose);\n    });\n  }\n\n  async _initWs() {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(this.wsUrl);\n      ws.onopen = () => {\n        // setup handlers\n        ws.onerror = this._handleWsError;\n        ws.onclose = this._handleWsClose;\n        ws.onmessage = this._handleWsMessage;\n        this.ws = ws;\n        resolve();\n      };\n      ws.onerror = (event) => {\n        // Couldn't connect and error is returned\n        this._handleWsError(event);\n        reject(new Error(event));\n      };\n      ws.onclose = (event) => {\n        // Couldn't connect and connection closed\n        this._handleWsClose(event);\n        reject(new Error('WS connection closed during connect'));\n      };\n    });\n  }\n\n  _handleWsMessage(event) {\n    this.logger.log('Received message', event.data);\n    let data;\n    try {\n      data = JSON.parse(event.data);\n    } catch (e) {\n      this.logger.log('Message is not valid JSON!');\n    }\n\n    // Call response handler, it should be stored under request_id.\n    const request_id = data.request_id;\n    if (request_id && Object.hasOwnProperty.call(this.wsMessages, request_id)) {\n      const handler = this.wsMessages[request_id];\n      handler(data);\n    } else {\n      this.logger.log('Message with unknown request_id');\n    }\n  }\n\n  _handleWsError(event) {\n    this.logger.log('WS connection error', event);\n    this.observer.broadcast('ws-error', event);\n    this.ws = null;\n  }\n\n  _handleWsClose(event) {\n    this.logger.log('WS connection closed', event);\n    this.observer.broadcast('ws-close', event);\n    this.ws = null;\n  }\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Set up buffer utility according to the environment\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.syft_proto = (function() {\n\n    /**\n     * Namespace syft_proto.\n     * @exports syft_proto\n     * @namespace\n     */\n    var syft_proto = {};\n\n    syft_proto.execution = (function() {\n\n        /**\n         * Namespace execution.\n         * @memberof syft_proto\n         * @namespace\n         */\n        var execution = {};\n\n        execution.v1 = (function() {\n\n            /**\n             * Namespace v1.\n             * @memberof syft_proto.execution\n             * @namespace\n             */\n            var v1 = {};\n\n            v1.CommunicationAction = (function() {\n\n                /**\n                 * Properties of a CommunicationAction.\n                 * @memberof syft_proto.execution.v1\n                 * @interface ICommunicationAction\n                 * @property {string|null} [command] CommunicationAction command\n                 * @property {syft_proto.types.syft.v1.IId|null} [target_id] CommunicationAction target_id\n                 * @property {syft_proto.generic.pointers.v1.IPointerTensor|null} [target_pointer] CommunicationAction target_pointer\n                 * @property {syft_proto.execution.v1.IPlaceholderId|null} [target_placeholder_id] CommunicationAction target_placeholder_id\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [target_tensor] CommunicationAction target_tensor\n                 * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] CommunicationAction args\n                 * @property {Object.<string,syft_proto.types.syft.v1.IArg>|null} [kwargs] CommunicationAction kwargs\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [return_ids] CommunicationAction return_ids\n                 * @property {Array.<syft_proto.execution.v1.IPlaceholderId>|null} [return_placeholder_ids] CommunicationAction return_placeholder_ids\n                 */\n\n                /**\n                 * Constructs a new CommunicationAction.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a CommunicationAction.\n                 * @implements ICommunicationAction\n                 * @constructor\n                 * @param {syft_proto.execution.v1.ICommunicationAction=} [properties] Properties to set\n                 */\n                function CommunicationAction(properties) {\n                    this.args = [];\n                    this.kwargs = {};\n                    this.return_ids = [];\n                    this.return_placeholder_ids = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * CommunicationAction command.\n                 * @member {string} command\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.command = \"\";\n\n                /**\n                 * CommunicationAction target_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} target_id\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.target_id = null;\n\n                /**\n                 * CommunicationAction target_pointer.\n                 * @member {syft_proto.generic.pointers.v1.IPointerTensor|null|undefined} target_pointer\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.target_pointer = null;\n\n                /**\n                 * CommunicationAction target_placeholder_id.\n                 * @member {syft_proto.execution.v1.IPlaceholderId|null|undefined} target_placeholder_id\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.target_placeholder_id = null;\n\n                /**\n                 * CommunicationAction target_tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} target_tensor\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.target_tensor = null;\n\n                /**\n                 * CommunicationAction args.\n                 * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.args = $util.emptyArray;\n\n                /**\n                 * CommunicationAction kwargs.\n                 * @member {Object.<string,syft_proto.types.syft.v1.IArg>} kwargs\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.kwargs = $util.emptyObject;\n\n                /**\n                 * CommunicationAction return_ids.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} return_ids\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.return_ids = $util.emptyArray;\n\n                /**\n                 * CommunicationAction return_placeholder_ids.\n                 * @member {Array.<syft_proto.execution.v1.IPlaceholderId>} return_placeholder_ids\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                CommunicationAction.prototype.return_placeholder_ids = $util.emptyArray;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * CommunicationAction target.\n                 * @member {\"target_id\"|\"target_pointer\"|\"target_placeholder_id\"|\"target_tensor\"|undefined} target\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 */\n                Object.defineProperty(CommunicationAction.prototype, \"target\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"target_id\", \"target_pointer\", \"target_placeholder_id\", \"target_tensor\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new CommunicationAction instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.ICommunicationAction=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.CommunicationAction} CommunicationAction instance\n                 */\n                CommunicationAction.create = function create(properties) {\n                    return new CommunicationAction(properties);\n                };\n\n                /**\n                 * Encodes the specified CommunicationAction message. Does not implicitly {@link syft_proto.execution.v1.CommunicationAction.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.ICommunicationAction} message CommunicationAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                CommunicationAction.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.command);\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\"))\n                        $root.syft_proto.generic.pointers.v1.PointerTensor.encode(message.target_pointer, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\"))\n                        $root.syft_proto.execution.v1.PlaceholderId.encode(message.target_placeholder_id, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.target_tensor, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.args != null && message.args.length)\n                        for (var i = 0; i < message.args.length; ++i)\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\"))\n                        for (var keys = Object.keys(message.kwargs), i = 0; i < keys.length; ++i) {\n                            writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.kwargs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                        }\n                    if (message.return_ids != null && message.return_ids.length)\n                        for (var i = 0; i < message.return_ids.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.return_ids[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.return_placeholder_ids != null && message.return_placeholder_ids.length)\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i)\n                            $root.syft_proto.execution.v1.PlaceholderId.encode(message.return_placeholder_ids[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.target_id, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified CommunicationAction message, length delimited. Does not implicitly {@link syft_proto.execution.v1.CommunicationAction.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.ICommunicationAction} message CommunicationAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                CommunicationAction.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a CommunicationAction message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.CommunicationAction} CommunicationAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                CommunicationAction.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.CommunicationAction(), key;\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.command = reader.string();\n                            break;\n                        case 9:\n                            message.target_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            if (!(message.args && message.args.length))\n                                message.args = [];\n                            message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            reader.skip().pos++;\n                            if (message.kwargs === $util.emptyObject)\n                                message.kwargs = {};\n                            key = reader.string();\n                            reader.pos++;\n                            message.kwargs[key] = $root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32());\n                            break;\n                        case 7:\n                            if (!(message.return_ids && message.return_ids.length))\n                                message.return_ids = [];\n                            message.return_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        case 8:\n                            if (!(message.return_placeholder_ids && message.return_placeholder_ids.length))\n                                message.return_placeholder_ids = [];\n                            message.return_placeholder_ids.push($root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a CommunicationAction message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.CommunicationAction} CommunicationAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                CommunicationAction.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a CommunicationAction message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                CommunicationAction.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        if (!$util.isString(message.command))\n                            return \"command: string expected\";\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.target_id);\n                            if (error)\n                                return \"target_id.\" + error;\n                        }\n                    }\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.generic.pointers.v1.PointerTensor.verify(message.target_pointer);\n                            if (error)\n                                return \"target_pointer.\" + error;\n                        }\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.target_placeholder_id);\n                            if (error)\n                                return \"target_placeholder_id.\" + error;\n                        }\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.target_tensor);\n                            if (error)\n                                return \"target_tensor.\" + error;\n                        }\n                    }\n                    if (message.args != null && message.hasOwnProperty(\"args\")) {\n                        if (!Array.isArray(message.args))\n                            return \"args: array expected\";\n                        for (var i = 0; i < message.args.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                            if (error)\n                                return \"args.\" + error;\n                        }\n                    }\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\")) {\n                        if (!$util.isObject(message.kwargs))\n                            return \"kwargs: object expected\";\n                        var key = Object.keys(message.kwargs);\n                        for (var i = 0; i < key.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.kwargs[key[i]]);\n                            if (error)\n                                return \"kwargs.\" + error;\n                        }\n                    }\n                    if (message.return_ids != null && message.hasOwnProperty(\"return_ids\")) {\n                        if (!Array.isArray(message.return_ids))\n                            return \"return_ids: array expected\";\n                        for (var i = 0; i < message.return_ids.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.return_ids[i]);\n                            if (error)\n                                return \"return_ids.\" + error;\n                        }\n                    }\n                    if (message.return_placeholder_ids != null && message.hasOwnProperty(\"return_placeholder_ids\")) {\n                        if (!Array.isArray(message.return_placeholder_ids))\n                            return \"return_placeholder_ids: array expected\";\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.return_placeholder_ids[i]);\n                            if (error)\n                                return \"return_placeholder_ids.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a CommunicationAction message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.CommunicationAction} CommunicationAction\n                 */\n                CommunicationAction.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.CommunicationAction)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.CommunicationAction();\n                    if (object.command != null)\n                        message.command = String(object.command);\n                    if (object.target_id != null) {\n                        if (typeof object.target_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.target_id: object expected\");\n                        message.target_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.target_id);\n                    }\n                    if (object.target_pointer != null) {\n                        if (typeof object.target_pointer !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.target_pointer: object expected\");\n                        message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.fromObject(object.target_pointer);\n                    }\n                    if (object.target_placeholder_id != null) {\n                        if (typeof object.target_placeholder_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.target_placeholder_id: object expected\");\n                        message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.target_placeholder_id);\n                    }\n                    if (object.target_tensor != null) {\n                        if (typeof object.target_tensor !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.target_tensor: object expected\");\n                        message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.target_tensor);\n                    }\n                    if (object.args) {\n                        if (!Array.isArray(object.args))\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.args: array expected\");\n                        message.args = [];\n                        for (var i = 0; i < object.args.length; ++i) {\n                            if (typeof object.args[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.CommunicationAction.args: object expected\");\n                            message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                        }\n                    }\n                    if (object.kwargs) {\n                        if (typeof object.kwargs !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.kwargs: object expected\");\n                        message.kwargs = {};\n                        for (var keys = Object.keys(object.kwargs), i = 0; i < keys.length; ++i) {\n                            if (typeof object.kwargs[keys[i]] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.CommunicationAction.kwargs: object expected\");\n                            message.kwargs[keys[i]] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.kwargs[keys[i]]);\n                        }\n                    }\n                    if (object.return_ids) {\n                        if (!Array.isArray(object.return_ids))\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.return_ids: array expected\");\n                        message.return_ids = [];\n                        for (var i = 0; i < object.return_ids.length; ++i) {\n                            if (typeof object.return_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.CommunicationAction.return_ids: object expected\");\n                            message.return_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.return_ids[i]);\n                        }\n                    }\n                    if (object.return_placeholder_ids) {\n                        if (!Array.isArray(object.return_placeholder_ids))\n                            throw TypeError(\".syft_proto.execution.v1.CommunicationAction.return_placeholder_ids: array expected\");\n                        message.return_placeholder_ids = [];\n                        for (var i = 0; i < object.return_placeholder_ids.length; ++i) {\n                            if (typeof object.return_placeholder_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.CommunicationAction.return_placeholder_ids: object expected\");\n                            message.return_placeholder_ids[i] = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.return_placeholder_ids[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a CommunicationAction message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.CommunicationAction} message CommunicationAction\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                CommunicationAction.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.args = [];\n                        object.return_ids = [];\n                        object.return_placeholder_ids = [];\n                    }\n                    if (options.objects || options.defaults)\n                        object.kwargs = {};\n                    if (options.defaults)\n                        object.command = \"\";\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        object.command = message.command;\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        object.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.toObject(message.target_pointer, options);\n                        if (options.oneofs)\n                            object.target = \"target_pointer\";\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        object.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.target_placeholder_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_placeholder_id\";\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        object.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.target_tensor, options);\n                        if (options.oneofs)\n                            object.target = \"target_tensor\";\n                    }\n                    if (message.args && message.args.length) {\n                        object.args = [];\n                        for (var j = 0; j < message.args.length; ++j)\n                            object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                    }\n                    var keys2;\n                    if (message.kwargs && (keys2 = Object.keys(message.kwargs)).length) {\n                        object.kwargs = {};\n                        for (var j = 0; j < keys2.length; ++j)\n                            object.kwargs[keys2[j]] = $root.syft_proto.types.syft.v1.Arg.toObject(message.kwargs[keys2[j]], options);\n                    }\n                    if (message.return_ids && message.return_ids.length) {\n                        object.return_ids = [];\n                        for (var j = 0; j < message.return_ids.length; ++j)\n                            object.return_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.return_ids[j], options);\n                    }\n                    if (message.return_placeholder_ids && message.return_placeholder_ids.length) {\n                        object.return_placeholder_ids = [];\n                        for (var j = 0; j < message.return_placeholder_ids.length; ++j)\n                            object.return_placeholder_ids[j] = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.return_placeholder_ids[j], options);\n                    }\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        object.target_id = $root.syft_proto.types.syft.v1.Id.toObject(message.target_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_id\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this CommunicationAction to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.CommunicationAction\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                CommunicationAction.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return CommunicationAction;\n            })();\n\n            v1.PlaceholderId = (function() {\n\n                /**\n                 * Properties of a PlaceholderId.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IPlaceholderId\n                 * @property {syft_proto.types.syft.v1.IId|null} [id] PlaceholderId id\n                 */\n\n                /**\n                 * Constructs a new PlaceholderId.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a PlaceholderId.\n                 * @implements IPlaceholderId\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IPlaceholderId=} [properties] Properties to set\n                 */\n                function PlaceholderId(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * PlaceholderId id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @instance\n                 */\n                PlaceholderId.prototype.id = null;\n\n                /**\n                 * Creates a new PlaceholderId instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholderId=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.PlaceholderId} PlaceholderId instance\n                 */\n                PlaceholderId.create = function create(properties) {\n                    return new PlaceholderId(properties);\n                };\n\n                /**\n                 * Encodes the specified PlaceholderId message. Does not implicitly {@link syft_proto.execution.v1.PlaceholderId.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholderId} message PlaceholderId message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlaceholderId.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified PlaceholderId message, length delimited. Does not implicitly {@link syft_proto.execution.v1.PlaceholderId.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholderId} message PlaceholderId message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlaceholderId.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a PlaceholderId message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.PlaceholderId} PlaceholderId\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlaceholderId.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.PlaceholderId();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a PlaceholderId message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.PlaceholderId} PlaceholderId\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlaceholderId.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a PlaceholderId message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                PlaceholderId.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.id != null && message.hasOwnProperty(\"id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                        if (error)\n                            return \"id.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a PlaceholderId message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.PlaceholderId} PlaceholderId\n                 */\n                PlaceholderId.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.PlaceholderId)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.PlaceholderId();\n                    if (object.id != null) {\n                        if (typeof object.id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.PlaceholderId.id: object expected\");\n                        message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a PlaceholderId message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @static\n                 * @param {syft_proto.execution.v1.PlaceholderId} message PlaceholderId\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                PlaceholderId.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.id = null;\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this PlaceholderId to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.PlaceholderId\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                PlaceholderId.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return PlaceholderId;\n            })();\n\n            v1.Placeholder = (function() {\n\n                /**\n                 * Properties of a Placeholder.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IPlaceholder\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [child_tensor] Placeholder child_tensor\n                 * @property {syft_proto.types.torch.v1.IParameter|null} [child_parameter] Placeholder child_parameter\n                 * @property {syft_proto.types.syft.v1.IId|null} [id] Placeholder id\n                 * @property {Array.<string>|null} [tags] Placeholder tags\n                 * @property {string|null} [description] Placeholder description\n                 * @property {syft_proto.types.syft.v1.IShape|null} [expected_shape] Placeholder expected_shape\n                 */\n\n                /**\n                 * Constructs a new Placeholder.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a Placeholder.\n                 * @implements IPlaceholder\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IPlaceholder=} [properties] Properties to set\n                 */\n                function Placeholder(properties) {\n                    this.tags = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Placeholder child_tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} child_tensor\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.child_tensor = null;\n\n                /**\n                 * Placeholder child_parameter.\n                 * @member {syft_proto.types.torch.v1.IParameter|null|undefined} child_parameter\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.child_parameter = null;\n\n                /**\n                 * Placeholder id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.id = null;\n\n                /**\n                 * Placeholder tags.\n                 * @member {Array.<string>} tags\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.tags = $util.emptyArray;\n\n                /**\n                 * Placeholder description.\n                 * @member {string} description\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.description = \"\";\n\n                /**\n                 * Placeholder expected_shape.\n                 * @member {syft_proto.types.syft.v1.IShape|null|undefined} expected_shape\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Placeholder.prototype.expected_shape = null;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * Placeholder child.\n                 * @member {\"child_tensor\"|\"child_parameter\"|undefined} child\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 */\n                Object.defineProperty(Placeholder.prototype, \"child\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"child_tensor\", \"child_parameter\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new Placeholder instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholder=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.Placeholder} Placeholder instance\n                 */\n                Placeholder.create = function create(properties) {\n                    return new Placeholder(properties);\n                };\n\n                /**\n                 * Encodes the specified Placeholder message. Does not implicitly {@link syft_proto.execution.v1.Placeholder.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholder} message Placeholder message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Placeholder.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.child_tensor != null && message.hasOwnProperty(\"child_tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.child_tensor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.child_parameter != null && message.hasOwnProperty(\"child_parameter\"))\n                        $root.syft_proto.types.torch.v1.Parameter.encode(message.child_parameter, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.tags != null && message.tags.length)\n                        for (var i = 0; i < message.tags.length; ++i)\n                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);\n                    if (message.expected_shape != null && message.hasOwnProperty(\"expected_shape\"))\n                        $root.syft_proto.types.syft.v1.Shape.encode(message.expected_shape, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Placeholder message, length delimited. Does not implicitly {@link syft_proto.execution.v1.Placeholder.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlaceholder} message Placeholder message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Placeholder.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Placeholder message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.Placeholder} Placeholder\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Placeholder.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.Placeholder();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.child_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.child_parameter = $root.syft_proto.types.torch.v1.Parameter.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            if (!(message.tags && message.tags.length))\n                                message.tags = [];\n                            message.tags.push(reader.string());\n                            break;\n                        case 5:\n                            message.description = reader.string();\n                            break;\n                        case 6:\n                            message.expected_shape = $root.syft_proto.types.syft.v1.Shape.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Placeholder message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.Placeholder} Placeholder\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Placeholder.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Placeholder message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Placeholder.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.child_tensor != null && message.hasOwnProperty(\"child_tensor\")) {\n                        properties.child = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.child_tensor);\n                            if (error)\n                                return \"child_tensor.\" + error;\n                        }\n                    }\n                    if (message.child_parameter != null && message.hasOwnProperty(\"child_parameter\")) {\n                        if (properties.child === 1)\n                            return \"child: multiple values\";\n                        properties.child = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.Parameter.verify(message.child_parameter);\n                            if (error)\n                                return \"child_parameter.\" + error;\n                        }\n                    }\n                    if (message.id != null && message.hasOwnProperty(\"id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                        if (error)\n                            return \"id.\" + error;\n                    }\n                    if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                        if (!Array.isArray(message.tags))\n                            return \"tags: array expected\";\n                        for (var i = 0; i < message.tags.length; ++i)\n                            if (!$util.isString(message.tags[i]))\n                                return \"tags: string[] expected\";\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        if (!$util.isString(message.description))\n                            return \"description: string expected\";\n                    if (message.expected_shape != null && message.hasOwnProperty(\"expected_shape\")) {\n                        var error = $root.syft_proto.types.syft.v1.Shape.verify(message.expected_shape);\n                        if (error)\n                            return \"expected_shape.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a Placeholder message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.Placeholder} Placeholder\n                 */\n                Placeholder.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.Placeholder)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.Placeholder();\n                    if (object.child_tensor != null) {\n                        if (typeof object.child_tensor !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Placeholder.child_tensor: object expected\");\n                        message.child_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.child_tensor);\n                    }\n                    if (object.child_parameter != null) {\n                        if (typeof object.child_parameter !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Placeholder.child_parameter: object expected\");\n                        message.child_parameter = $root.syft_proto.types.torch.v1.Parameter.fromObject(object.child_parameter);\n                    }\n                    if (object.id != null) {\n                        if (typeof object.id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Placeholder.id: object expected\");\n                        message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                    }\n                    if (object.tags) {\n                        if (!Array.isArray(object.tags))\n                            throw TypeError(\".syft_proto.execution.v1.Placeholder.tags: array expected\");\n                        message.tags = [];\n                        for (var i = 0; i < object.tags.length; ++i)\n                            message.tags[i] = String(object.tags[i]);\n                    }\n                    if (object.description != null)\n                        message.description = String(object.description);\n                    if (object.expected_shape != null) {\n                        if (typeof object.expected_shape !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Placeholder.expected_shape: object expected\");\n                        message.expected_shape = $root.syft_proto.types.syft.v1.Shape.fromObject(object.expected_shape);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Placeholder message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @static\n                 * @param {syft_proto.execution.v1.Placeholder} message Placeholder\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Placeholder.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.tags = [];\n                    if (options.defaults) {\n                        object.id = null;\n                        object.description = \"\";\n                        object.expected_shape = null;\n                    }\n                    if (message.child_tensor != null && message.hasOwnProperty(\"child_tensor\")) {\n                        object.child_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.child_tensor, options);\n                        if (options.oneofs)\n                            object.child = \"child_tensor\";\n                    }\n                    if (message.child_parameter != null && message.hasOwnProperty(\"child_parameter\")) {\n                        object.child_parameter = $root.syft_proto.types.torch.v1.Parameter.toObject(message.child_parameter, options);\n                        if (options.oneofs)\n                            object.child = \"child_parameter\";\n                    }\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                    if (message.tags && message.tags.length) {\n                        object.tags = [];\n                        for (var j = 0; j < message.tags.length; ++j)\n                            object.tags[j] = message.tags[j];\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        object.description = message.description;\n                    if (message.expected_shape != null && message.hasOwnProperty(\"expected_shape\"))\n                        object.expected_shape = $root.syft_proto.types.syft.v1.Shape.toObject(message.expected_shape, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this Placeholder to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.Placeholder\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Placeholder.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Placeholder;\n            })();\n\n            v1.ComputationAction = (function() {\n\n                /**\n                 * Properties of a ComputationAction.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IComputationAction\n                 * @property {string|null} [command] ComputationAction command\n                 * @property {syft_proto.types.syft.v1.IId|null} [target_id] ComputationAction target_id\n                 * @property {syft_proto.generic.pointers.v1.IPointerTensor|null} [target_pointer] ComputationAction target_pointer\n                 * @property {syft_proto.execution.v1.IPlaceholderId|null} [target_placeholder_id] ComputationAction target_placeholder_id\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [target_tensor] ComputationAction target_tensor\n                 * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] ComputationAction args\n                 * @property {Object.<string,syft_proto.types.syft.v1.IArg>|null} [kwargs] ComputationAction kwargs\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [return_ids] ComputationAction return_ids\n                 * @property {Array.<syft_proto.execution.v1.IPlaceholderId>|null} [return_placeholder_ids] ComputationAction return_placeholder_ids\n                 */\n\n                /**\n                 * Constructs a new ComputationAction.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a ComputationAction.\n                 * @implements IComputationAction\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IComputationAction=} [properties] Properties to set\n                 */\n                function ComputationAction(properties) {\n                    this.args = [];\n                    this.kwargs = {};\n                    this.return_ids = [];\n                    this.return_placeholder_ids = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ComputationAction command.\n                 * @member {string} command\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.command = \"\";\n\n                /**\n                 * ComputationAction target_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} target_id\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.target_id = null;\n\n                /**\n                 * ComputationAction target_pointer.\n                 * @member {syft_proto.generic.pointers.v1.IPointerTensor|null|undefined} target_pointer\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.target_pointer = null;\n\n                /**\n                 * ComputationAction target_placeholder_id.\n                 * @member {syft_proto.execution.v1.IPlaceholderId|null|undefined} target_placeholder_id\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.target_placeholder_id = null;\n\n                /**\n                 * ComputationAction target_tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} target_tensor\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.target_tensor = null;\n\n                /**\n                 * ComputationAction args.\n                 * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.args = $util.emptyArray;\n\n                /**\n                 * ComputationAction kwargs.\n                 * @member {Object.<string,syft_proto.types.syft.v1.IArg>} kwargs\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.kwargs = $util.emptyObject;\n\n                /**\n                 * ComputationAction return_ids.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} return_ids\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.return_ids = $util.emptyArray;\n\n                /**\n                 * ComputationAction return_placeholder_ids.\n                 * @member {Array.<syft_proto.execution.v1.IPlaceholderId>} return_placeholder_ids\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                ComputationAction.prototype.return_placeholder_ids = $util.emptyArray;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * ComputationAction target.\n                 * @member {\"target_id\"|\"target_pointer\"|\"target_placeholder_id\"|\"target_tensor\"|undefined} target\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 */\n                Object.defineProperty(ComputationAction.prototype, \"target\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"target_id\", \"target_pointer\", \"target_placeholder_id\", \"target_tensor\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new ComputationAction instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IComputationAction=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.ComputationAction} ComputationAction instance\n                 */\n                ComputationAction.create = function create(properties) {\n                    return new ComputationAction(properties);\n                };\n\n                /**\n                 * Encodes the specified ComputationAction message. Does not implicitly {@link syft_proto.execution.v1.ComputationAction.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IComputationAction} message ComputationAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ComputationAction.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.command);\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\"))\n                        $root.syft_proto.generic.pointers.v1.PointerTensor.encode(message.target_pointer, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\"))\n                        $root.syft_proto.execution.v1.PlaceholderId.encode(message.target_placeholder_id, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.target_tensor, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.args != null && message.args.length)\n                        for (var i = 0; i < message.args.length; ++i)\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\"))\n                        for (var keys = Object.keys(message.kwargs), i = 0; i < keys.length; ++i) {\n                            writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.kwargs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                        }\n                    if (message.return_ids != null && message.return_ids.length)\n                        for (var i = 0; i < message.return_ids.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.return_ids[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.return_placeholder_ids != null && message.return_placeholder_ids.length)\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i)\n                            $root.syft_proto.execution.v1.PlaceholderId.encode(message.return_placeholder_ids[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.target_id, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ComputationAction message, length delimited. Does not implicitly {@link syft_proto.execution.v1.ComputationAction.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IComputationAction} message ComputationAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ComputationAction.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ComputationAction message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.ComputationAction} ComputationAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ComputationAction.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.ComputationAction(), key;\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.command = reader.string();\n                            break;\n                        case 9:\n                            message.target_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            if (!(message.args && message.args.length))\n                                message.args = [];\n                            message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            reader.skip().pos++;\n                            if (message.kwargs === $util.emptyObject)\n                                message.kwargs = {};\n                            key = reader.string();\n                            reader.pos++;\n                            message.kwargs[key] = $root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32());\n                            break;\n                        case 7:\n                            if (!(message.return_ids && message.return_ids.length))\n                                message.return_ids = [];\n                            message.return_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        case 8:\n                            if (!(message.return_placeholder_ids && message.return_placeholder_ids.length))\n                                message.return_placeholder_ids = [];\n                            message.return_placeholder_ids.push($root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ComputationAction message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.ComputationAction} ComputationAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ComputationAction.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ComputationAction message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ComputationAction.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        if (!$util.isString(message.command))\n                            return \"command: string expected\";\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.target_id);\n                            if (error)\n                                return \"target_id.\" + error;\n                        }\n                    }\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.generic.pointers.v1.PointerTensor.verify(message.target_pointer);\n                            if (error)\n                                return \"target_pointer.\" + error;\n                        }\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.target_placeholder_id);\n                            if (error)\n                                return \"target_placeholder_id.\" + error;\n                        }\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.target_tensor);\n                            if (error)\n                                return \"target_tensor.\" + error;\n                        }\n                    }\n                    if (message.args != null && message.hasOwnProperty(\"args\")) {\n                        if (!Array.isArray(message.args))\n                            return \"args: array expected\";\n                        for (var i = 0; i < message.args.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                            if (error)\n                                return \"args.\" + error;\n                        }\n                    }\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\")) {\n                        if (!$util.isObject(message.kwargs))\n                            return \"kwargs: object expected\";\n                        var key = Object.keys(message.kwargs);\n                        for (var i = 0; i < key.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.kwargs[key[i]]);\n                            if (error)\n                                return \"kwargs.\" + error;\n                        }\n                    }\n                    if (message.return_ids != null && message.hasOwnProperty(\"return_ids\")) {\n                        if (!Array.isArray(message.return_ids))\n                            return \"return_ids: array expected\";\n                        for (var i = 0; i < message.return_ids.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.return_ids[i]);\n                            if (error)\n                                return \"return_ids.\" + error;\n                        }\n                    }\n                    if (message.return_placeholder_ids != null && message.hasOwnProperty(\"return_placeholder_ids\")) {\n                        if (!Array.isArray(message.return_placeholder_ids))\n                            return \"return_placeholder_ids: array expected\";\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.return_placeholder_ids[i]);\n                            if (error)\n                                return \"return_placeholder_ids.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a ComputationAction message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.ComputationAction} ComputationAction\n                 */\n                ComputationAction.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.ComputationAction)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.ComputationAction();\n                    if (object.command != null)\n                        message.command = String(object.command);\n                    if (object.target_id != null) {\n                        if (typeof object.target_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.target_id: object expected\");\n                        message.target_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.target_id);\n                    }\n                    if (object.target_pointer != null) {\n                        if (typeof object.target_pointer !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.target_pointer: object expected\");\n                        message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.fromObject(object.target_pointer);\n                    }\n                    if (object.target_placeholder_id != null) {\n                        if (typeof object.target_placeholder_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.target_placeholder_id: object expected\");\n                        message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.target_placeholder_id);\n                    }\n                    if (object.target_tensor != null) {\n                        if (typeof object.target_tensor !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.target_tensor: object expected\");\n                        message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.target_tensor);\n                    }\n                    if (object.args) {\n                        if (!Array.isArray(object.args))\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.args: array expected\");\n                        message.args = [];\n                        for (var i = 0; i < object.args.length; ++i) {\n                            if (typeof object.args[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.ComputationAction.args: object expected\");\n                            message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                        }\n                    }\n                    if (object.kwargs) {\n                        if (typeof object.kwargs !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.kwargs: object expected\");\n                        message.kwargs = {};\n                        for (var keys = Object.keys(object.kwargs), i = 0; i < keys.length; ++i) {\n                            if (typeof object.kwargs[keys[i]] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.ComputationAction.kwargs: object expected\");\n                            message.kwargs[keys[i]] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.kwargs[keys[i]]);\n                        }\n                    }\n                    if (object.return_ids) {\n                        if (!Array.isArray(object.return_ids))\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.return_ids: array expected\");\n                        message.return_ids = [];\n                        for (var i = 0; i < object.return_ids.length; ++i) {\n                            if (typeof object.return_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.ComputationAction.return_ids: object expected\");\n                            message.return_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.return_ids[i]);\n                        }\n                    }\n                    if (object.return_placeholder_ids) {\n                        if (!Array.isArray(object.return_placeholder_ids))\n                            throw TypeError(\".syft_proto.execution.v1.ComputationAction.return_placeholder_ids: array expected\");\n                        message.return_placeholder_ids = [];\n                        for (var i = 0; i < object.return_placeholder_ids.length; ++i) {\n                            if (typeof object.return_placeholder_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.ComputationAction.return_placeholder_ids: object expected\");\n                            message.return_placeholder_ids[i] = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.return_placeholder_ids[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ComputationAction message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @static\n                 * @param {syft_proto.execution.v1.ComputationAction} message ComputationAction\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ComputationAction.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.args = [];\n                        object.return_ids = [];\n                        object.return_placeholder_ids = [];\n                    }\n                    if (options.objects || options.defaults)\n                        object.kwargs = {};\n                    if (options.defaults)\n                        object.command = \"\";\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        object.command = message.command;\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        object.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.toObject(message.target_pointer, options);\n                        if (options.oneofs)\n                            object.target = \"target_pointer\";\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        object.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.target_placeholder_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_placeholder_id\";\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        object.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.target_tensor, options);\n                        if (options.oneofs)\n                            object.target = \"target_tensor\";\n                    }\n                    if (message.args && message.args.length) {\n                        object.args = [];\n                        for (var j = 0; j < message.args.length; ++j)\n                            object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                    }\n                    var keys2;\n                    if (message.kwargs && (keys2 = Object.keys(message.kwargs)).length) {\n                        object.kwargs = {};\n                        for (var j = 0; j < keys2.length; ++j)\n                            object.kwargs[keys2[j]] = $root.syft_proto.types.syft.v1.Arg.toObject(message.kwargs[keys2[j]], options);\n                    }\n                    if (message.return_ids && message.return_ids.length) {\n                        object.return_ids = [];\n                        for (var j = 0; j < message.return_ids.length; ++j)\n                            object.return_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.return_ids[j], options);\n                    }\n                    if (message.return_placeholder_ids && message.return_placeholder_ids.length) {\n                        object.return_placeholder_ids = [];\n                        for (var j = 0; j < message.return_placeholder_ids.length; ++j)\n                            object.return_placeholder_ids[j] = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.return_placeholder_ids[j], options);\n                    }\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        object.target_id = $root.syft_proto.types.syft.v1.Id.toObject(message.target_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_id\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this ComputationAction to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.ComputationAction\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ComputationAction.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ComputationAction;\n            })();\n\n            v1.Plan = (function() {\n\n                /**\n                 * Properties of a Plan.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IPlan\n                 * @property {syft_proto.types.syft.v1.IId|null} [id] Plan id\n                 * @property {syft_proto.execution.v1.IRole|null} [role] Plan role\n                 * @property {boolean|null} [include_state] Plan include_state\n                 * @property {string|null} [name] Plan name\n                 * @property {Array.<string>|null} [tags] Plan tags\n                 * @property {string|null} [description] Plan description\n                 * @property {Uint8Array|null} [torchscript] Plan torchscript\n                 * @property {syft_proto.execution.v1.INestedTypeWrapper|null} [input_types] Plan input_types\n                 * @property {string|null} [base_framework] Plan base_framework\n                 * @property {Object.<string,syft_proto.execution.v1.IRole>|null} [roles] Plan roles\n                 */\n\n                /**\n                 * Constructs a new Plan.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a Plan.\n                 * @implements IPlan\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IPlan=} [properties] Properties to set\n                 */\n                function Plan(properties) {\n                    this.tags = [];\n                    this.roles = {};\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Plan id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.id = null;\n\n                /**\n                 * Plan role.\n                 * @member {syft_proto.execution.v1.IRole|null|undefined} role\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.role = null;\n\n                /**\n                 * Plan include_state.\n                 * @member {boolean} include_state\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.include_state = false;\n\n                /**\n                 * Plan name.\n                 * @member {string} name\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.name = \"\";\n\n                /**\n                 * Plan tags.\n                 * @member {Array.<string>} tags\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.tags = $util.emptyArray;\n\n                /**\n                 * Plan description.\n                 * @member {string} description\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.description = \"\";\n\n                /**\n                 * Plan torchscript.\n                 * @member {Uint8Array} torchscript\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.torchscript = $util.newBuffer([]);\n\n                /**\n                 * Plan input_types.\n                 * @member {syft_proto.execution.v1.INestedTypeWrapper|null|undefined} input_types\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.input_types = null;\n\n                /**\n                 * Plan base_framework.\n                 * @member {string} base_framework\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.base_framework = \"\";\n\n                /**\n                 * Plan roles.\n                 * @member {Object.<string,syft_proto.execution.v1.IRole>} roles\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 */\n                Plan.prototype.roles = $util.emptyObject;\n\n                /**\n                 * Creates a new Plan instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlan=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.Plan} Plan instance\n                 */\n                Plan.create = function create(properties) {\n                    return new Plan(properties);\n                };\n\n                /**\n                 * Encodes the specified Plan message. Does not implicitly {@link syft_proto.execution.v1.Plan.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlan} message Plan message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Plan.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.role != null && message.hasOwnProperty(\"role\"))\n                        $root.syft_proto.execution.v1.Role.encode(message.role, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.include_state != null && message.hasOwnProperty(\"include_state\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.include_state);\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);\n                    if (message.tags != null && message.tags.length)\n                        for (var i = 0; i < message.tags.length; ++i)\n                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.tags[i]);\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);\n                    if (message.torchscript != null && message.hasOwnProperty(\"torchscript\"))\n                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.torchscript);\n                    if (message.input_types != null && message.hasOwnProperty(\"input_types\"))\n                        $root.syft_proto.execution.v1.NestedTypeWrapper.encode(message.input_types, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.base_framework != null && message.hasOwnProperty(\"base_framework\"))\n                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.base_framework);\n                    if (message.roles != null && message.hasOwnProperty(\"roles\"))\n                        for (var keys = Object.keys(message.roles), i = 0; i < keys.length; ++i) {\n                            writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                            $root.syft_proto.execution.v1.Role.encode(message.roles[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                        }\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Plan message, length delimited. Does not implicitly {@link syft_proto.execution.v1.Plan.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {syft_proto.execution.v1.IPlan} message Plan message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Plan.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Plan message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.Plan} Plan\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Plan.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.Plan(), key;\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.role = $root.syft_proto.execution.v1.Role.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.include_state = reader.bool();\n                            break;\n                        case 4:\n                            message.name = reader.string();\n                            break;\n                        case 5:\n                            if (!(message.tags && message.tags.length))\n                                message.tags = [];\n                            message.tags.push(reader.string());\n                            break;\n                        case 6:\n                            message.description = reader.string();\n                            break;\n                        case 7:\n                            message.torchscript = reader.bytes();\n                            break;\n                        case 8:\n                            message.input_types = $root.syft_proto.execution.v1.NestedTypeWrapper.decode(reader, reader.uint32());\n                            break;\n                        case 9:\n                            message.base_framework = reader.string();\n                            break;\n                        case 10:\n                            reader.skip().pos++;\n                            if (message.roles === $util.emptyObject)\n                                message.roles = {};\n                            key = reader.string();\n                            reader.pos++;\n                            message.roles[key] = $root.syft_proto.execution.v1.Role.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Plan message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.Plan} Plan\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Plan.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Plan message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Plan.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.id != null && message.hasOwnProperty(\"id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                        if (error)\n                            return \"id.\" + error;\n                    }\n                    if (message.role != null && message.hasOwnProperty(\"role\")) {\n                        var error = $root.syft_proto.execution.v1.Role.verify(message.role);\n                        if (error)\n                            return \"role.\" + error;\n                    }\n                    if (message.include_state != null && message.hasOwnProperty(\"include_state\"))\n                        if (typeof message.include_state !== \"boolean\")\n                            return \"include_state: boolean expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                        if (!Array.isArray(message.tags))\n                            return \"tags: array expected\";\n                        for (var i = 0; i < message.tags.length; ++i)\n                            if (!$util.isString(message.tags[i]))\n                                return \"tags: string[] expected\";\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        if (!$util.isString(message.description))\n                            return \"description: string expected\";\n                    if (message.torchscript != null && message.hasOwnProperty(\"torchscript\"))\n                        if (!(message.torchscript && typeof message.torchscript.length === \"number\" || $util.isString(message.torchscript)))\n                            return \"torchscript: buffer expected\";\n                    if (message.input_types != null && message.hasOwnProperty(\"input_types\")) {\n                        var error = $root.syft_proto.execution.v1.NestedTypeWrapper.verify(message.input_types);\n                        if (error)\n                            return \"input_types.\" + error;\n                    }\n                    if (message.base_framework != null && message.hasOwnProperty(\"base_framework\"))\n                        if (!$util.isString(message.base_framework))\n                            return \"base_framework: string expected\";\n                    if (message.roles != null && message.hasOwnProperty(\"roles\")) {\n                        if (!$util.isObject(message.roles))\n                            return \"roles: object expected\";\n                        var key = Object.keys(message.roles);\n                        for (var i = 0; i < key.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.Role.verify(message.roles[key[i]]);\n                            if (error)\n                                return \"roles.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a Plan message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.Plan} Plan\n                 */\n                Plan.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.Plan)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.Plan();\n                    if (object.id != null) {\n                        if (typeof object.id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Plan.id: object expected\");\n                        message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                    }\n                    if (object.role != null) {\n                        if (typeof object.role !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Plan.role: object expected\");\n                        message.role = $root.syft_proto.execution.v1.Role.fromObject(object.role);\n                    }\n                    if (object.include_state != null)\n                        message.include_state = Boolean(object.include_state);\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.tags) {\n                        if (!Array.isArray(object.tags))\n                            throw TypeError(\".syft_proto.execution.v1.Plan.tags: array expected\");\n                        message.tags = [];\n                        for (var i = 0; i < object.tags.length; ++i)\n                            message.tags[i] = String(object.tags[i]);\n                    }\n                    if (object.description != null)\n                        message.description = String(object.description);\n                    if (object.torchscript != null)\n                        if (typeof object.torchscript === \"string\")\n                            $util.base64.decode(object.torchscript, message.torchscript = $util.newBuffer($util.base64.length(object.torchscript)), 0);\n                        else if (object.torchscript.length)\n                            message.torchscript = object.torchscript;\n                    if (object.input_types != null) {\n                        if (typeof object.input_types !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Plan.input_types: object expected\");\n                        message.input_types = $root.syft_proto.execution.v1.NestedTypeWrapper.fromObject(object.input_types);\n                    }\n                    if (object.base_framework != null)\n                        message.base_framework = String(object.base_framework);\n                    if (object.roles) {\n                        if (typeof object.roles !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Plan.roles: object expected\");\n                        message.roles = {};\n                        for (var keys = Object.keys(object.roles), i = 0; i < keys.length; ++i) {\n                            if (typeof object.roles[keys[i]] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Plan.roles: object expected\");\n                            message.roles[keys[i]] = $root.syft_proto.execution.v1.Role.fromObject(object.roles[keys[i]]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Plan message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @static\n                 * @param {syft_proto.execution.v1.Plan} message Plan\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Plan.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.tags = [];\n                    if (options.objects || options.defaults)\n                        object.roles = {};\n                    if (options.defaults) {\n                        object.id = null;\n                        object.role = null;\n                        object.include_state = false;\n                        object.name = \"\";\n                        object.description = \"\";\n                        if (options.bytes === String)\n                            object.torchscript = \"\";\n                        else {\n                            object.torchscript = [];\n                            if (options.bytes !== Array)\n                                object.torchscript = $util.newBuffer(object.torchscript);\n                        }\n                        object.input_types = null;\n                        object.base_framework = \"\";\n                    }\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                    if (message.role != null && message.hasOwnProperty(\"role\"))\n                        object.role = $root.syft_proto.execution.v1.Role.toObject(message.role, options);\n                    if (message.include_state != null && message.hasOwnProperty(\"include_state\"))\n                        object.include_state = message.include_state;\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.tags && message.tags.length) {\n                        object.tags = [];\n                        for (var j = 0; j < message.tags.length; ++j)\n                            object.tags[j] = message.tags[j];\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        object.description = message.description;\n                    if (message.torchscript != null && message.hasOwnProperty(\"torchscript\"))\n                        object.torchscript = options.bytes === String ? $util.base64.encode(message.torchscript, 0, message.torchscript.length) : options.bytes === Array ? Array.prototype.slice.call(message.torchscript) : message.torchscript;\n                    if (message.input_types != null && message.hasOwnProperty(\"input_types\"))\n                        object.input_types = $root.syft_proto.execution.v1.NestedTypeWrapper.toObject(message.input_types, options);\n                    if (message.base_framework != null && message.hasOwnProperty(\"base_framework\"))\n                        object.base_framework = message.base_framework;\n                    var keys2;\n                    if (message.roles && (keys2 = Object.keys(message.roles)).length) {\n                        object.roles = {};\n                        for (var j = 0; j < keys2.length; ++j)\n                            object.roles[keys2[j]] = $root.syft_proto.execution.v1.Role.toObject(message.roles[keys2[j]], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Plan to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.Plan\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Plan.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Plan;\n            })();\n\n            v1.Role = (function() {\n\n                /**\n                 * Properties of a Role.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IRole\n                 * @property {syft_proto.types.syft.v1.IId|null} [id] Role id\n                 * @property {Array.<syft_proto.execution.v1.IComputationAction>|null} [actions] Role actions\n                 * @property {syft_proto.execution.v1.IState|null} [state] Role state\n                 * @property {Array.<syft_proto.execution.v1.IPlaceholder>|null} [placeholders] Role placeholders\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [input_placeholder_ids] Role input_placeholder_ids\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [output_placeholder_ids] Role output_placeholder_ids\n                 * @property {Array.<string>|null} [tags] Role tags\n                 * @property {string|null} [description] Role description\n                 */\n\n                /**\n                 * Constructs a new Role.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a Role.\n                 * @implements IRole\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IRole=} [properties] Properties to set\n                 */\n                function Role(properties) {\n                    this.actions = [];\n                    this.placeholders = [];\n                    this.input_placeholder_ids = [];\n                    this.output_placeholder_ids = [];\n                    this.tags = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Role id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.id = null;\n\n                /**\n                 * Role actions.\n                 * @member {Array.<syft_proto.execution.v1.IComputationAction>} actions\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.actions = $util.emptyArray;\n\n                /**\n                 * Role state.\n                 * @member {syft_proto.execution.v1.IState|null|undefined} state\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.state = null;\n\n                /**\n                 * Role placeholders.\n                 * @member {Array.<syft_proto.execution.v1.IPlaceholder>} placeholders\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.placeholders = $util.emptyArray;\n\n                /**\n                 * Role input_placeholder_ids.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} input_placeholder_ids\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.input_placeholder_ids = $util.emptyArray;\n\n                /**\n                 * Role output_placeholder_ids.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} output_placeholder_ids\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.output_placeholder_ids = $util.emptyArray;\n\n                /**\n                 * Role tags.\n                 * @member {Array.<string>} tags\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.tags = $util.emptyArray;\n\n                /**\n                 * Role description.\n                 * @member {string} description\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 */\n                Role.prototype.description = \"\";\n\n                /**\n                 * Creates a new Role instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {syft_proto.execution.v1.IRole=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.Role} Role instance\n                 */\n                Role.create = function create(properties) {\n                    return new Role(properties);\n                };\n\n                /**\n                 * Encodes the specified Role message. Does not implicitly {@link syft_proto.execution.v1.Role.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {syft_proto.execution.v1.IRole} message Role message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Role.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.actions != null && message.actions.length)\n                        for (var i = 0; i < message.actions.length; ++i)\n                            $root.syft_proto.execution.v1.ComputationAction.encode(message.actions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.state != null && message.hasOwnProperty(\"state\"))\n                        $root.syft_proto.execution.v1.State.encode(message.state, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.placeholders != null && message.placeholders.length)\n                        for (var i = 0; i < message.placeholders.length; ++i)\n                            $root.syft_proto.execution.v1.Placeholder.encode(message.placeholders[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.input_placeholder_ids != null && message.input_placeholder_ids.length)\n                        for (var i = 0; i < message.input_placeholder_ids.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.input_placeholder_ids[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.output_placeholder_ids != null && message.output_placeholder_ids.length)\n                        for (var i = 0; i < message.output_placeholder_ids.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.output_placeholder_ids[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                    if (message.tags != null && message.tags.length)\n                        for (var i = 0; i < message.tags.length; ++i)\n                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.tags[i]);\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.description);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Role message, length delimited. Does not implicitly {@link syft_proto.execution.v1.Role.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {syft_proto.execution.v1.IRole} message Role message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Role.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Role message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.Role} Role\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Role.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.Role();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            if (!(message.actions && message.actions.length))\n                                message.actions = [];\n                            message.actions.push($root.syft_proto.execution.v1.ComputationAction.decode(reader, reader.uint32()));\n                            break;\n                        case 3:\n                            message.state = $root.syft_proto.execution.v1.State.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            if (!(message.placeholders && message.placeholders.length))\n                                message.placeholders = [];\n                            message.placeholders.push($root.syft_proto.execution.v1.Placeholder.decode(reader, reader.uint32()));\n                            break;\n                        case 5:\n                            if (!(message.input_placeholder_ids && message.input_placeholder_ids.length))\n                                message.input_placeholder_ids = [];\n                            message.input_placeholder_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            if (!(message.output_placeholder_ids && message.output_placeholder_ids.length))\n                                message.output_placeholder_ids = [];\n                            message.output_placeholder_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        case 7:\n                            if (!(message.tags && message.tags.length))\n                                message.tags = [];\n                            message.tags.push(reader.string());\n                            break;\n                        case 8:\n                            message.description = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Role message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.Role} Role\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Role.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Role message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Role.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.id != null && message.hasOwnProperty(\"id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                        if (error)\n                            return \"id.\" + error;\n                    }\n                    if (message.actions != null && message.hasOwnProperty(\"actions\")) {\n                        if (!Array.isArray(message.actions))\n                            return \"actions: array expected\";\n                        for (var i = 0; i < message.actions.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.ComputationAction.verify(message.actions[i]);\n                            if (error)\n                                return \"actions.\" + error;\n                        }\n                    }\n                    if (message.state != null && message.hasOwnProperty(\"state\")) {\n                        var error = $root.syft_proto.execution.v1.State.verify(message.state);\n                        if (error)\n                            return \"state.\" + error;\n                    }\n                    if (message.placeholders != null && message.hasOwnProperty(\"placeholders\")) {\n                        if (!Array.isArray(message.placeholders))\n                            return \"placeholders: array expected\";\n                        for (var i = 0; i < message.placeholders.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.Placeholder.verify(message.placeholders[i]);\n                            if (error)\n                                return \"placeholders.\" + error;\n                        }\n                    }\n                    if (message.input_placeholder_ids != null && message.hasOwnProperty(\"input_placeholder_ids\")) {\n                        if (!Array.isArray(message.input_placeholder_ids))\n                            return \"input_placeholder_ids: array expected\";\n                        for (var i = 0; i < message.input_placeholder_ids.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.input_placeholder_ids[i]);\n                            if (error)\n                                return \"input_placeholder_ids.\" + error;\n                        }\n                    }\n                    if (message.output_placeholder_ids != null && message.hasOwnProperty(\"output_placeholder_ids\")) {\n                        if (!Array.isArray(message.output_placeholder_ids))\n                            return \"output_placeholder_ids: array expected\";\n                        for (var i = 0; i < message.output_placeholder_ids.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.output_placeholder_ids[i]);\n                            if (error)\n                                return \"output_placeholder_ids.\" + error;\n                        }\n                    }\n                    if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                        if (!Array.isArray(message.tags))\n                            return \"tags: array expected\";\n                        for (var i = 0; i < message.tags.length; ++i)\n                            if (!$util.isString(message.tags[i]))\n                                return \"tags: string[] expected\";\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        if (!$util.isString(message.description))\n                            return \"description: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a Role message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.Role} Role\n                 */\n                Role.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.Role)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.Role();\n                    if (object.id != null) {\n                        if (typeof object.id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Role.id: object expected\");\n                        message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                    }\n                    if (object.actions) {\n                        if (!Array.isArray(object.actions))\n                            throw TypeError(\".syft_proto.execution.v1.Role.actions: array expected\");\n                        message.actions = [];\n                        for (var i = 0; i < object.actions.length; ++i) {\n                            if (typeof object.actions[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Role.actions: object expected\");\n                            message.actions[i] = $root.syft_proto.execution.v1.ComputationAction.fromObject(object.actions[i]);\n                        }\n                    }\n                    if (object.state != null) {\n                        if (typeof object.state !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Role.state: object expected\");\n                        message.state = $root.syft_proto.execution.v1.State.fromObject(object.state);\n                    }\n                    if (object.placeholders) {\n                        if (!Array.isArray(object.placeholders))\n                            throw TypeError(\".syft_proto.execution.v1.Role.placeholders: array expected\");\n                        message.placeholders = [];\n                        for (var i = 0; i < object.placeholders.length; ++i) {\n                            if (typeof object.placeholders[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Role.placeholders: object expected\");\n                            message.placeholders[i] = $root.syft_proto.execution.v1.Placeholder.fromObject(object.placeholders[i]);\n                        }\n                    }\n                    if (object.input_placeholder_ids) {\n                        if (!Array.isArray(object.input_placeholder_ids))\n                            throw TypeError(\".syft_proto.execution.v1.Role.input_placeholder_ids: array expected\");\n                        message.input_placeholder_ids = [];\n                        for (var i = 0; i < object.input_placeholder_ids.length; ++i) {\n                            if (typeof object.input_placeholder_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Role.input_placeholder_ids: object expected\");\n                            message.input_placeholder_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.input_placeholder_ids[i]);\n                        }\n                    }\n                    if (object.output_placeholder_ids) {\n                        if (!Array.isArray(object.output_placeholder_ids))\n                            throw TypeError(\".syft_proto.execution.v1.Role.output_placeholder_ids: array expected\");\n                        message.output_placeholder_ids = [];\n                        for (var i = 0; i < object.output_placeholder_ids.length; ++i) {\n                            if (typeof object.output_placeholder_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Role.output_placeholder_ids: object expected\");\n                            message.output_placeholder_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.output_placeholder_ids[i]);\n                        }\n                    }\n                    if (object.tags) {\n                        if (!Array.isArray(object.tags))\n                            throw TypeError(\".syft_proto.execution.v1.Role.tags: array expected\");\n                        message.tags = [];\n                        for (var i = 0; i < object.tags.length; ++i)\n                            message.tags[i] = String(object.tags[i]);\n                    }\n                    if (object.description != null)\n                        message.description = String(object.description);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Role message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.Role\n                 * @static\n                 * @param {syft_proto.execution.v1.Role} message Role\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Role.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.actions = [];\n                        object.placeholders = [];\n                        object.input_placeholder_ids = [];\n                        object.output_placeholder_ids = [];\n                        object.tags = [];\n                    }\n                    if (options.defaults) {\n                        object.id = null;\n                        object.state = null;\n                        object.description = \"\";\n                    }\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                    if (message.actions && message.actions.length) {\n                        object.actions = [];\n                        for (var j = 0; j < message.actions.length; ++j)\n                            object.actions[j] = $root.syft_proto.execution.v1.ComputationAction.toObject(message.actions[j], options);\n                    }\n                    if (message.state != null && message.hasOwnProperty(\"state\"))\n                        object.state = $root.syft_proto.execution.v1.State.toObject(message.state, options);\n                    if (message.placeholders && message.placeholders.length) {\n                        object.placeholders = [];\n                        for (var j = 0; j < message.placeholders.length; ++j)\n                            object.placeholders[j] = $root.syft_proto.execution.v1.Placeholder.toObject(message.placeholders[j], options);\n                    }\n                    if (message.input_placeholder_ids && message.input_placeholder_ids.length) {\n                        object.input_placeholder_ids = [];\n                        for (var j = 0; j < message.input_placeholder_ids.length; ++j)\n                            object.input_placeholder_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.input_placeholder_ids[j], options);\n                    }\n                    if (message.output_placeholder_ids && message.output_placeholder_ids.length) {\n                        object.output_placeholder_ids = [];\n                        for (var j = 0; j < message.output_placeholder_ids.length; ++j)\n                            object.output_placeholder_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.output_placeholder_ids[j], options);\n                    }\n                    if (message.tags && message.tags.length) {\n                        object.tags = [];\n                        for (var j = 0; j < message.tags.length; ++j)\n                            object.tags[j] = message.tags[j];\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        object.description = message.description;\n                    return object;\n                };\n\n                /**\n                 * Converts this Role to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.Role\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Role.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Role;\n            })();\n\n            v1.State = (function() {\n\n                /**\n                 * Properties of a State.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IState\n                 * @property {Array.<syft_proto.execution.v1.IPlaceholder>|null} [placeholders] State placeholders\n                 * @property {Array.<syft_proto.execution.v1.IStateTensor>|null} [tensors] State tensors\n                 */\n\n                /**\n                 * Constructs a new State.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a State.\n                 * @implements IState\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IState=} [properties] Properties to set\n                 */\n                function State(properties) {\n                    this.placeholders = [];\n                    this.tensors = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * State placeholders.\n                 * @member {Array.<syft_proto.execution.v1.IPlaceholder>} placeholders\n                 * @memberof syft_proto.execution.v1.State\n                 * @instance\n                 */\n                State.prototype.placeholders = $util.emptyArray;\n\n                /**\n                 * State tensors.\n                 * @member {Array.<syft_proto.execution.v1.IStateTensor>} tensors\n                 * @memberof syft_proto.execution.v1.State\n                 * @instance\n                 */\n                State.prototype.tensors = $util.emptyArray;\n\n                /**\n                 * Creates a new State instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {syft_proto.execution.v1.IState=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.State} State instance\n                 */\n                State.create = function create(properties) {\n                    return new State(properties);\n                };\n\n                /**\n                 * Encodes the specified State message. Does not implicitly {@link syft_proto.execution.v1.State.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {syft_proto.execution.v1.IState} message State message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                State.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.placeholders != null && message.placeholders.length)\n                        for (var i = 0; i < message.placeholders.length; ++i)\n                            $root.syft_proto.execution.v1.Placeholder.encode(message.placeholders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.tensors != null && message.tensors.length)\n                        for (var i = 0; i < message.tensors.length; ++i)\n                            $root.syft_proto.execution.v1.StateTensor.encode(message.tensors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified State message, length delimited. Does not implicitly {@link syft_proto.execution.v1.State.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {syft_proto.execution.v1.IState} message State message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                State.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a State message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.State} State\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                State.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.State();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.placeholders && message.placeholders.length))\n                                message.placeholders = [];\n                            message.placeholders.push($root.syft_proto.execution.v1.Placeholder.decode(reader, reader.uint32()));\n                            break;\n                        case 2:\n                            if (!(message.tensors && message.tensors.length))\n                                message.tensors = [];\n                            message.tensors.push($root.syft_proto.execution.v1.StateTensor.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a State message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.State} State\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                State.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a State message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                State.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.placeholders != null && message.hasOwnProperty(\"placeholders\")) {\n                        if (!Array.isArray(message.placeholders))\n                            return \"placeholders: array expected\";\n                        for (var i = 0; i < message.placeholders.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.Placeholder.verify(message.placeholders[i]);\n                            if (error)\n                                return \"placeholders.\" + error;\n                        }\n                    }\n                    if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                        if (!Array.isArray(message.tensors))\n                            return \"tensors: array expected\";\n                        for (var i = 0; i < message.tensors.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.StateTensor.verify(message.tensors[i]);\n                            if (error)\n                                return \"tensors.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a State message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.State} State\n                 */\n                State.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.State)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.State();\n                    if (object.placeholders) {\n                        if (!Array.isArray(object.placeholders))\n                            throw TypeError(\".syft_proto.execution.v1.State.placeholders: array expected\");\n                        message.placeholders = [];\n                        for (var i = 0; i < object.placeholders.length; ++i) {\n                            if (typeof object.placeholders[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.State.placeholders: object expected\");\n                            message.placeholders[i] = $root.syft_proto.execution.v1.Placeholder.fromObject(object.placeholders[i]);\n                        }\n                    }\n                    if (object.tensors) {\n                        if (!Array.isArray(object.tensors))\n                            throw TypeError(\".syft_proto.execution.v1.State.tensors: array expected\");\n                        message.tensors = [];\n                        for (var i = 0; i < object.tensors.length; ++i) {\n                            if (typeof object.tensors[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.State.tensors: object expected\");\n                            message.tensors[i] = $root.syft_proto.execution.v1.StateTensor.fromObject(object.tensors[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a State message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.State\n                 * @static\n                 * @param {syft_proto.execution.v1.State} message State\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                State.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.placeholders = [];\n                        object.tensors = [];\n                    }\n                    if (message.placeholders && message.placeholders.length) {\n                        object.placeholders = [];\n                        for (var j = 0; j < message.placeholders.length; ++j)\n                            object.placeholders[j] = $root.syft_proto.execution.v1.Placeholder.toObject(message.placeholders[j], options);\n                    }\n                    if (message.tensors && message.tensors.length) {\n                        object.tensors = [];\n                        for (var j = 0; j < message.tensors.length; ++j)\n                            object.tensors[j] = $root.syft_proto.execution.v1.StateTensor.toObject(message.tensors[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this State to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.State\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                State.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return State;\n            })();\n\n            v1.StateTensor = (function() {\n\n                /**\n                 * Properties of a StateTensor.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IStateTensor\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [torch_tensor] StateTensor torch_tensor\n                 * @property {syft_proto.types.torch.v1.IParameter|null} [torch_param] StateTensor torch_param\n                 */\n\n                /**\n                 * Constructs a new StateTensor.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a StateTensor.\n                 * @implements IStateTensor\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IStateTensor=} [properties] Properties to set\n                 */\n                function StateTensor(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * StateTensor torch_tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} torch_tensor\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @instance\n                 */\n                StateTensor.prototype.torch_tensor = null;\n\n                /**\n                 * StateTensor torch_param.\n                 * @member {syft_proto.types.torch.v1.IParameter|null|undefined} torch_param\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @instance\n                 */\n                StateTensor.prototype.torch_param = null;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * StateTensor tensor.\n                 * @member {\"torch_tensor\"|\"torch_param\"|undefined} tensor\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @instance\n                 */\n                Object.defineProperty(StateTensor.prototype, \"tensor\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"torch_tensor\", \"torch_param\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new StateTensor instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {syft_proto.execution.v1.IStateTensor=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.StateTensor} StateTensor instance\n                 */\n                StateTensor.create = function create(properties) {\n                    return new StateTensor(properties);\n                };\n\n                /**\n                 * Encodes the specified StateTensor message. Does not implicitly {@link syft_proto.execution.v1.StateTensor.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {syft_proto.execution.v1.IStateTensor} message StateTensor message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StateTensor.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.torch_tensor != null && message.hasOwnProperty(\"torch_tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.torch_tensor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.torch_param != null && message.hasOwnProperty(\"torch_param\"))\n                        $root.syft_proto.types.torch.v1.Parameter.encode(message.torch_param, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified StateTensor message, length delimited. Does not implicitly {@link syft_proto.execution.v1.StateTensor.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {syft_proto.execution.v1.IStateTensor} message StateTensor message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StateTensor.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a StateTensor message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.StateTensor} StateTensor\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StateTensor.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.StateTensor();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.torch_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.torch_param = $root.syft_proto.types.torch.v1.Parameter.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a StateTensor message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.StateTensor} StateTensor\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StateTensor.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a StateTensor message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                StateTensor.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.torch_tensor != null && message.hasOwnProperty(\"torch_tensor\")) {\n                        properties.tensor = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.torch_tensor);\n                            if (error)\n                                return \"torch_tensor.\" + error;\n                        }\n                    }\n                    if (message.torch_param != null && message.hasOwnProperty(\"torch_param\")) {\n                        if (properties.tensor === 1)\n                            return \"tensor: multiple values\";\n                        properties.tensor = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.Parameter.verify(message.torch_param);\n                            if (error)\n                                return \"torch_param.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a StateTensor message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.StateTensor} StateTensor\n                 */\n                StateTensor.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.StateTensor)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.StateTensor();\n                    if (object.torch_tensor != null) {\n                        if (typeof object.torch_tensor !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StateTensor.torch_tensor: object expected\");\n                        message.torch_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.torch_tensor);\n                    }\n                    if (object.torch_param != null) {\n                        if (typeof object.torch_param !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StateTensor.torch_param: object expected\");\n                        message.torch_param = $root.syft_proto.types.torch.v1.Parameter.fromObject(object.torch_param);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a StateTensor message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @static\n                 * @param {syft_proto.execution.v1.StateTensor} message StateTensor\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                StateTensor.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (message.torch_tensor != null && message.hasOwnProperty(\"torch_tensor\")) {\n                        object.torch_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.torch_tensor, options);\n                        if (options.oneofs)\n                            object.tensor = \"torch_tensor\";\n                    }\n                    if (message.torch_param != null && message.hasOwnProperty(\"torch_param\")) {\n                        object.torch_param = $root.syft_proto.types.torch.v1.Parameter.toObject(message.torch_param, options);\n                        if (options.oneofs)\n                            object.tensor = \"torch_param\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this StateTensor to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.StateTensor\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                StateTensor.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return StateTensor;\n            })();\n\n            v1.InputTypeDescriptor = (function() {\n\n                /**\n                 * Properties of an InputTypeDescriptor.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IInputTypeDescriptor\n                 * @property {string|null} [type_name] InputTypeDescriptor type_name\n                 */\n\n                /**\n                 * Constructs a new InputTypeDescriptor.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents an InputTypeDescriptor.\n                 * @implements IInputTypeDescriptor\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IInputTypeDescriptor=} [properties] Properties to set\n                 */\n                function InputTypeDescriptor(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * InputTypeDescriptor type_name.\n                 * @member {string} type_name\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @instance\n                 */\n                InputTypeDescriptor.prototype.type_name = \"\";\n\n                /**\n                 * Creates a new InputTypeDescriptor instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {syft_proto.execution.v1.IInputTypeDescriptor=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.InputTypeDescriptor} InputTypeDescriptor instance\n                 */\n                InputTypeDescriptor.create = function create(properties) {\n                    return new InputTypeDescriptor(properties);\n                };\n\n                /**\n                 * Encodes the specified InputTypeDescriptor message. Does not implicitly {@link syft_proto.execution.v1.InputTypeDescriptor.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {syft_proto.execution.v1.IInputTypeDescriptor} message InputTypeDescriptor message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                InputTypeDescriptor.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.type_name != null && message.hasOwnProperty(\"type_name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_name);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified InputTypeDescriptor message, length delimited. Does not implicitly {@link syft_proto.execution.v1.InputTypeDescriptor.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {syft_proto.execution.v1.IInputTypeDescriptor} message InputTypeDescriptor message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                InputTypeDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an InputTypeDescriptor message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.InputTypeDescriptor} InputTypeDescriptor\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                InputTypeDescriptor.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.InputTypeDescriptor();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.type_name = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an InputTypeDescriptor message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.InputTypeDescriptor} InputTypeDescriptor\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                InputTypeDescriptor.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an InputTypeDescriptor message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                InputTypeDescriptor.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.type_name != null && message.hasOwnProperty(\"type_name\"))\n                        if (!$util.isString(message.type_name))\n                            return \"type_name: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates an InputTypeDescriptor message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.InputTypeDescriptor} InputTypeDescriptor\n                 */\n                InputTypeDescriptor.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.InputTypeDescriptor)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.InputTypeDescriptor();\n                    if (object.type_name != null)\n                        message.type_name = String(object.type_name);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an InputTypeDescriptor message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @static\n                 * @param {syft_proto.execution.v1.InputTypeDescriptor} message InputTypeDescriptor\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                InputTypeDescriptor.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.type_name = \"\";\n                    if (message.type_name != null && message.hasOwnProperty(\"type_name\"))\n                        object.type_name = message.type_name;\n                    return object;\n                };\n\n                /**\n                 * Converts this InputTypeDescriptor to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.InputTypeDescriptor\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                InputTypeDescriptor.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return InputTypeDescriptor;\n            })();\n\n            v1.NestedTypeWrapper = (function() {\n\n                /**\n                 * Properties of a NestedTypeWrapper.\n                 * @memberof syft_proto.execution.v1\n                 * @interface INestedTypeWrapper\n                 * @property {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer|null} [nested_types] NestedTypeWrapper nested_types\n                 */\n\n                /**\n                 * Constructs a new NestedTypeWrapper.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a NestedTypeWrapper.\n                 * @implements INestedTypeWrapper\n                 * @constructor\n                 * @param {syft_proto.execution.v1.INestedTypeWrapper=} [properties] Properties to set\n                 */\n                function NestedTypeWrapper(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * NestedTypeWrapper nested_types.\n                 * @member {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer|null|undefined} nested_types\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @instance\n                 */\n                NestedTypeWrapper.prototype.nested_types = null;\n\n                /**\n                 * Creates a new NestedTypeWrapper instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {syft_proto.execution.v1.INestedTypeWrapper=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.NestedTypeWrapper} NestedTypeWrapper instance\n                 */\n                NestedTypeWrapper.create = function create(properties) {\n                    return new NestedTypeWrapper(properties);\n                };\n\n                /**\n                 * Encodes the specified NestedTypeWrapper message. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {syft_proto.execution.v1.INestedTypeWrapper} message NestedTypeWrapper message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                NestedTypeWrapper.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.nested_types != null && message.hasOwnProperty(\"nested_types\"))\n                        $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.encode(message.nested_types, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified NestedTypeWrapper message, length delimited. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {syft_proto.execution.v1.INestedTypeWrapper} message NestedTypeWrapper message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                NestedTypeWrapper.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a NestedTypeWrapper message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.NestedTypeWrapper} NestedTypeWrapper\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                NestedTypeWrapper.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.NestedTypeWrapper();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.nested_types = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a NestedTypeWrapper message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.NestedTypeWrapper} NestedTypeWrapper\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                NestedTypeWrapper.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a NestedTypeWrapper message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                NestedTypeWrapper.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.nested_types != null && message.hasOwnProperty(\"nested_types\")) {\n                        var error = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.verify(message.nested_types);\n                        if (error)\n                            return \"nested_types.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a NestedTypeWrapper message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.NestedTypeWrapper} NestedTypeWrapper\n                 */\n                NestedTypeWrapper.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.NestedTypeWrapper)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.NestedTypeWrapper();\n                    if (object.nested_types != null) {\n                        if (typeof object.nested_types !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.nested_types: object expected\");\n                        message.nested_types = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.fromObject(object.nested_types);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a NestedTypeWrapper message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @static\n                 * @param {syft_proto.execution.v1.NestedTypeWrapper} message NestedTypeWrapper\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                NestedTypeWrapper.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.nested_types = null;\n                    if (message.nested_types != null && message.hasOwnProperty(\"nested_types\"))\n                        object.nested_types = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.toObject(message.nested_types, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this NestedTypeWrapper to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                NestedTypeWrapper.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                NestedTypeWrapper.TypeList = (function() {\n\n                    /**\n                     * Properties of a TypeList.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @interface ITypeList\n                     * @property {Array.<syft_proto.execution.v1.INestedTypeWrapper>|null} [nested_types] TypeList nested_types\n                     */\n\n                    /**\n                     * Constructs a new TypeList.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @classdesc Represents a TypeList.\n                     * @implements ITypeList\n                     * @constructor\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeList=} [properties] Properties to set\n                     */\n                    function TypeList(properties) {\n                        this.nested_types = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TypeList nested_types.\n                     * @member {Array.<syft_proto.execution.v1.INestedTypeWrapper>} nested_types\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @instance\n                     */\n                    TypeList.prototype.nested_types = $util.emptyArray;\n\n                    /**\n                     * Creates a new TypeList instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeList=} [properties] Properties to set\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeList} TypeList instance\n                     */\n                    TypeList.create = function create(properties) {\n                        return new TypeList(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TypeList message. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeList.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeList} message TypeList message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeList.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.nested_types != null && message.nested_types.length)\n                            for (var i = 0; i < message.nested_types.length; ++i)\n                                $root.syft_proto.execution.v1.NestedTypeWrapper.encode(message.nested_types[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TypeList message, length delimited. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeList.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeList} message TypeList message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeList.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TypeList message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeList} TypeList\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeList.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.nested_types && message.nested_types.length))\n                                    message.nested_types = [];\n                                message.nested_types.push($root.syft_proto.execution.v1.NestedTypeWrapper.decode(reader, reader.uint32()));\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TypeList message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeList} TypeList\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeList.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TypeList message.\n                     * @function verify\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TypeList.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.nested_types != null && message.hasOwnProperty(\"nested_types\")) {\n                            if (!Array.isArray(message.nested_types))\n                                return \"nested_types: array expected\";\n                            for (var i = 0; i < message.nested_types.length; ++i) {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.verify(message.nested_types[i]);\n                                if (error)\n                                    return \"nested_types.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TypeList message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeList} TypeList\n                     */\n                    TypeList.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList)\n                            return object;\n                        var message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList();\n                        if (object.nested_types) {\n                            if (!Array.isArray(object.nested_types))\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeList.nested_types: array expected\");\n                            message.nested_types = [];\n                            for (var i = 0; i < object.nested_types.length; ++i) {\n                                if (typeof object.nested_types[i] !== \"object\")\n                                    throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeList.nested_types: object expected\");\n                                message.nested_types[i] = $root.syft_proto.execution.v1.NestedTypeWrapper.fromObject(object.nested_types[i]);\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TypeList message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.TypeList} message TypeList\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TypeList.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.nested_types = [];\n                        if (message.nested_types && message.nested_types.length) {\n                            object.nested_types = [];\n                            for (var j = 0; j < message.nested_types.length; ++j)\n                                object.nested_types[j] = $root.syft_proto.execution.v1.NestedTypeWrapper.toObject(message.nested_types[j], options);\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TypeList to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeList\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TypeList.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TypeList;\n                })();\n\n                NestedTypeWrapper.TypeTuple = (function() {\n\n                    /**\n                     * Properties of a TypeTuple.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @interface ITypeTuple\n                     * @property {Array.<syft_proto.execution.v1.INestedTypeWrapper>|null} [nested_types] TypeTuple nested_types\n                     */\n\n                    /**\n                     * Constructs a new TypeTuple.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @classdesc Represents a TypeTuple.\n                     * @implements ITypeTuple\n                     * @constructor\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple=} [properties] Properties to set\n                     */\n                    function TypeTuple(properties) {\n                        this.nested_types = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TypeTuple nested_types.\n                     * @member {Array.<syft_proto.execution.v1.INestedTypeWrapper>} nested_types\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @instance\n                     */\n                    TypeTuple.prototype.nested_types = $util.emptyArray;\n\n                    /**\n                     * Creates a new TypeTuple instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple=} [properties] Properties to set\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeTuple} TypeTuple instance\n                     */\n                    TypeTuple.create = function create(properties) {\n                        return new TypeTuple(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TypeTuple message. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple} message TypeTuple message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeTuple.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.nested_types != null && message.nested_types.length)\n                            for (var i = 0; i < message.nested_types.length; ++i)\n                                $root.syft_proto.execution.v1.NestedTypeWrapper.encode(message.nested_types[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TypeTuple message, length delimited. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple} message TypeTuple message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeTuple.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TypeTuple message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeTuple} TypeTuple\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeTuple.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.nested_types && message.nested_types.length))\n                                    message.nested_types = [];\n                                message.nested_types.push($root.syft_proto.execution.v1.NestedTypeWrapper.decode(reader, reader.uint32()));\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TypeTuple message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeTuple} TypeTuple\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeTuple.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TypeTuple message.\n                     * @function verify\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TypeTuple.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.nested_types != null && message.hasOwnProperty(\"nested_types\")) {\n                            if (!Array.isArray(message.nested_types))\n                                return \"nested_types: array expected\";\n                            for (var i = 0; i < message.nested_types.length; ++i) {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.verify(message.nested_types[i]);\n                                if (error)\n                                    return \"nested_types.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TypeTuple message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeTuple} TypeTuple\n                     */\n                    TypeTuple.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple)\n                            return object;\n                        var message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple();\n                        if (object.nested_types) {\n                            if (!Array.isArray(object.nested_types))\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.nested_types: array expected\");\n                            message.nested_types = [];\n                            for (var i = 0; i < object.nested_types.length; ++i) {\n                                if (typeof object.nested_types[i] !== \"object\")\n                                    throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.nested_types: object expected\");\n                                message.nested_types[i] = $root.syft_proto.execution.v1.NestedTypeWrapper.fromObject(object.nested_types[i]);\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TypeTuple message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.TypeTuple} message TypeTuple\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TypeTuple.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.nested_types = [];\n                        if (message.nested_types && message.nested_types.length) {\n                            object.nested_types = [];\n                            for (var j = 0; j < message.nested_types.length; ++j)\n                                object.nested_types[j] = $root.syft_proto.execution.v1.NestedTypeWrapper.toObject(message.nested_types[j], options);\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TypeTuple to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeTuple\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TypeTuple.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TypeTuple;\n                })();\n\n                NestedTypeWrapper.TypeMap = (function() {\n\n                    /**\n                     * Properties of a TypeMap.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @interface ITypeMap\n                     * @property {Object.<string,syft_proto.execution.v1.INestedTypeWrapper>|null} [nested_types] TypeMap nested_types\n                     */\n\n                    /**\n                     * Constructs a new TypeMap.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @classdesc Represents a TypeMap.\n                     * @implements ITypeMap\n                     * @constructor\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap=} [properties] Properties to set\n                     */\n                    function TypeMap(properties) {\n                        this.nested_types = {};\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TypeMap nested_types.\n                     * @member {Object.<string,syft_proto.execution.v1.INestedTypeWrapper>} nested_types\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @instance\n                     */\n                    TypeMap.prototype.nested_types = $util.emptyObject;\n\n                    /**\n                     * Creates a new TypeMap instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap=} [properties] Properties to set\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeMap} TypeMap instance\n                     */\n                    TypeMap.create = function create(properties) {\n                        return new TypeMap(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TypeMap message. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeMap.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap} message TypeMap message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeMap.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.nested_types != null && message.hasOwnProperty(\"nested_types\"))\n                            for (var keys = Object.keys(message.nested_types), i = 0; i < keys.length; ++i) {\n                                writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                                $root.syft_proto.execution.v1.NestedTypeWrapper.encode(message.nested_types[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                            }\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TypeMap message, length delimited. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeMap.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap} message TypeMap message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeMap.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TypeMap message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeMap} TypeMap\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeMap.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap(), key;\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                reader.skip().pos++;\n                                if (message.nested_types === $util.emptyObject)\n                                    message.nested_types = {};\n                                key = reader.string();\n                                reader.pos++;\n                                message.nested_types[key] = $root.syft_proto.execution.v1.NestedTypeWrapper.decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TypeMap message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeMap} TypeMap\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeMap.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TypeMap message.\n                     * @function verify\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TypeMap.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.nested_types != null && message.hasOwnProperty(\"nested_types\")) {\n                            if (!$util.isObject(message.nested_types))\n                                return \"nested_types: object expected\";\n                            var key = Object.keys(message.nested_types);\n                            for (var i = 0; i < key.length; ++i) {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.verify(message.nested_types[key[i]]);\n                                if (error)\n                                    return \"nested_types.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TypeMap message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeMap} TypeMap\n                     */\n                    TypeMap.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap)\n                            return object;\n                        var message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap();\n                        if (object.nested_types) {\n                            if (typeof object.nested_types !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeMap.nested_types: object expected\");\n                            message.nested_types = {};\n                            for (var keys = Object.keys(object.nested_types), i = 0; i < keys.length; ++i) {\n                                if (typeof object.nested_types[keys[i]] !== \"object\")\n                                    throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeMap.nested_types: object expected\");\n                                message.nested_types[keys[i]] = $root.syft_proto.execution.v1.NestedTypeWrapper.fromObject(object.nested_types[keys[i]]);\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TypeMap message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.TypeMap} message TypeMap\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TypeMap.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.objects || options.defaults)\n                            object.nested_types = {};\n                        var keys2;\n                        if (message.nested_types && (keys2 = Object.keys(message.nested_types)).length) {\n                            object.nested_types = {};\n                            for (var j = 0; j < keys2.length; ++j)\n                                object.nested_types[keys2[j]] = $root.syft_proto.execution.v1.NestedTypeWrapper.toObject(message.nested_types[keys2[j]], options);\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TypeMap to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeMap\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TypeMap.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TypeMap;\n                })();\n\n                NestedTypeWrapper.TypeContainer = (function() {\n\n                    /**\n                     * Properties of a TypeContainer.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @interface ITypeContainer\n                     * @property {syft_proto.execution.v1.IInputTypeDescriptor|null} [nested_type] TypeContainer nested_type\n                     * @property {syft_proto.execution.v1.NestedTypeWrapper.ITypeList|null} [nested_type_list] TypeContainer nested_type_list\n                     * @property {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple|null} [nested_type_tuple] TypeContainer nested_type_tuple\n                     * @property {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap|null} [nested_type_dict] TypeContainer nested_type_dict\n                     */\n\n                    /**\n                     * Constructs a new TypeContainer.\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper\n                     * @classdesc Represents a TypeContainer.\n                     * @implements ITypeContainer\n                     * @constructor\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer=} [properties] Properties to set\n                     */\n                    function TypeContainer(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TypeContainer nested_type.\n                     * @member {syft_proto.execution.v1.IInputTypeDescriptor|null|undefined} nested_type\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     */\n                    TypeContainer.prototype.nested_type = null;\n\n                    /**\n                     * TypeContainer nested_type_list.\n                     * @member {syft_proto.execution.v1.NestedTypeWrapper.ITypeList|null|undefined} nested_type_list\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     */\n                    TypeContainer.prototype.nested_type_list = null;\n\n                    /**\n                     * TypeContainer nested_type_tuple.\n                     * @member {syft_proto.execution.v1.NestedTypeWrapper.ITypeTuple|null|undefined} nested_type_tuple\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     */\n                    TypeContainer.prototype.nested_type_tuple = null;\n\n                    /**\n                     * TypeContainer nested_type_dict.\n                     * @member {syft_proto.execution.v1.NestedTypeWrapper.ITypeMap|null|undefined} nested_type_dict\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     */\n                    TypeContainer.prototype.nested_type_dict = null;\n\n                    // OneOf field names bound to virtual getters and setters\n                    var $oneOfFields;\n\n                    /**\n                     * TypeContainer nested_container.\n                     * @member {\"nested_type\"|\"nested_type_list\"|\"nested_type_tuple\"|\"nested_type_dict\"|undefined} nested_container\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     */\n                    Object.defineProperty(TypeContainer.prototype, \"nested_container\", {\n                        get: $util.oneOfGetter($oneOfFields = [\"nested_type\", \"nested_type_list\", \"nested_type_tuple\", \"nested_type_dict\"]),\n                        set: $util.oneOfSetter($oneOfFields)\n                    });\n\n                    /**\n                     * Creates a new TypeContainer instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer=} [properties] Properties to set\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeContainer} TypeContainer instance\n                     */\n                    TypeContainer.create = function create(properties) {\n                        return new TypeContainer(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TypeContainer message. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer} message TypeContainer message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeContainer.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.nested_type != null && message.hasOwnProperty(\"nested_type\"))\n                            $root.syft_proto.execution.v1.InputTypeDescriptor.encode(message.nested_type, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.nested_type_list != null && message.hasOwnProperty(\"nested_type_list\"))\n                            $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList.encode(message.nested_type_list, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.nested_type_tuple != null && message.hasOwnProperty(\"nested_type_tuple\"))\n                            $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.encode(message.nested_type_tuple, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        if (message.nested_type_dict != null && message.hasOwnProperty(\"nested_type_dict\"))\n                            $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap.encode(message.nested_type_dict, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TypeContainer message, length delimited. Does not implicitly {@link syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.ITypeContainer} message TypeContainer message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TypeContainer.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TypeContainer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeContainer} TypeContainer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeContainer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.nested_type = $root.syft_proto.execution.v1.InputTypeDescriptor.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.nested_type_list = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.nested_type_tuple = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.decode(reader, reader.uint32());\n                                break;\n                            case 4:\n                                message.nested_type_dict = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap.decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TypeContainer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeContainer} TypeContainer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TypeContainer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TypeContainer message.\n                     * @function verify\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TypeContainer.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        var properties = {};\n                        if (message.nested_type != null && message.hasOwnProperty(\"nested_type\")) {\n                            properties.nested_container = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.InputTypeDescriptor.verify(message.nested_type);\n                                if (error)\n                                    return \"nested_type.\" + error;\n                            }\n                        }\n                        if (message.nested_type_list != null && message.hasOwnProperty(\"nested_type_list\")) {\n                            if (properties.nested_container === 1)\n                                return \"nested_container: multiple values\";\n                            properties.nested_container = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList.verify(message.nested_type_list);\n                                if (error)\n                                    return \"nested_type_list.\" + error;\n                            }\n                        }\n                        if (message.nested_type_tuple != null && message.hasOwnProperty(\"nested_type_tuple\")) {\n                            if (properties.nested_container === 1)\n                                return \"nested_container: multiple values\";\n                            properties.nested_container = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.verify(message.nested_type_tuple);\n                                if (error)\n                                    return \"nested_type_tuple.\" + error;\n                            }\n                        }\n                        if (message.nested_type_dict != null && message.hasOwnProperty(\"nested_type_dict\")) {\n                            if (properties.nested_container === 1)\n                                return \"nested_container: multiple values\";\n                            properties.nested_container = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap.verify(message.nested_type_dict);\n                                if (error)\n                                    return \"nested_type_dict.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TypeContainer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.execution.v1.NestedTypeWrapper.TypeContainer} TypeContainer\n                     */\n                    TypeContainer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer)\n                            return object;\n                        var message = new $root.syft_proto.execution.v1.NestedTypeWrapper.TypeContainer();\n                        if (object.nested_type != null) {\n                            if (typeof object.nested_type !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.nested_type: object expected\");\n                            message.nested_type = $root.syft_proto.execution.v1.InputTypeDescriptor.fromObject(object.nested_type);\n                        }\n                        if (object.nested_type_list != null) {\n                            if (typeof object.nested_type_list !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.nested_type_list: object expected\");\n                            message.nested_type_list = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList.fromObject(object.nested_type_list);\n                        }\n                        if (object.nested_type_tuple != null) {\n                            if (typeof object.nested_type_tuple !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.nested_type_tuple: object expected\");\n                            message.nested_type_tuple = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.fromObject(object.nested_type_tuple);\n                        }\n                        if (object.nested_type_dict != null) {\n                            if (typeof object.nested_type_dict !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.NestedTypeWrapper.TypeContainer.nested_type_dict: object expected\");\n                            message.nested_type_dict = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap.fromObject(object.nested_type_dict);\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TypeContainer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @static\n                     * @param {syft_proto.execution.v1.NestedTypeWrapper.TypeContainer} message TypeContainer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TypeContainer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (message.nested_type != null && message.hasOwnProperty(\"nested_type\")) {\n                            object.nested_type = $root.syft_proto.execution.v1.InputTypeDescriptor.toObject(message.nested_type, options);\n                            if (options.oneofs)\n                                object.nested_container = \"nested_type\";\n                        }\n                        if (message.nested_type_list != null && message.hasOwnProperty(\"nested_type_list\")) {\n                            object.nested_type_list = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeList.toObject(message.nested_type_list, options);\n                            if (options.oneofs)\n                                object.nested_container = \"nested_type_list\";\n                        }\n                        if (message.nested_type_tuple != null && message.hasOwnProperty(\"nested_type_tuple\")) {\n                            object.nested_type_tuple = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeTuple.toObject(message.nested_type_tuple, options);\n                            if (options.oneofs)\n                                object.nested_container = \"nested_type_tuple\";\n                        }\n                        if (message.nested_type_dict != null && message.hasOwnProperty(\"nested_type_dict\")) {\n                            object.nested_type_dict = $root.syft_proto.execution.v1.NestedTypeWrapper.TypeMap.toObject(message.nested_type_dict, options);\n                            if (options.oneofs)\n                                object.nested_container = \"nested_type_dict\";\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TypeContainer to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.execution.v1.NestedTypeWrapper.TypeContainer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TypeContainer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TypeContainer;\n                })();\n\n                return NestedTypeWrapper;\n            })();\n\n            v1.Protocol = (function() {\n\n                /**\n                 * Properties of a Protocol.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IProtocol\n                 * @property {syft_proto.types.syft.v1.IId|null} [id] Protocol id\n                 * @property {string|null} [name] Protocol name\n                 * @property {Object.<string,syft_proto.execution.v1.IRole>|null} [roles] Protocol roles\n                 * @property {Array.<string>|null} [tags] Protocol tags\n                 * @property {string|null} [description] Protocol description\n                 */\n\n                /**\n                 * Constructs a new Protocol.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a Protocol.\n                 * @implements IProtocol\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IProtocol=} [properties] Properties to set\n                 */\n                function Protocol(properties) {\n                    this.roles = {};\n                    this.tags = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Protocol id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 */\n                Protocol.prototype.id = null;\n\n                /**\n                 * Protocol name.\n                 * @member {string} name\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 */\n                Protocol.prototype.name = \"\";\n\n                /**\n                 * Protocol roles.\n                 * @member {Object.<string,syft_proto.execution.v1.IRole>} roles\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 */\n                Protocol.prototype.roles = $util.emptyObject;\n\n                /**\n                 * Protocol tags.\n                 * @member {Array.<string>} tags\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 */\n                Protocol.prototype.tags = $util.emptyArray;\n\n                /**\n                 * Protocol description.\n                 * @member {string} description\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 */\n                Protocol.prototype.description = \"\";\n\n                /**\n                 * Creates a new Protocol instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {syft_proto.execution.v1.IProtocol=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.Protocol} Protocol instance\n                 */\n                Protocol.create = function create(properties) {\n                    return new Protocol(properties);\n                };\n\n                /**\n                 * Encodes the specified Protocol message. Does not implicitly {@link syft_proto.execution.v1.Protocol.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {syft_proto.execution.v1.IProtocol} message Protocol message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Protocol.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                    if (message.roles != null && message.hasOwnProperty(\"roles\"))\n                        for (var keys = Object.keys(message.roles), i = 0; i < keys.length; ++i) {\n                            writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                            $root.syft_proto.execution.v1.Role.encode(message.roles[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                        }\n                    if (message.tags != null && message.tags.length)\n                        for (var i = 0; i < message.tags.length; ++i)\n                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Protocol message, length delimited. Does not implicitly {@link syft_proto.execution.v1.Protocol.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {syft_proto.execution.v1.IProtocol} message Protocol message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Protocol.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Protocol message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.Protocol} Protocol\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Protocol.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.Protocol(), key;\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.name = reader.string();\n                            break;\n                        case 3:\n                            reader.skip().pos++;\n                            if (message.roles === $util.emptyObject)\n                                message.roles = {};\n                            key = reader.string();\n                            reader.pos++;\n                            message.roles[key] = $root.syft_proto.execution.v1.Role.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            if (!(message.tags && message.tags.length))\n                                message.tags = [];\n                            message.tags.push(reader.string());\n                            break;\n                        case 5:\n                            message.description = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Protocol message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.Protocol} Protocol\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Protocol.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Protocol message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Protocol.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.id != null && message.hasOwnProperty(\"id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                        if (error)\n                            return \"id.\" + error;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.roles != null && message.hasOwnProperty(\"roles\")) {\n                        if (!$util.isObject(message.roles))\n                            return \"roles: object expected\";\n                        var key = Object.keys(message.roles);\n                        for (var i = 0; i < key.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.Role.verify(message.roles[key[i]]);\n                            if (error)\n                                return \"roles.\" + error;\n                        }\n                    }\n                    if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                        if (!Array.isArray(message.tags))\n                            return \"tags: array expected\";\n                        for (var i = 0; i < message.tags.length; ++i)\n                            if (!$util.isString(message.tags[i]))\n                                return \"tags: string[] expected\";\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        if (!$util.isString(message.description))\n                            return \"description: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a Protocol message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.Protocol} Protocol\n                 */\n                Protocol.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.Protocol)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.Protocol();\n                    if (object.id != null) {\n                        if (typeof object.id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Protocol.id: object expected\");\n                        message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                    }\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    if (object.roles) {\n                        if (typeof object.roles !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.Protocol.roles: object expected\");\n                        message.roles = {};\n                        for (var keys = Object.keys(object.roles), i = 0; i < keys.length; ++i) {\n                            if (typeof object.roles[keys[i]] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.Protocol.roles: object expected\");\n                            message.roles[keys[i]] = $root.syft_proto.execution.v1.Role.fromObject(object.roles[keys[i]]);\n                        }\n                    }\n                    if (object.tags) {\n                        if (!Array.isArray(object.tags))\n                            throw TypeError(\".syft_proto.execution.v1.Protocol.tags: array expected\");\n                        message.tags = [];\n                        for (var i = 0; i < object.tags.length; ++i)\n                            message.tags[i] = String(object.tags[i]);\n                    }\n                    if (object.description != null)\n                        message.description = String(object.description);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Protocol message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @static\n                 * @param {syft_proto.execution.v1.Protocol} message Protocol\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Protocol.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.tags = [];\n                    if (options.objects || options.defaults)\n                        object.roles = {};\n                    if (options.defaults) {\n                        object.id = null;\n                        object.name = \"\";\n                        object.description = \"\";\n                    }\n                    if (message.id != null && message.hasOwnProperty(\"id\"))\n                        object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    var keys2;\n                    if (message.roles && (keys2 = Object.keys(message.roles)).length) {\n                        object.roles = {};\n                        for (var j = 0; j < keys2.length; ++j)\n                            object.roles[keys2[j]] = $root.syft_proto.execution.v1.Role.toObject(message.roles[keys2[j]], options);\n                    }\n                    if (message.tags && message.tags.length) {\n                        object.tags = [];\n                        for (var j = 0; j < message.tags.length; ++j)\n                            object.tags[j] = message.tags[j];\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        object.description = message.description;\n                    return object;\n                };\n\n                /**\n                 * Converts this Protocol to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.Protocol\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Protocol.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Protocol;\n            })();\n\n            v1.StorageAction = (function() {\n\n                /**\n                 * Properties of a StorageAction.\n                 * @memberof syft_proto.execution.v1\n                 * @interface IStorageAction\n                 * @property {string|null} [command] StorageAction command\n                 * @property {syft_proto.types.syft.v1.IId|null} [target_id] StorageAction target_id\n                 * @property {syft_proto.generic.pointers.v1.IPointerTensor|null} [target_pointer] StorageAction target_pointer\n                 * @property {syft_proto.execution.v1.IPlaceholderId|null} [target_placeholder_id] StorageAction target_placeholder_id\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [target_tensor] StorageAction target_tensor\n                 * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] StorageAction args\n                 * @property {Object.<string,syft_proto.types.syft.v1.IArg>|null} [kwargs] StorageAction kwargs\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [return_ids] StorageAction return_ids\n                 * @property {Array.<syft_proto.execution.v1.IPlaceholderId>|null} [return_placeholder_ids] StorageAction return_placeholder_ids\n                 */\n\n                /**\n                 * Constructs a new StorageAction.\n                 * @memberof syft_proto.execution.v1\n                 * @classdesc Represents a StorageAction.\n                 * @implements IStorageAction\n                 * @constructor\n                 * @param {syft_proto.execution.v1.IStorageAction=} [properties] Properties to set\n                 */\n                function StorageAction(properties) {\n                    this.args = [];\n                    this.kwargs = {};\n                    this.return_ids = [];\n                    this.return_placeholder_ids = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * StorageAction command.\n                 * @member {string} command\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.command = \"\";\n\n                /**\n                 * StorageAction target_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} target_id\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.target_id = null;\n\n                /**\n                 * StorageAction target_pointer.\n                 * @member {syft_proto.generic.pointers.v1.IPointerTensor|null|undefined} target_pointer\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.target_pointer = null;\n\n                /**\n                 * StorageAction target_placeholder_id.\n                 * @member {syft_proto.execution.v1.IPlaceholderId|null|undefined} target_placeholder_id\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.target_placeholder_id = null;\n\n                /**\n                 * StorageAction target_tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} target_tensor\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.target_tensor = null;\n\n                /**\n                 * StorageAction args.\n                 * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.args = $util.emptyArray;\n\n                /**\n                 * StorageAction kwargs.\n                 * @member {Object.<string,syft_proto.types.syft.v1.IArg>} kwargs\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.kwargs = $util.emptyObject;\n\n                /**\n                 * StorageAction return_ids.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} return_ids\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.return_ids = $util.emptyArray;\n\n                /**\n                 * StorageAction return_placeholder_ids.\n                 * @member {Array.<syft_proto.execution.v1.IPlaceholderId>} return_placeholder_ids\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                StorageAction.prototype.return_placeholder_ids = $util.emptyArray;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * StorageAction target.\n                 * @member {\"target_id\"|\"target_pointer\"|\"target_placeholder_id\"|\"target_tensor\"|undefined} target\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 */\n                Object.defineProperty(StorageAction.prototype, \"target\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"target_id\", \"target_pointer\", \"target_placeholder_id\", \"target_tensor\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new StorageAction instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IStorageAction=} [properties] Properties to set\n                 * @returns {syft_proto.execution.v1.StorageAction} StorageAction instance\n                 */\n                StorageAction.create = function create(properties) {\n                    return new StorageAction(properties);\n                };\n\n                /**\n                 * Encodes the specified StorageAction message. Does not implicitly {@link syft_proto.execution.v1.StorageAction.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IStorageAction} message StorageAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StorageAction.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.command);\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\"))\n                        $root.syft_proto.generic.pointers.v1.PointerTensor.encode(message.target_pointer, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\"))\n                        $root.syft_proto.execution.v1.PlaceholderId.encode(message.target_placeholder_id, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.target_tensor, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.args != null && message.args.length)\n                        for (var i = 0; i < message.args.length; ++i)\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\"))\n                        for (var keys = Object.keys(message.kwargs), i = 0; i < keys.length; ++i) {\n                            writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.kwargs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();\n                        }\n                    if (message.return_ids != null && message.return_ids.length)\n                        for (var i = 0; i < message.return_ids.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.return_ids[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.return_placeholder_ids != null && message.return_placeholder_ids.length)\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i)\n                            $root.syft_proto.execution.v1.PlaceholderId.encode(message.return_placeholder_ids[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.target_id, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified StorageAction message, length delimited. Does not implicitly {@link syft_proto.execution.v1.StorageAction.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {syft_proto.execution.v1.IStorageAction} message StorageAction message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StorageAction.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a StorageAction message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.execution.v1.StorageAction} StorageAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StorageAction.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.execution.v1.StorageAction(), key;\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.command = reader.string();\n                            break;\n                        case 9:\n                            message.target_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            if (!(message.args && message.args.length))\n                                message.args = [];\n                            message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                            break;\n                        case 6:\n                            reader.skip().pos++;\n                            if (message.kwargs === $util.emptyObject)\n                                message.kwargs = {};\n                            key = reader.string();\n                            reader.pos++;\n                            message.kwargs[key] = $root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32());\n                            break;\n                        case 7:\n                            if (!(message.return_ids && message.return_ids.length))\n                                message.return_ids = [];\n                            message.return_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        case 8:\n                            if (!(message.return_placeholder_ids && message.return_placeholder_ids.length))\n                                message.return_placeholder_ids = [];\n                            message.return_placeholder_ids.push($root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a StorageAction message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.execution.v1.StorageAction} StorageAction\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StorageAction.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a StorageAction message.\n                 * @function verify\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                StorageAction.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        if (!$util.isString(message.command))\n                            return \"command: string expected\";\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.target_id);\n                            if (error)\n                                return \"target_id.\" + error;\n                        }\n                    }\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.generic.pointers.v1.PointerTensor.verify(message.target_pointer);\n                            if (error)\n                                return \"target_pointer.\" + error;\n                        }\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.target_placeholder_id);\n                            if (error)\n                                return \"target_placeholder_id.\" + error;\n                        }\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        if (properties.target === 1)\n                            return \"target: multiple values\";\n                        properties.target = 1;\n                        {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.target_tensor);\n                            if (error)\n                                return \"target_tensor.\" + error;\n                        }\n                    }\n                    if (message.args != null && message.hasOwnProperty(\"args\")) {\n                        if (!Array.isArray(message.args))\n                            return \"args: array expected\";\n                        for (var i = 0; i < message.args.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                            if (error)\n                                return \"args.\" + error;\n                        }\n                    }\n                    if (message.kwargs != null && message.hasOwnProperty(\"kwargs\")) {\n                        if (!$util.isObject(message.kwargs))\n                            return \"kwargs: object expected\";\n                        var key = Object.keys(message.kwargs);\n                        for (var i = 0; i < key.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.kwargs[key[i]]);\n                            if (error)\n                                return \"kwargs.\" + error;\n                        }\n                    }\n                    if (message.return_ids != null && message.hasOwnProperty(\"return_ids\")) {\n                        if (!Array.isArray(message.return_ids))\n                            return \"return_ids: array expected\";\n                        for (var i = 0; i < message.return_ids.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.return_ids[i]);\n                            if (error)\n                                return \"return_ids.\" + error;\n                        }\n                    }\n                    if (message.return_placeholder_ids != null && message.hasOwnProperty(\"return_placeholder_ids\")) {\n                        if (!Array.isArray(message.return_placeholder_ids))\n                            return \"return_placeholder_ids: array expected\";\n                        for (var i = 0; i < message.return_placeholder_ids.length; ++i) {\n                            var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.return_placeholder_ids[i]);\n                            if (error)\n                                return \"return_placeholder_ids.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a StorageAction message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.execution.v1.StorageAction} StorageAction\n                 */\n                StorageAction.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.execution.v1.StorageAction)\n                        return object;\n                    var message = new $root.syft_proto.execution.v1.StorageAction();\n                    if (object.command != null)\n                        message.command = String(object.command);\n                    if (object.target_id != null) {\n                        if (typeof object.target_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.target_id: object expected\");\n                        message.target_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.target_id);\n                    }\n                    if (object.target_pointer != null) {\n                        if (typeof object.target_pointer !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.target_pointer: object expected\");\n                        message.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.fromObject(object.target_pointer);\n                    }\n                    if (object.target_placeholder_id != null) {\n                        if (typeof object.target_placeholder_id !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.target_placeholder_id: object expected\");\n                        message.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.target_placeholder_id);\n                    }\n                    if (object.target_tensor != null) {\n                        if (typeof object.target_tensor !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.target_tensor: object expected\");\n                        message.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.target_tensor);\n                    }\n                    if (object.args) {\n                        if (!Array.isArray(object.args))\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.args: array expected\");\n                        message.args = [];\n                        for (var i = 0; i < object.args.length; ++i) {\n                            if (typeof object.args[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.StorageAction.args: object expected\");\n                            message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                        }\n                    }\n                    if (object.kwargs) {\n                        if (typeof object.kwargs !== \"object\")\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.kwargs: object expected\");\n                        message.kwargs = {};\n                        for (var keys = Object.keys(object.kwargs), i = 0; i < keys.length; ++i) {\n                            if (typeof object.kwargs[keys[i]] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.StorageAction.kwargs: object expected\");\n                            message.kwargs[keys[i]] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.kwargs[keys[i]]);\n                        }\n                    }\n                    if (object.return_ids) {\n                        if (!Array.isArray(object.return_ids))\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.return_ids: array expected\");\n                        message.return_ids = [];\n                        for (var i = 0; i < object.return_ids.length; ++i) {\n                            if (typeof object.return_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.StorageAction.return_ids: object expected\");\n                            message.return_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.return_ids[i]);\n                        }\n                    }\n                    if (object.return_placeholder_ids) {\n                        if (!Array.isArray(object.return_placeholder_ids))\n                            throw TypeError(\".syft_proto.execution.v1.StorageAction.return_placeholder_ids: array expected\");\n                        message.return_placeholder_ids = [];\n                        for (var i = 0; i < object.return_placeholder_ids.length; ++i) {\n                            if (typeof object.return_placeholder_ids[i] !== \"object\")\n                                throw TypeError(\".syft_proto.execution.v1.StorageAction.return_placeholder_ids: object expected\");\n                            message.return_placeholder_ids[i] = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.return_placeholder_ids[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a StorageAction message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @static\n                 * @param {syft_proto.execution.v1.StorageAction} message StorageAction\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                StorageAction.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.args = [];\n                        object.return_ids = [];\n                        object.return_placeholder_ids = [];\n                    }\n                    if (options.objects || options.defaults)\n                        object.kwargs = {};\n                    if (options.defaults)\n                        object.command = \"\";\n                    if (message.command != null && message.hasOwnProperty(\"command\"))\n                        object.command = message.command;\n                    if (message.target_pointer != null && message.hasOwnProperty(\"target_pointer\")) {\n                        object.target_pointer = $root.syft_proto.generic.pointers.v1.PointerTensor.toObject(message.target_pointer, options);\n                        if (options.oneofs)\n                            object.target = \"target_pointer\";\n                    }\n                    if (message.target_placeholder_id != null && message.hasOwnProperty(\"target_placeholder_id\")) {\n                        object.target_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.target_placeholder_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_placeholder_id\";\n                    }\n                    if (message.target_tensor != null && message.hasOwnProperty(\"target_tensor\")) {\n                        object.target_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.target_tensor, options);\n                        if (options.oneofs)\n                            object.target = \"target_tensor\";\n                    }\n                    if (message.args && message.args.length) {\n                        object.args = [];\n                        for (var j = 0; j < message.args.length; ++j)\n                            object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                    }\n                    var keys2;\n                    if (message.kwargs && (keys2 = Object.keys(message.kwargs)).length) {\n                        object.kwargs = {};\n                        for (var j = 0; j < keys2.length; ++j)\n                            object.kwargs[keys2[j]] = $root.syft_proto.types.syft.v1.Arg.toObject(message.kwargs[keys2[j]], options);\n                    }\n                    if (message.return_ids && message.return_ids.length) {\n                        object.return_ids = [];\n                        for (var j = 0; j < message.return_ids.length; ++j)\n                            object.return_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.return_ids[j], options);\n                    }\n                    if (message.return_placeholder_ids && message.return_placeholder_ids.length) {\n                        object.return_placeholder_ids = [];\n                        for (var j = 0; j < message.return_placeholder_ids.length; ++j)\n                            object.return_placeholder_ids[j] = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.return_placeholder_ids[j], options);\n                    }\n                    if (message.target_id != null && message.hasOwnProperty(\"target_id\")) {\n                        object.target_id = $root.syft_proto.types.syft.v1.Id.toObject(message.target_id, options);\n                        if (options.oneofs)\n                            object.target = \"target_id\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this StorageAction to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.execution.v1.StorageAction\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                StorageAction.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return StorageAction;\n            })();\n\n            return v1;\n        })();\n\n        return execution;\n    })();\n\n    syft_proto.types = (function() {\n\n        /**\n         * Namespace types.\n         * @memberof syft_proto\n         * @namespace\n         */\n        var types = {};\n\n        types.syft = (function() {\n\n            /**\n             * Namespace syft.\n             * @memberof syft_proto.types\n             * @namespace\n             */\n            var syft = {};\n\n            syft.v1 = (function() {\n\n                /**\n                 * Namespace v1.\n                 * @memberof syft_proto.types.syft\n                 * @namespace\n                 */\n                var v1 = {};\n\n                v1.Id = (function() {\n\n                    /**\n                     * Properties of an Id.\n                     * @memberof syft_proto.types.syft.v1\n                     * @interface IId\n                     * @property {number|Long|null} [id_int] Id id_int\n                     * @property {string|null} [id_str] Id id_str\n                     */\n\n                    /**\n                     * Constructs a new Id.\n                     * @memberof syft_proto.types.syft.v1\n                     * @classdesc Represents an Id.\n                     * @implements IId\n                     * @constructor\n                     * @param {syft_proto.types.syft.v1.IId=} [properties] Properties to set\n                     */\n                    function Id(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Id id_int.\n                     * @member {number|Long} id_int\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @instance\n                     */\n                    Id.prototype.id_int = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Id id_str.\n                     * @member {string} id_str\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @instance\n                     */\n                    Id.prototype.id_str = \"\";\n\n                    // OneOf field names bound to virtual getters and setters\n                    var $oneOfFields;\n\n                    /**\n                     * Id id.\n                     * @member {\"id_int\"|\"id_str\"|undefined} id\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @instance\n                     */\n                    Object.defineProperty(Id.prototype, \"id\", {\n                        get: $util.oneOfGetter($oneOfFields = [\"id_int\", \"id_str\"]),\n                        set: $util.oneOfSetter($oneOfFields)\n                    });\n\n                    /**\n                     * Creates a new Id instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IId=} [properties] Properties to set\n                     * @returns {syft_proto.types.syft.v1.Id} Id instance\n                     */\n                    Id.create = function create(properties) {\n                        return new Id(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Id message. Does not implicitly {@link syft_proto.types.syft.v1.Id.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IId} message Id message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Id.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.id_int != null && message.hasOwnProperty(\"id_int\"))\n                            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id_int);\n                        if (message.id_str != null && message.hasOwnProperty(\"id_str\"))\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.id_str);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Id message, length delimited. Does not implicitly {@link syft_proto.types.syft.v1.Id.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IId} message Id message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Id.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes an Id message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.syft.v1.Id} Id\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Id.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.syft.v1.Id();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id_int = reader.int64();\n                                break;\n                            case 2:\n                                message.id_str = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes an Id message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.syft.v1.Id} Id\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Id.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies an Id message.\n                     * @function verify\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Id.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        var properties = {};\n                        if (message.id_int != null && message.hasOwnProperty(\"id_int\")) {\n                            properties.id = 1;\n                            if (!$util.isInteger(message.id_int) && !(message.id_int && $util.isInteger(message.id_int.low) && $util.isInteger(message.id_int.high)))\n                                return \"id_int: integer|Long expected\";\n                        }\n                        if (message.id_str != null && message.hasOwnProperty(\"id_str\")) {\n                            if (properties.id === 1)\n                                return \"id: multiple values\";\n                            properties.id = 1;\n                            if (!$util.isString(message.id_str))\n                                return \"id_str: string expected\";\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates an Id message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.syft.v1.Id} Id\n                     */\n                    Id.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.syft.v1.Id)\n                            return object;\n                        var message = new $root.syft_proto.types.syft.v1.Id();\n                        if (object.id_int != null)\n                            if ($util.Long)\n                                (message.id_int = $util.Long.fromValue(object.id_int)).unsigned = false;\n                            else if (typeof object.id_int === \"string\")\n                                message.id_int = parseInt(object.id_int, 10);\n                            else if (typeof object.id_int === \"number\")\n                                message.id_int = object.id_int;\n                            else if (typeof object.id_int === \"object\")\n                                message.id_int = new $util.LongBits(object.id_int.low >>> 0, object.id_int.high >>> 0).toNumber();\n                        if (object.id_str != null)\n                            message.id_str = String(object.id_str);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from an Id message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @static\n                     * @param {syft_proto.types.syft.v1.Id} message Id\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Id.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (message.id_int != null && message.hasOwnProperty(\"id_int\")) {\n                            if (typeof message.id_int === \"number\")\n                                object.id_int = options.longs === String ? String(message.id_int) : message.id_int;\n                            else\n                                object.id_int = options.longs === String ? $util.Long.prototype.toString.call(message.id_int) : options.longs === Number ? new $util.LongBits(message.id_int.low >>> 0, message.id_int.high >>> 0).toNumber() : message.id_int;\n                            if (options.oneofs)\n                                object.id = \"id_int\";\n                        }\n                        if (message.id_str != null && message.hasOwnProperty(\"id_str\")) {\n                            object.id_str = message.id_str;\n                            if (options.oneofs)\n                                object.id = \"id_str\";\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Id to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.syft.v1.Id\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Id.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Id;\n                })();\n\n                v1.Shape = (function() {\n\n                    /**\n                     * Properties of a Shape.\n                     * @memberof syft_proto.types.syft.v1\n                     * @interface IShape\n                     * @property {Array.<number>|null} [dims] Shape dims\n                     */\n\n                    /**\n                     * Constructs a new Shape.\n                     * @memberof syft_proto.types.syft.v1\n                     * @classdesc Represents a Shape.\n                     * @implements IShape\n                     * @constructor\n                     * @param {syft_proto.types.syft.v1.IShape=} [properties] Properties to set\n                     */\n                    function Shape(properties) {\n                        this.dims = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Shape dims.\n                     * @member {Array.<number>} dims\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @instance\n                     */\n                    Shape.prototype.dims = $util.emptyArray;\n\n                    /**\n                     * Creates a new Shape instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IShape=} [properties] Properties to set\n                     * @returns {syft_proto.types.syft.v1.Shape} Shape instance\n                     */\n                    Shape.create = function create(properties) {\n                        return new Shape(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Shape message. Does not implicitly {@link syft_proto.types.syft.v1.Shape.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IShape} message Shape message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Shape.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.dims != null && message.dims.length) {\n                            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                            for (var i = 0; i < message.dims.length; ++i)\n                                writer.int32(message.dims[i]);\n                            writer.ldelim();\n                        }\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Shape message, length delimited. Does not implicitly {@link syft_proto.types.syft.v1.Shape.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IShape} message Shape message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Shape.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a Shape message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.syft.v1.Shape} Shape\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Shape.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.syft.v1.Shape();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.dims && message.dims.length))\n                                    message.dims = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.dims.push(reader.int32());\n                                } else\n                                    message.dims.push(reader.int32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Shape message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.syft.v1.Shape} Shape\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Shape.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a Shape message.\n                     * @function verify\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Shape.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                            if (!Array.isArray(message.dims))\n                                return \"dims: array expected\";\n                            for (var i = 0; i < message.dims.length; ++i)\n                                if (!$util.isInteger(message.dims[i]))\n                                    return \"dims: integer[] expected\";\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a Shape message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.syft.v1.Shape} Shape\n                     */\n                    Shape.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.syft.v1.Shape)\n                            return object;\n                        var message = new $root.syft_proto.types.syft.v1.Shape();\n                        if (object.dims) {\n                            if (!Array.isArray(object.dims))\n                                throw TypeError(\".syft_proto.types.syft.v1.Shape.dims: array expected\");\n                            message.dims = [];\n                            for (var i = 0; i < object.dims.length; ++i)\n                                message.dims[i] = object.dims[i] | 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Shape message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @static\n                     * @param {syft_proto.types.syft.v1.Shape} message Shape\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Shape.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.dims = [];\n                        if (message.dims && message.dims.length) {\n                            object.dims = [];\n                            for (var j = 0; j < message.dims.length; ++j)\n                                object.dims[j] = message.dims[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Shape to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.syft.v1.Shape\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Shape.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Shape;\n                })();\n\n                v1.Arg = (function() {\n\n                    /**\n                     * Properties of an Arg.\n                     * @memberof syft_proto.types.syft.v1\n                     * @interface IArg\n                     * @property {boolean|null} [arg_bool] Arg arg_bool\n                     * @property {number|Long|null} [arg_int] Arg arg_int\n                     * @property {number|null} [arg_float] Arg arg_float\n                     * @property {string|null} [arg_str] Arg arg_str\n                     * @property {syft_proto.types.syft.v1.IShape|null} [arg_shape] Arg arg_shape\n                     * @property {syft_proto.types.torch.v1.ITorchTensor|null} [arg_tensor] Arg arg_tensor\n                     * @property {syft_proto.types.torch.v1.IParameter|null} [arg_torch_param] Arg arg_torch_param\n                     * @property {syft_proto.generic.pointers.v1.IPointerTensor|null} [arg_pointer_tensor] Arg arg_pointer_tensor\n                     * @property {syft_proto.execution.v1.IPlaceholder|null} [arg_placeholder] Arg arg_placeholder\n                     * @property {syft_proto.execution.v1.IPlaceholderId|null} [arg_placeholder_id] Arg arg_placeholder_id\n                     * @property {syft_proto.types.syft.v1.IArgList|null} [arg_list] Arg arg_list\n                     */\n\n                    /**\n                     * Constructs a new Arg.\n                     * @memberof syft_proto.types.syft.v1\n                     * @classdesc Represents an Arg.\n                     * @implements IArg\n                     * @constructor\n                     * @param {syft_proto.types.syft.v1.IArg=} [properties] Properties to set\n                     */\n                    function Arg(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Arg arg_bool.\n                     * @member {boolean} arg_bool\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_bool = false;\n\n                    /**\n                     * Arg arg_int.\n                     * @member {number|Long} arg_int\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_int = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Arg arg_float.\n                     * @member {number} arg_float\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_float = 0;\n\n                    /**\n                     * Arg arg_str.\n                     * @member {string} arg_str\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_str = \"\";\n\n                    /**\n                     * Arg arg_shape.\n                     * @member {syft_proto.types.syft.v1.IShape|null|undefined} arg_shape\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_shape = null;\n\n                    /**\n                     * Arg arg_tensor.\n                     * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} arg_tensor\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_tensor = null;\n\n                    /**\n                     * Arg arg_torch_param.\n                     * @member {syft_proto.types.torch.v1.IParameter|null|undefined} arg_torch_param\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_torch_param = null;\n\n                    /**\n                     * Arg arg_pointer_tensor.\n                     * @member {syft_proto.generic.pointers.v1.IPointerTensor|null|undefined} arg_pointer_tensor\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_pointer_tensor = null;\n\n                    /**\n                     * Arg arg_placeholder.\n                     * @member {syft_proto.execution.v1.IPlaceholder|null|undefined} arg_placeholder\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_placeholder = null;\n\n                    /**\n                     * Arg arg_placeholder_id.\n                     * @member {syft_proto.execution.v1.IPlaceholderId|null|undefined} arg_placeholder_id\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_placeholder_id = null;\n\n                    /**\n                     * Arg arg_list.\n                     * @member {syft_proto.types.syft.v1.IArgList|null|undefined} arg_list\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Arg.prototype.arg_list = null;\n\n                    // OneOf field names bound to virtual getters and setters\n                    var $oneOfFields;\n\n                    /**\n                     * Arg arg.\n                     * @member {\"arg_bool\"|\"arg_int\"|\"arg_float\"|\"arg_str\"|\"arg_shape\"|\"arg_tensor\"|\"arg_torch_param\"|\"arg_pointer_tensor\"|\"arg_placeholder\"|\"arg_placeholder_id\"|\"arg_list\"|undefined} arg\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     */\n                    Object.defineProperty(Arg.prototype, \"arg\", {\n                        get: $util.oneOfGetter($oneOfFields = [\"arg_bool\", \"arg_int\", \"arg_float\", \"arg_str\", \"arg_shape\", \"arg_tensor\", \"arg_torch_param\", \"arg_pointer_tensor\", \"arg_placeholder\", \"arg_placeholder_id\", \"arg_list\"]),\n                        set: $util.oneOfSetter($oneOfFields)\n                    });\n\n                    /**\n                     * Creates a new Arg instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArg=} [properties] Properties to set\n                     * @returns {syft_proto.types.syft.v1.Arg} Arg instance\n                     */\n                    Arg.create = function create(properties) {\n                        return new Arg(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Arg message. Does not implicitly {@link syft_proto.types.syft.v1.Arg.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArg} message Arg message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Arg.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.arg_bool != null && message.hasOwnProperty(\"arg_bool\"))\n                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.arg_bool);\n                        if (message.arg_int != null && message.hasOwnProperty(\"arg_int\"))\n                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.arg_int);\n                        if (message.arg_float != null && message.hasOwnProperty(\"arg_float\"))\n                            writer.uint32(/* id 3, wireType 5 =*/29).float(message.arg_float);\n                        if (message.arg_str != null && message.hasOwnProperty(\"arg_str\"))\n                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.arg_str);\n                        if (message.arg_shape != null && message.hasOwnProperty(\"arg_shape\"))\n                            $root.syft_proto.types.syft.v1.Shape.encode(message.arg_shape, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                        if (message.arg_tensor != null && message.hasOwnProperty(\"arg_tensor\"))\n                            $root.syft_proto.types.torch.v1.TorchTensor.encode(message.arg_tensor, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                        if (message.arg_torch_param != null && message.hasOwnProperty(\"arg_torch_param\"))\n                            $root.syft_proto.types.torch.v1.Parameter.encode(message.arg_torch_param, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                        if (message.arg_pointer_tensor != null && message.hasOwnProperty(\"arg_pointer_tensor\"))\n                            $root.syft_proto.generic.pointers.v1.PointerTensor.encode(message.arg_pointer_tensor, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                        if (message.arg_placeholder != null && message.hasOwnProperty(\"arg_placeholder\"))\n                            $root.syft_proto.execution.v1.Placeholder.encode(message.arg_placeholder, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                        if (message.arg_placeholder_id != null && message.hasOwnProperty(\"arg_placeholder_id\"))\n                            $root.syft_proto.execution.v1.PlaceholderId.encode(message.arg_placeholder_id, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                        if (message.arg_list != null && message.hasOwnProperty(\"arg_list\"))\n                            $root.syft_proto.types.syft.v1.ArgList.encode(message.arg_list, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Arg message, length delimited. Does not implicitly {@link syft_proto.types.syft.v1.Arg.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArg} message Arg message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Arg.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes an Arg message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.syft.v1.Arg} Arg\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Arg.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.syft.v1.Arg();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.arg_bool = reader.bool();\n                                break;\n                            case 2:\n                                message.arg_int = reader.int64();\n                                break;\n                            case 3:\n                                message.arg_float = reader.float();\n                                break;\n                            case 4:\n                                message.arg_str = reader.string();\n                                break;\n                            case 5:\n                                message.arg_shape = $root.syft_proto.types.syft.v1.Shape.decode(reader, reader.uint32());\n                                break;\n                            case 6:\n                                message.arg_tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                break;\n                            case 7:\n                                message.arg_torch_param = $root.syft_proto.types.torch.v1.Parameter.decode(reader, reader.uint32());\n                                break;\n                            case 8:\n                                message.arg_pointer_tensor = $root.syft_proto.generic.pointers.v1.PointerTensor.decode(reader, reader.uint32());\n                                break;\n                            case 9:\n                                message.arg_placeholder = $root.syft_proto.execution.v1.Placeholder.decode(reader, reader.uint32());\n                                break;\n                            case 10:\n                                message.arg_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.decode(reader, reader.uint32());\n                                break;\n                            case 11:\n                                message.arg_list = $root.syft_proto.types.syft.v1.ArgList.decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes an Arg message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.syft.v1.Arg} Arg\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Arg.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies an Arg message.\n                     * @function verify\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Arg.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        var properties = {};\n                        if (message.arg_bool != null && message.hasOwnProperty(\"arg_bool\")) {\n                            properties.arg = 1;\n                            if (typeof message.arg_bool !== \"boolean\")\n                                return \"arg_bool: boolean expected\";\n                        }\n                        if (message.arg_int != null && message.hasOwnProperty(\"arg_int\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            if (!$util.isInteger(message.arg_int) && !(message.arg_int && $util.isInteger(message.arg_int.low) && $util.isInteger(message.arg_int.high)))\n                                return \"arg_int: integer|Long expected\";\n                        }\n                        if (message.arg_float != null && message.hasOwnProperty(\"arg_float\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            if (typeof message.arg_float !== \"number\")\n                                return \"arg_float: number expected\";\n                        }\n                        if (message.arg_str != null && message.hasOwnProperty(\"arg_str\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            if (!$util.isString(message.arg_str))\n                                return \"arg_str: string expected\";\n                        }\n                        if (message.arg_shape != null && message.hasOwnProperty(\"arg_shape\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.types.syft.v1.Shape.verify(message.arg_shape);\n                                if (error)\n                                    return \"arg_shape.\" + error;\n                            }\n                        }\n                        if (message.arg_tensor != null && message.hasOwnProperty(\"arg_tensor\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.arg_tensor);\n                                if (error)\n                                    return \"arg_tensor.\" + error;\n                            }\n                        }\n                        if (message.arg_torch_param != null && message.hasOwnProperty(\"arg_torch_param\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.types.torch.v1.Parameter.verify(message.arg_torch_param);\n                                if (error)\n                                    return \"arg_torch_param.\" + error;\n                            }\n                        }\n                        if (message.arg_pointer_tensor != null && message.hasOwnProperty(\"arg_pointer_tensor\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.generic.pointers.v1.PointerTensor.verify(message.arg_pointer_tensor);\n                                if (error)\n                                    return \"arg_pointer_tensor.\" + error;\n                            }\n                        }\n                        if (message.arg_placeholder != null && message.hasOwnProperty(\"arg_placeholder\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.Placeholder.verify(message.arg_placeholder);\n                                if (error)\n                                    return \"arg_placeholder.\" + error;\n                            }\n                        }\n                        if (message.arg_placeholder_id != null && message.hasOwnProperty(\"arg_placeholder_id\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.execution.v1.PlaceholderId.verify(message.arg_placeholder_id);\n                                if (error)\n                                    return \"arg_placeholder_id.\" + error;\n                            }\n                        }\n                        if (message.arg_list != null && message.hasOwnProperty(\"arg_list\")) {\n                            if (properties.arg === 1)\n                                return \"arg: multiple values\";\n                            properties.arg = 1;\n                            {\n                                var error = $root.syft_proto.types.syft.v1.ArgList.verify(message.arg_list);\n                                if (error)\n                                    return \"arg_list.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates an Arg message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.syft.v1.Arg} Arg\n                     */\n                    Arg.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.syft.v1.Arg)\n                            return object;\n                        var message = new $root.syft_proto.types.syft.v1.Arg();\n                        if (object.arg_bool != null)\n                            message.arg_bool = Boolean(object.arg_bool);\n                        if (object.arg_int != null)\n                            if ($util.Long)\n                                (message.arg_int = $util.Long.fromValue(object.arg_int)).unsigned = false;\n                            else if (typeof object.arg_int === \"string\")\n                                message.arg_int = parseInt(object.arg_int, 10);\n                            else if (typeof object.arg_int === \"number\")\n                                message.arg_int = object.arg_int;\n                            else if (typeof object.arg_int === \"object\")\n                                message.arg_int = new $util.LongBits(object.arg_int.low >>> 0, object.arg_int.high >>> 0).toNumber();\n                        if (object.arg_float != null)\n                            message.arg_float = Number(object.arg_float);\n                        if (object.arg_str != null)\n                            message.arg_str = String(object.arg_str);\n                        if (object.arg_shape != null) {\n                            if (typeof object.arg_shape !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_shape: object expected\");\n                            message.arg_shape = $root.syft_proto.types.syft.v1.Shape.fromObject(object.arg_shape);\n                        }\n                        if (object.arg_tensor != null) {\n                            if (typeof object.arg_tensor !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_tensor: object expected\");\n                            message.arg_tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.arg_tensor);\n                        }\n                        if (object.arg_torch_param != null) {\n                            if (typeof object.arg_torch_param !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_torch_param: object expected\");\n                            message.arg_torch_param = $root.syft_proto.types.torch.v1.Parameter.fromObject(object.arg_torch_param);\n                        }\n                        if (object.arg_pointer_tensor != null) {\n                            if (typeof object.arg_pointer_tensor !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_pointer_tensor: object expected\");\n                            message.arg_pointer_tensor = $root.syft_proto.generic.pointers.v1.PointerTensor.fromObject(object.arg_pointer_tensor);\n                        }\n                        if (object.arg_placeholder != null) {\n                            if (typeof object.arg_placeholder !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_placeholder: object expected\");\n                            message.arg_placeholder = $root.syft_proto.execution.v1.Placeholder.fromObject(object.arg_placeholder);\n                        }\n                        if (object.arg_placeholder_id != null) {\n                            if (typeof object.arg_placeholder_id !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_placeholder_id: object expected\");\n                            message.arg_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.fromObject(object.arg_placeholder_id);\n                        }\n                        if (object.arg_list != null) {\n                            if (typeof object.arg_list !== \"object\")\n                                throw TypeError(\".syft_proto.types.syft.v1.Arg.arg_list: object expected\");\n                            message.arg_list = $root.syft_proto.types.syft.v1.ArgList.fromObject(object.arg_list);\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from an Arg message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @static\n                     * @param {syft_proto.types.syft.v1.Arg} message Arg\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Arg.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (message.arg_bool != null && message.hasOwnProperty(\"arg_bool\")) {\n                            object.arg_bool = message.arg_bool;\n                            if (options.oneofs)\n                                object.arg = \"arg_bool\";\n                        }\n                        if (message.arg_int != null && message.hasOwnProperty(\"arg_int\")) {\n                            if (typeof message.arg_int === \"number\")\n                                object.arg_int = options.longs === String ? String(message.arg_int) : message.arg_int;\n                            else\n                                object.arg_int = options.longs === String ? $util.Long.prototype.toString.call(message.arg_int) : options.longs === Number ? new $util.LongBits(message.arg_int.low >>> 0, message.arg_int.high >>> 0).toNumber() : message.arg_int;\n                            if (options.oneofs)\n                                object.arg = \"arg_int\";\n                        }\n                        if (message.arg_float != null && message.hasOwnProperty(\"arg_float\")) {\n                            object.arg_float = options.json && !isFinite(message.arg_float) ? String(message.arg_float) : message.arg_float;\n                            if (options.oneofs)\n                                object.arg = \"arg_float\";\n                        }\n                        if (message.arg_str != null && message.hasOwnProperty(\"arg_str\")) {\n                            object.arg_str = message.arg_str;\n                            if (options.oneofs)\n                                object.arg = \"arg_str\";\n                        }\n                        if (message.arg_shape != null && message.hasOwnProperty(\"arg_shape\")) {\n                            object.arg_shape = $root.syft_proto.types.syft.v1.Shape.toObject(message.arg_shape, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_shape\";\n                        }\n                        if (message.arg_tensor != null && message.hasOwnProperty(\"arg_tensor\")) {\n                            object.arg_tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.arg_tensor, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_tensor\";\n                        }\n                        if (message.arg_torch_param != null && message.hasOwnProperty(\"arg_torch_param\")) {\n                            object.arg_torch_param = $root.syft_proto.types.torch.v1.Parameter.toObject(message.arg_torch_param, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_torch_param\";\n                        }\n                        if (message.arg_pointer_tensor != null && message.hasOwnProperty(\"arg_pointer_tensor\")) {\n                            object.arg_pointer_tensor = $root.syft_proto.generic.pointers.v1.PointerTensor.toObject(message.arg_pointer_tensor, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_pointer_tensor\";\n                        }\n                        if (message.arg_placeholder != null && message.hasOwnProperty(\"arg_placeholder\")) {\n                            object.arg_placeholder = $root.syft_proto.execution.v1.Placeholder.toObject(message.arg_placeholder, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_placeholder\";\n                        }\n                        if (message.arg_placeholder_id != null && message.hasOwnProperty(\"arg_placeholder_id\")) {\n                            object.arg_placeholder_id = $root.syft_proto.execution.v1.PlaceholderId.toObject(message.arg_placeholder_id, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_placeholder_id\";\n                        }\n                        if (message.arg_list != null && message.hasOwnProperty(\"arg_list\")) {\n                            object.arg_list = $root.syft_proto.types.syft.v1.ArgList.toObject(message.arg_list, options);\n                            if (options.oneofs)\n                                object.arg = \"arg_list\";\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Arg to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.syft.v1.Arg\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Arg.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Arg;\n                })();\n\n                v1.ArgList = (function() {\n\n                    /**\n                     * Properties of an ArgList.\n                     * @memberof syft_proto.types.syft.v1\n                     * @interface IArgList\n                     * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] ArgList args\n                     */\n\n                    /**\n                     * Constructs a new ArgList.\n                     * @memberof syft_proto.types.syft.v1\n                     * @classdesc Represents an ArgList.\n                     * @implements IArgList\n                     * @constructor\n                     * @param {syft_proto.types.syft.v1.IArgList=} [properties] Properties to set\n                     */\n                    function ArgList(properties) {\n                        this.args = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * ArgList args.\n                     * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @instance\n                     */\n                    ArgList.prototype.args = $util.emptyArray;\n\n                    /**\n                     * Creates a new ArgList instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArgList=} [properties] Properties to set\n                     * @returns {syft_proto.types.syft.v1.ArgList} ArgList instance\n                     */\n                    ArgList.create = function create(properties) {\n                        return new ArgList(properties);\n                    };\n\n                    /**\n                     * Encodes the specified ArgList message. Does not implicitly {@link syft_proto.types.syft.v1.ArgList.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArgList} message ArgList message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ArgList.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.args != null && message.args.length)\n                            for (var i = 0; i < message.args.length; ++i)\n                                $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified ArgList message, length delimited. Does not implicitly {@link syft_proto.types.syft.v1.ArgList.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {syft_proto.types.syft.v1.IArgList} message ArgList message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ArgList.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes an ArgList message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.syft.v1.ArgList} ArgList\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ArgList.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.syft.v1.ArgList();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.args && message.args.length))\n                                    message.args = [];\n                                message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes an ArgList message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.syft.v1.ArgList} ArgList\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ArgList.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies an ArgList message.\n                     * @function verify\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ArgList.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.args != null && message.hasOwnProperty(\"args\")) {\n                            if (!Array.isArray(message.args))\n                                return \"args: array expected\";\n                            for (var i = 0; i < message.args.length; ++i) {\n                                var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                                if (error)\n                                    return \"args.\" + error;\n                            }\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates an ArgList message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.syft.v1.ArgList} ArgList\n                     */\n                    ArgList.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.syft.v1.ArgList)\n                            return object;\n                        var message = new $root.syft_proto.types.syft.v1.ArgList();\n                        if (object.args) {\n                            if (!Array.isArray(object.args))\n                                throw TypeError(\".syft_proto.types.syft.v1.ArgList.args: array expected\");\n                            message.args = [];\n                            for (var i = 0; i < object.args.length; ++i) {\n                                if (typeof object.args[i] !== \"object\")\n                                    throw TypeError(\".syft_proto.types.syft.v1.ArgList.args: object expected\");\n                                message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from an ArgList message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @static\n                     * @param {syft_proto.types.syft.v1.ArgList} message ArgList\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ArgList.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.args = [];\n                        if (message.args && message.args.length) {\n                            object.args = [];\n                            for (var j = 0; j < message.args.length; ++j)\n                                object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this ArgList to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.syft.v1.ArgList\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ArgList.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return ArgList;\n                })();\n\n                return v1;\n            })();\n\n            return syft;\n        })();\n\n        types.torch = (function() {\n\n            /**\n             * Namespace torch.\n             * @memberof syft_proto.types\n             * @namespace\n             */\n            var torch = {};\n\n            torch.v1 = (function() {\n\n                /**\n                 * Namespace v1.\n                 * @memberof syft_proto.types.torch\n                 * @namespace\n                 */\n                var v1 = {};\n\n                v1.TorchTensor = (function() {\n\n                    /**\n                     * Properties of a TorchTensor.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ITorchTensor\n                     * @property {syft_proto.types.syft.v1.IId|null} [id] TorchTensor id\n                     * @property {syft_proto.types.torch.v1.ITensorData|null} [contents_data] TorchTensor contents_data\n                     * @property {Uint8Array|null} [contents_bin] TorchTensor contents_bin\n                     * @property {syft_proto.types.torch.v1.ITorchTensor|null} [chain] TorchTensor chain\n                     * @property {syft_proto.types.torch.v1.ITorchTensor|null} [grad_chain] TorchTensor grad_chain\n                     * @property {Array.<string>|null} [tags] TorchTensor tags\n                     * @property {string|null} [description] TorchTensor description\n                     * @property {syft_proto.types.torch.v1.TorchTensor.Serializer|null} [serializer] TorchTensor serializer\n                     */\n\n                    /**\n                     * Constructs a new TorchTensor.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a TorchTensor.\n                     * @implements ITorchTensor\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ITorchTensor=} [properties] Properties to set\n                     */\n                    function TorchTensor(properties) {\n                        this.tags = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TorchTensor id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.id = null;\n\n                    /**\n                     * TorchTensor contents_data.\n                     * @member {syft_proto.types.torch.v1.ITensorData|null|undefined} contents_data\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.contents_data = null;\n\n                    /**\n                     * TorchTensor contents_bin.\n                     * @member {Uint8Array} contents_bin\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.contents_bin = $util.newBuffer([]);\n\n                    /**\n                     * TorchTensor chain.\n                     * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} chain\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.chain = null;\n\n                    /**\n                     * TorchTensor grad_chain.\n                     * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} grad_chain\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.grad_chain = null;\n\n                    /**\n                     * TorchTensor tags.\n                     * @member {Array.<string>} tags\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * TorchTensor description.\n                     * @member {string} description\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.description = \"\";\n\n                    /**\n                     * TorchTensor serializer.\n                     * @member {syft_proto.types.torch.v1.TorchTensor.Serializer} serializer\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    TorchTensor.prototype.serializer = 0;\n\n                    // OneOf field names bound to virtual getters and setters\n                    var $oneOfFields;\n\n                    /**\n                     * TorchTensor contents.\n                     * @member {\"contents_data\"|\"contents_bin\"|undefined} contents\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     */\n                    Object.defineProperty(TorchTensor.prototype, \"contents\", {\n                        get: $util.oneOfGetter($oneOfFields = [\"contents_data\", \"contents_bin\"]),\n                        set: $util.oneOfSetter($oneOfFields)\n                    });\n\n                    /**\n                     * Creates a new TorchTensor instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchTensor=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.TorchTensor} TorchTensor instance\n                     */\n                    TorchTensor.create = function create(properties) {\n                        return new TorchTensor(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TorchTensor message. Does not implicitly {@link syft_proto.types.torch.v1.TorchTensor.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchTensor} message TorchTensor message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TorchTensor.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.contents_data != null && message.hasOwnProperty(\"contents_data\"))\n                            $root.syft_proto.types.torch.v1.TensorData.encode(message.contents_data, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.contents_bin != null && message.hasOwnProperty(\"contents_bin\"))\n                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.contents_bin);\n                        if (message.chain != null && message.hasOwnProperty(\"chain\"))\n                            $root.syft_proto.types.torch.v1.TorchTensor.encode(message.chain, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                        if (message.grad_chain != null && message.hasOwnProperty(\"grad_chain\"))\n                            $root.syft_proto.types.torch.v1.TorchTensor.encode(message.grad_chain, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                        if (message.tags != null && message.tags.length)\n                            for (var i = 0; i < message.tags.length; ++i)\n                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.tags[i]);\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.description);\n                        if (message.serializer != null && message.hasOwnProperty(\"serializer\"))\n                            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.serializer);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TorchTensor message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.TorchTensor.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchTensor} message TorchTensor message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TorchTensor.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TorchTensor message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.TorchTensor} TorchTensor\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TorchTensor.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.TorchTensor();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.contents_data = $root.syft_proto.types.torch.v1.TensorData.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.contents_bin = reader.bytes();\n                                break;\n                            case 4:\n                                message.chain = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                break;\n                            case 5:\n                                message.grad_chain = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                break;\n                            case 6:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                message.tags.push(reader.string());\n                                break;\n                            case 7:\n                                message.description = reader.string();\n                                break;\n                            case 8:\n                                message.serializer = reader.int32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TorchTensor message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.TorchTensor} TorchTensor\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TorchTensor.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TorchTensor message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TorchTensor.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        var properties = {};\n                        if (message.id != null && message.hasOwnProperty(\"id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                            if (error)\n                                return \"id.\" + error;\n                        }\n                        if (message.contents_data != null && message.hasOwnProperty(\"contents_data\")) {\n                            properties.contents = 1;\n                            {\n                                var error = $root.syft_proto.types.torch.v1.TensorData.verify(message.contents_data);\n                                if (error)\n                                    return \"contents_data.\" + error;\n                            }\n                        }\n                        if (message.contents_bin != null && message.hasOwnProperty(\"contents_bin\")) {\n                            if (properties.contents === 1)\n                                return \"contents: multiple values\";\n                            properties.contents = 1;\n                            if (!(message.contents_bin && typeof message.contents_bin.length === \"number\" || $util.isString(message.contents_bin)))\n                                return \"contents_bin: buffer expected\";\n                        }\n                        if (message.chain != null && message.hasOwnProperty(\"chain\")) {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.chain);\n                            if (error)\n                                return \"chain.\" + error;\n                        }\n                        if (message.grad_chain != null && message.hasOwnProperty(\"grad_chain\")) {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.grad_chain);\n                            if (error)\n                                return \"grad_chain.\" + error;\n                        }\n                        if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                            if (!Array.isArray(message.tags))\n                                return \"tags: array expected\";\n                            for (var i = 0; i < message.tags.length; ++i)\n                                if (!$util.isString(message.tags[i]))\n                                    return \"tags: string[] expected\";\n                        }\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            if (!$util.isString(message.description))\n                                return \"description: string expected\";\n                        if (message.serializer != null && message.hasOwnProperty(\"serializer\"))\n                            switch (message.serializer) {\n                            default:\n                                return \"serializer: enum value expected\";\n                            case 0:\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                                break;\n                            }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TorchTensor message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.TorchTensor} TorchTensor\n                     */\n                    TorchTensor.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.TorchTensor)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.TorchTensor();\n                        if (object.id != null) {\n                            if (typeof object.id !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.TorchTensor.id: object expected\");\n                            message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                        }\n                        if (object.contents_data != null) {\n                            if (typeof object.contents_data !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.TorchTensor.contents_data: object expected\");\n                            message.contents_data = $root.syft_proto.types.torch.v1.TensorData.fromObject(object.contents_data);\n                        }\n                        if (object.contents_bin != null)\n                            if (typeof object.contents_bin === \"string\")\n                                $util.base64.decode(object.contents_bin, message.contents_bin = $util.newBuffer($util.base64.length(object.contents_bin)), 0);\n                            else if (object.contents_bin.length)\n                                message.contents_bin = object.contents_bin;\n                        if (object.chain != null) {\n                            if (typeof object.chain !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.TorchTensor.chain: object expected\");\n                            message.chain = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.chain);\n                        }\n                        if (object.grad_chain != null) {\n                            if (typeof object.grad_chain !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.TorchTensor.grad_chain: object expected\");\n                            message.grad_chain = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.grad_chain);\n                        }\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".syft_proto.types.torch.v1.TorchTensor.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = String(object.tags[i]);\n                        }\n                        if (object.description != null)\n                            message.description = String(object.description);\n                        switch (object.serializer) {\n                        case \"SERIALIZER_UNSPECIFIED\":\n                        case 0:\n                            message.serializer = 0;\n                            break;\n                        case \"SERIALIZER_TORCH\":\n                        case 1:\n                            message.serializer = 1;\n                            break;\n                        case \"SERIALIZER_NUMPY\":\n                        case 2:\n                            message.serializer = 2;\n                            break;\n                        case \"SERIALIZER_TF\":\n                        case 3:\n                            message.serializer = 3;\n                            break;\n                        case \"SERIALIZER_ALL\":\n                        case 4:\n                            message.serializer = 4;\n                            break;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TorchTensor message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @static\n                     * @param {syft_proto.types.torch.v1.TorchTensor} message TorchTensor\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TorchTensor.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.tags = [];\n                        if (options.defaults) {\n                            object.id = null;\n                            object.chain = null;\n                            object.grad_chain = null;\n                            object.description = \"\";\n                            object.serializer = options.enums === String ? \"SERIALIZER_UNSPECIFIED\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                        if (message.contents_data != null && message.hasOwnProperty(\"contents_data\")) {\n                            object.contents_data = $root.syft_proto.types.torch.v1.TensorData.toObject(message.contents_data, options);\n                            if (options.oneofs)\n                                object.contents = \"contents_data\";\n                        }\n                        if (message.contents_bin != null && message.hasOwnProperty(\"contents_bin\")) {\n                            object.contents_bin = options.bytes === String ? $util.base64.encode(message.contents_bin, 0, message.contents_bin.length) : options.bytes === Array ? Array.prototype.slice.call(message.contents_bin) : message.contents_bin;\n                            if (options.oneofs)\n                                object.contents = \"contents_bin\";\n                        }\n                        if (message.chain != null && message.hasOwnProperty(\"chain\"))\n                            object.chain = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.chain, options);\n                        if (message.grad_chain != null && message.hasOwnProperty(\"grad_chain\"))\n                            object.grad_chain = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.grad_chain, options);\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            object.description = message.description;\n                        if (message.serializer != null && message.hasOwnProperty(\"serializer\"))\n                            object.serializer = options.enums === String ? $root.syft_proto.types.torch.v1.TorchTensor.Serializer[message.serializer] : message.serializer;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TorchTensor to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.TorchTensor\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TorchTensor.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    /**\n                     * Serializer enum.\n                     * @name syft_proto.types.torch.v1.TorchTensor.Serializer\n                     * @enum {string}\n                     * @property {number} SERIALIZER_UNSPECIFIED=0 SERIALIZER_UNSPECIFIED value\n                     * @property {number} SERIALIZER_TORCH=1 SERIALIZER_TORCH value\n                     * @property {number} SERIALIZER_NUMPY=2 SERIALIZER_NUMPY value\n                     * @property {number} SERIALIZER_TF=3 SERIALIZER_TF value\n                     * @property {number} SERIALIZER_ALL=4 SERIALIZER_ALL value\n                     */\n                    TorchTensor.Serializer = (function() {\n                        var valuesById = {}, values = Object.create(valuesById);\n                        values[valuesById[0] = \"SERIALIZER_UNSPECIFIED\"] = 0;\n                        values[valuesById[1] = \"SERIALIZER_TORCH\"] = 1;\n                        values[valuesById[2] = \"SERIALIZER_NUMPY\"] = 2;\n                        values[valuesById[3] = \"SERIALIZER_TF\"] = 3;\n                        values[valuesById[4] = \"SERIALIZER_ALL\"] = 4;\n                        return values;\n                    })();\n\n                    return TorchTensor;\n                })();\n\n                v1.TensorData = (function() {\n\n                    /**\n                     * Properties of a TensorData.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ITensorData\n                     * @property {syft_proto.types.torch.v1.ISize|null} [shape] TensorData shape\n                     * @property {string|null} [dtype] TensorData dtype\n                     * @property {boolean|null} [is_quantized] TensorData is_quantized\n                     * @property {number|null} [scale] TensorData scale\n                     * @property {number|null} [zero_point] TensorData zero_point\n                     * @property {Array.<number>|null} [contents_uint8] TensorData contents_uint8\n                     * @property {Array.<number>|null} [contents_int8] TensorData contents_int8\n                     * @property {Array.<number>|null} [contents_int16] TensorData contents_int16\n                     * @property {Array.<number>|null} [contents_int32] TensorData contents_int32\n                     * @property {Array.<number|Long>|null} [contents_int64] TensorData contents_int64\n                     * @property {Array.<number>|null} [contents_float16] TensorData contents_float16\n                     * @property {Array.<number>|null} [contents_float32] TensorData contents_float32\n                     * @property {Array.<number>|null} [contents_float64] TensorData contents_float64\n                     * @property {Array.<boolean>|null} [contents_bool] TensorData contents_bool\n                     * @property {Array.<number>|null} [contents_qint8] TensorData contents_qint8\n                     * @property {Array.<number>|null} [contents_quint8] TensorData contents_quint8\n                     * @property {Array.<number>|null} [contents_qint32] TensorData contents_qint32\n                     * @property {Array.<number>|null} [contents_bfloat16] TensorData contents_bfloat16\n                     */\n\n                    /**\n                     * Constructs a new TensorData.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a TensorData.\n                     * @implements ITensorData\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ITensorData=} [properties] Properties to set\n                     */\n                    function TensorData(properties) {\n                        this.contents_uint8 = [];\n                        this.contents_int8 = [];\n                        this.contents_int16 = [];\n                        this.contents_int32 = [];\n                        this.contents_int64 = [];\n                        this.contents_float16 = [];\n                        this.contents_float32 = [];\n                        this.contents_float64 = [];\n                        this.contents_bool = [];\n                        this.contents_qint8 = [];\n                        this.contents_quint8 = [];\n                        this.contents_qint32 = [];\n                        this.contents_bfloat16 = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TensorData shape.\n                     * @member {syft_proto.types.torch.v1.ISize|null|undefined} shape\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.shape = null;\n\n                    /**\n                     * TensorData dtype.\n                     * @member {string} dtype\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.dtype = \"\";\n\n                    /**\n                     * TensorData is_quantized.\n                     * @member {boolean} is_quantized\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.is_quantized = false;\n\n                    /**\n                     * TensorData scale.\n                     * @member {number} scale\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.scale = 0;\n\n                    /**\n                     * TensorData zero_point.\n                     * @member {number} zero_point\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.zero_point = 0;\n\n                    /**\n                     * TensorData contents_uint8.\n                     * @member {Array.<number>} contents_uint8\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_uint8 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_int8.\n                     * @member {Array.<number>} contents_int8\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_int8 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_int16.\n                     * @member {Array.<number>} contents_int16\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_int16 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_int32.\n                     * @member {Array.<number>} contents_int32\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_int32 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_int64.\n                     * @member {Array.<number|Long>} contents_int64\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_int64 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_float16.\n                     * @member {Array.<number>} contents_float16\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_float16 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_float32.\n                     * @member {Array.<number>} contents_float32\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_float32 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_float64.\n                     * @member {Array.<number>} contents_float64\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_float64 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_bool.\n                     * @member {Array.<boolean>} contents_bool\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_bool = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_qint8.\n                     * @member {Array.<number>} contents_qint8\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_qint8 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_quint8.\n                     * @member {Array.<number>} contents_quint8\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_quint8 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_qint32.\n                     * @member {Array.<number>} contents_qint32\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_qint32 = $util.emptyArray;\n\n                    /**\n                     * TensorData contents_bfloat16.\n                     * @member {Array.<number>} contents_bfloat16\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     */\n                    TensorData.prototype.contents_bfloat16 = $util.emptyArray;\n\n                    /**\n                     * Creates a new TensorData instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITensorData=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.TensorData} TensorData instance\n                     */\n                    TensorData.create = function create(properties) {\n                        return new TensorData(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TensorData message. Does not implicitly {@link syft_proto.types.torch.v1.TensorData.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITensorData} message TensorData message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TensorData.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                            $root.syft_proto.types.torch.v1.Size.encode(message.shape, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.dtype);\n                        if (message.is_quantized != null && message.hasOwnProperty(\"is_quantized\"))\n                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.is_quantized);\n                        if (message.scale != null && message.hasOwnProperty(\"scale\"))\n                            writer.uint32(/* id 4, wireType 5 =*/37).float(message.scale);\n                        if (message.zero_point != null && message.hasOwnProperty(\"zero_point\"))\n                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.zero_point);\n                        if (message.contents_uint8 != null && message.contents_uint8.length) {\n                            writer.uint32(/* id 16, wireType 2 =*/130).fork();\n                            for (var i = 0; i < message.contents_uint8.length; ++i)\n                                writer.uint32(message.contents_uint8[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_int8 != null && message.contents_int8.length) {\n                            writer.uint32(/* id 17, wireType 2 =*/138).fork();\n                            for (var i = 0; i < message.contents_int8.length; ++i)\n                                writer.int32(message.contents_int8[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_int16 != null && message.contents_int16.length) {\n                            writer.uint32(/* id 18, wireType 2 =*/146).fork();\n                            for (var i = 0; i < message.contents_int16.length; ++i)\n                                writer.int32(message.contents_int16[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_int32 != null && message.contents_int32.length) {\n                            writer.uint32(/* id 19, wireType 2 =*/154).fork();\n                            for (var i = 0; i < message.contents_int32.length; ++i)\n                                writer.int32(message.contents_int32[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_int64 != null && message.contents_int64.length) {\n                            writer.uint32(/* id 20, wireType 2 =*/162).fork();\n                            for (var i = 0; i < message.contents_int64.length; ++i)\n                                writer.int64(message.contents_int64[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_float16 != null && message.contents_float16.length) {\n                            writer.uint32(/* id 21, wireType 2 =*/170).fork();\n                            for (var i = 0; i < message.contents_float16.length; ++i)\n                                writer.float(message.contents_float16[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_float32 != null && message.contents_float32.length) {\n                            writer.uint32(/* id 22, wireType 2 =*/178).fork();\n                            for (var i = 0; i < message.contents_float32.length; ++i)\n                                writer.float(message.contents_float32[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_float64 != null && message.contents_float64.length) {\n                            writer.uint32(/* id 23, wireType 2 =*/186).fork();\n                            for (var i = 0; i < message.contents_float64.length; ++i)\n                                writer.double(message.contents_float64[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_bool != null && message.contents_bool.length) {\n                            writer.uint32(/* id 24, wireType 2 =*/194).fork();\n                            for (var i = 0; i < message.contents_bool.length; ++i)\n                                writer.bool(message.contents_bool[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_qint8 != null && message.contents_qint8.length) {\n                            writer.uint32(/* id 25, wireType 2 =*/202).fork();\n                            for (var i = 0; i < message.contents_qint8.length; ++i)\n                                writer.sint32(message.contents_qint8[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_quint8 != null && message.contents_quint8.length) {\n                            writer.uint32(/* id 26, wireType 2 =*/210).fork();\n                            for (var i = 0; i < message.contents_quint8.length; ++i)\n                                writer.uint32(message.contents_quint8[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_qint32 != null && message.contents_qint32.length) {\n                            writer.uint32(/* id 27, wireType 2 =*/218).fork();\n                            for (var i = 0; i < message.contents_qint32.length; ++i)\n                                writer.sint32(message.contents_qint32[i]);\n                            writer.ldelim();\n                        }\n                        if (message.contents_bfloat16 != null && message.contents_bfloat16.length) {\n                            writer.uint32(/* id 28, wireType 2 =*/226).fork();\n                            for (var i = 0; i < message.contents_bfloat16.length; ++i)\n                                writer.float(message.contents_bfloat16[i]);\n                            writer.ldelim();\n                        }\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TensorData message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.TensorData.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITensorData} message TensorData message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TensorData.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TensorData message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.TensorData} TensorData\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TensorData.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.TensorData();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.shape = $root.syft_proto.types.torch.v1.Size.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.dtype = reader.string();\n                                break;\n                            case 3:\n                                message.is_quantized = reader.bool();\n                                break;\n                            case 4:\n                                message.scale = reader.float();\n                                break;\n                            case 5:\n                                message.zero_point = reader.int32();\n                                break;\n                            case 16:\n                                if (!(message.contents_uint8 && message.contents_uint8.length))\n                                    message.contents_uint8 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_uint8.push(reader.uint32());\n                                } else\n                                    message.contents_uint8.push(reader.uint32());\n                                break;\n                            case 17:\n                                if (!(message.contents_int8 && message.contents_int8.length))\n                                    message.contents_int8 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_int8.push(reader.int32());\n                                } else\n                                    message.contents_int8.push(reader.int32());\n                                break;\n                            case 18:\n                                if (!(message.contents_int16 && message.contents_int16.length))\n                                    message.contents_int16 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_int16.push(reader.int32());\n                                } else\n                                    message.contents_int16.push(reader.int32());\n                                break;\n                            case 19:\n                                if (!(message.contents_int32 && message.contents_int32.length))\n                                    message.contents_int32 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_int32.push(reader.int32());\n                                } else\n                                    message.contents_int32.push(reader.int32());\n                                break;\n                            case 20:\n                                if (!(message.contents_int64 && message.contents_int64.length))\n                                    message.contents_int64 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_int64.push(reader.int64());\n                                } else\n                                    message.contents_int64.push(reader.int64());\n                                break;\n                            case 21:\n                                if (!(message.contents_float16 && message.contents_float16.length))\n                                    message.contents_float16 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_float16.push(reader.float());\n                                } else\n                                    message.contents_float16.push(reader.float());\n                                break;\n                            case 22:\n                                if (!(message.contents_float32 && message.contents_float32.length))\n                                    message.contents_float32 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_float32.push(reader.float());\n                                } else\n                                    message.contents_float32.push(reader.float());\n                                break;\n                            case 23:\n                                if (!(message.contents_float64 && message.contents_float64.length))\n                                    message.contents_float64 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_float64.push(reader.double());\n                                } else\n                                    message.contents_float64.push(reader.double());\n                                break;\n                            case 24:\n                                if (!(message.contents_bool && message.contents_bool.length))\n                                    message.contents_bool = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_bool.push(reader.bool());\n                                } else\n                                    message.contents_bool.push(reader.bool());\n                                break;\n                            case 25:\n                                if (!(message.contents_qint8 && message.contents_qint8.length))\n                                    message.contents_qint8 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_qint8.push(reader.sint32());\n                                } else\n                                    message.contents_qint8.push(reader.sint32());\n                                break;\n                            case 26:\n                                if (!(message.contents_quint8 && message.contents_quint8.length))\n                                    message.contents_quint8 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_quint8.push(reader.uint32());\n                                } else\n                                    message.contents_quint8.push(reader.uint32());\n                                break;\n                            case 27:\n                                if (!(message.contents_qint32 && message.contents_qint32.length))\n                                    message.contents_qint32 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_qint32.push(reader.sint32());\n                                } else\n                                    message.contents_qint32.push(reader.sint32());\n                                break;\n                            case 28:\n                                if (!(message.contents_bfloat16 && message.contents_bfloat16.length))\n                                    message.contents_bfloat16 = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.contents_bfloat16.push(reader.float());\n                                } else\n                                    message.contents_bfloat16.push(reader.float());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TensorData message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.TensorData} TensorData\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TensorData.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TensorData message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TensorData.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                            var error = $root.syft_proto.types.torch.v1.Size.verify(message.shape);\n                            if (error)\n                                return \"shape.\" + error;\n                        }\n                        if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                            if (!$util.isString(message.dtype))\n                                return \"dtype: string expected\";\n                        if (message.is_quantized != null && message.hasOwnProperty(\"is_quantized\"))\n                            if (typeof message.is_quantized !== \"boolean\")\n                                return \"is_quantized: boolean expected\";\n                        if (message.scale != null && message.hasOwnProperty(\"scale\"))\n                            if (typeof message.scale !== \"number\")\n                                return \"scale: number expected\";\n                        if (message.zero_point != null && message.hasOwnProperty(\"zero_point\"))\n                            if (!$util.isInteger(message.zero_point))\n                                return \"zero_point: integer expected\";\n                        if (message.contents_uint8 != null && message.hasOwnProperty(\"contents_uint8\")) {\n                            if (!Array.isArray(message.contents_uint8))\n                                return \"contents_uint8: array expected\";\n                            for (var i = 0; i < message.contents_uint8.length; ++i)\n                                if (!$util.isInteger(message.contents_uint8[i]))\n                                    return \"contents_uint8: integer[] expected\";\n                        }\n                        if (message.contents_int8 != null && message.hasOwnProperty(\"contents_int8\")) {\n                            if (!Array.isArray(message.contents_int8))\n                                return \"contents_int8: array expected\";\n                            for (var i = 0; i < message.contents_int8.length; ++i)\n                                if (!$util.isInteger(message.contents_int8[i]))\n                                    return \"contents_int8: integer[] expected\";\n                        }\n                        if (message.contents_int16 != null && message.hasOwnProperty(\"contents_int16\")) {\n                            if (!Array.isArray(message.contents_int16))\n                                return \"contents_int16: array expected\";\n                            for (var i = 0; i < message.contents_int16.length; ++i)\n                                if (!$util.isInteger(message.contents_int16[i]))\n                                    return \"contents_int16: integer[] expected\";\n                        }\n                        if (message.contents_int32 != null && message.hasOwnProperty(\"contents_int32\")) {\n                            if (!Array.isArray(message.contents_int32))\n                                return \"contents_int32: array expected\";\n                            for (var i = 0; i < message.contents_int32.length; ++i)\n                                if (!$util.isInteger(message.contents_int32[i]))\n                                    return \"contents_int32: integer[] expected\";\n                        }\n                        if (message.contents_int64 != null && message.hasOwnProperty(\"contents_int64\")) {\n                            if (!Array.isArray(message.contents_int64))\n                                return \"contents_int64: array expected\";\n                            for (var i = 0; i < message.contents_int64.length; ++i)\n                                if (!$util.isInteger(message.contents_int64[i]) && !(message.contents_int64[i] && $util.isInteger(message.contents_int64[i].low) && $util.isInteger(message.contents_int64[i].high)))\n                                    return \"contents_int64: integer|Long[] expected\";\n                        }\n                        if (message.contents_float16 != null && message.hasOwnProperty(\"contents_float16\")) {\n                            if (!Array.isArray(message.contents_float16))\n                                return \"contents_float16: array expected\";\n                            for (var i = 0; i < message.contents_float16.length; ++i)\n                                if (typeof message.contents_float16[i] !== \"number\")\n                                    return \"contents_float16: number[] expected\";\n                        }\n                        if (message.contents_float32 != null && message.hasOwnProperty(\"contents_float32\")) {\n                            if (!Array.isArray(message.contents_float32))\n                                return \"contents_float32: array expected\";\n                            for (var i = 0; i < message.contents_float32.length; ++i)\n                                if (typeof message.contents_float32[i] !== \"number\")\n                                    return \"contents_float32: number[] expected\";\n                        }\n                        if (message.contents_float64 != null && message.hasOwnProperty(\"contents_float64\")) {\n                            if (!Array.isArray(message.contents_float64))\n                                return \"contents_float64: array expected\";\n                            for (var i = 0; i < message.contents_float64.length; ++i)\n                                if (typeof message.contents_float64[i] !== \"number\")\n                                    return \"contents_float64: number[] expected\";\n                        }\n                        if (message.contents_bool != null && message.hasOwnProperty(\"contents_bool\")) {\n                            if (!Array.isArray(message.contents_bool))\n                                return \"contents_bool: array expected\";\n                            for (var i = 0; i < message.contents_bool.length; ++i)\n                                if (typeof message.contents_bool[i] !== \"boolean\")\n                                    return \"contents_bool: boolean[] expected\";\n                        }\n                        if (message.contents_qint8 != null && message.hasOwnProperty(\"contents_qint8\")) {\n                            if (!Array.isArray(message.contents_qint8))\n                                return \"contents_qint8: array expected\";\n                            for (var i = 0; i < message.contents_qint8.length; ++i)\n                                if (!$util.isInteger(message.contents_qint8[i]))\n                                    return \"contents_qint8: integer[] expected\";\n                        }\n                        if (message.contents_quint8 != null && message.hasOwnProperty(\"contents_quint8\")) {\n                            if (!Array.isArray(message.contents_quint8))\n                                return \"contents_quint8: array expected\";\n                            for (var i = 0; i < message.contents_quint8.length; ++i)\n                                if (!$util.isInteger(message.contents_quint8[i]))\n                                    return \"contents_quint8: integer[] expected\";\n                        }\n                        if (message.contents_qint32 != null && message.hasOwnProperty(\"contents_qint32\")) {\n                            if (!Array.isArray(message.contents_qint32))\n                                return \"contents_qint32: array expected\";\n                            for (var i = 0; i < message.contents_qint32.length; ++i)\n                                if (!$util.isInteger(message.contents_qint32[i]))\n                                    return \"contents_qint32: integer[] expected\";\n                        }\n                        if (message.contents_bfloat16 != null && message.hasOwnProperty(\"contents_bfloat16\")) {\n                            if (!Array.isArray(message.contents_bfloat16))\n                                return \"contents_bfloat16: array expected\";\n                            for (var i = 0; i < message.contents_bfloat16.length; ++i)\n                                if (typeof message.contents_bfloat16[i] !== \"number\")\n                                    return \"contents_bfloat16: number[] expected\";\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TensorData message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.TensorData} TensorData\n                     */\n                    TensorData.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.TensorData)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.TensorData();\n                        if (object.shape != null) {\n                            if (typeof object.shape !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.shape: object expected\");\n                            message.shape = $root.syft_proto.types.torch.v1.Size.fromObject(object.shape);\n                        }\n                        if (object.dtype != null)\n                            message.dtype = String(object.dtype);\n                        if (object.is_quantized != null)\n                            message.is_quantized = Boolean(object.is_quantized);\n                        if (object.scale != null)\n                            message.scale = Number(object.scale);\n                        if (object.zero_point != null)\n                            message.zero_point = object.zero_point | 0;\n                        if (object.contents_uint8) {\n                            if (!Array.isArray(object.contents_uint8))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_uint8: array expected\");\n                            message.contents_uint8 = [];\n                            for (var i = 0; i < object.contents_uint8.length; ++i)\n                                message.contents_uint8[i] = object.contents_uint8[i] >>> 0;\n                        }\n                        if (object.contents_int8) {\n                            if (!Array.isArray(object.contents_int8))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_int8: array expected\");\n                            message.contents_int8 = [];\n                            for (var i = 0; i < object.contents_int8.length; ++i)\n                                message.contents_int8[i] = object.contents_int8[i] | 0;\n                        }\n                        if (object.contents_int16) {\n                            if (!Array.isArray(object.contents_int16))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_int16: array expected\");\n                            message.contents_int16 = [];\n                            for (var i = 0; i < object.contents_int16.length; ++i)\n                                message.contents_int16[i] = object.contents_int16[i] | 0;\n                        }\n                        if (object.contents_int32) {\n                            if (!Array.isArray(object.contents_int32))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_int32: array expected\");\n                            message.contents_int32 = [];\n                            for (var i = 0; i < object.contents_int32.length; ++i)\n                                message.contents_int32[i] = object.contents_int32[i] | 0;\n                        }\n                        if (object.contents_int64) {\n                            if (!Array.isArray(object.contents_int64))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_int64: array expected\");\n                            message.contents_int64 = [];\n                            for (var i = 0; i < object.contents_int64.length; ++i)\n                                if ($util.Long)\n                                    (message.contents_int64[i] = $util.Long.fromValue(object.contents_int64[i])).unsigned = false;\n                                else if (typeof object.contents_int64[i] === \"string\")\n                                    message.contents_int64[i] = parseInt(object.contents_int64[i], 10);\n                                else if (typeof object.contents_int64[i] === \"number\")\n                                    message.contents_int64[i] = object.contents_int64[i];\n                                else if (typeof object.contents_int64[i] === \"object\")\n                                    message.contents_int64[i] = new $util.LongBits(object.contents_int64[i].low >>> 0, object.contents_int64[i].high >>> 0).toNumber();\n                        }\n                        if (object.contents_float16) {\n                            if (!Array.isArray(object.contents_float16))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_float16: array expected\");\n                            message.contents_float16 = [];\n                            for (var i = 0; i < object.contents_float16.length; ++i)\n                                message.contents_float16[i] = Number(object.contents_float16[i]);\n                        }\n                        if (object.contents_float32) {\n                            if (!Array.isArray(object.contents_float32))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_float32: array expected\");\n                            message.contents_float32 = [];\n                            for (var i = 0; i < object.contents_float32.length; ++i)\n                                message.contents_float32[i] = Number(object.contents_float32[i]);\n                        }\n                        if (object.contents_float64) {\n                            if (!Array.isArray(object.contents_float64))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_float64: array expected\");\n                            message.contents_float64 = [];\n                            for (var i = 0; i < object.contents_float64.length; ++i)\n                                message.contents_float64[i] = Number(object.contents_float64[i]);\n                        }\n                        if (object.contents_bool) {\n                            if (!Array.isArray(object.contents_bool))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_bool: array expected\");\n                            message.contents_bool = [];\n                            for (var i = 0; i < object.contents_bool.length; ++i)\n                                message.contents_bool[i] = Boolean(object.contents_bool[i]);\n                        }\n                        if (object.contents_qint8) {\n                            if (!Array.isArray(object.contents_qint8))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_qint8: array expected\");\n                            message.contents_qint8 = [];\n                            for (var i = 0; i < object.contents_qint8.length; ++i)\n                                message.contents_qint8[i] = object.contents_qint8[i] | 0;\n                        }\n                        if (object.contents_quint8) {\n                            if (!Array.isArray(object.contents_quint8))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_quint8: array expected\");\n                            message.contents_quint8 = [];\n                            for (var i = 0; i < object.contents_quint8.length; ++i)\n                                message.contents_quint8[i] = object.contents_quint8[i] >>> 0;\n                        }\n                        if (object.contents_qint32) {\n                            if (!Array.isArray(object.contents_qint32))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_qint32: array expected\");\n                            message.contents_qint32 = [];\n                            for (var i = 0; i < object.contents_qint32.length; ++i)\n                                message.contents_qint32[i] = object.contents_qint32[i] | 0;\n                        }\n                        if (object.contents_bfloat16) {\n                            if (!Array.isArray(object.contents_bfloat16))\n                                throw TypeError(\".syft_proto.types.torch.v1.TensorData.contents_bfloat16: array expected\");\n                            message.contents_bfloat16 = [];\n                            for (var i = 0; i < object.contents_bfloat16.length; ++i)\n                                message.contents_bfloat16[i] = Number(object.contents_bfloat16[i]);\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TensorData message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @static\n                     * @param {syft_proto.types.torch.v1.TensorData} message TensorData\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TensorData.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.contents_uint8 = [];\n                            object.contents_int8 = [];\n                            object.contents_int16 = [];\n                            object.contents_int32 = [];\n                            object.contents_int64 = [];\n                            object.contents_float16 = [];\n                            object.contents_float32 = [];\n                            object.contents_float64 = [];\n                            object.contents_bool = [];\n                            object.contents_qint8 = [];\n                            object.contents_quint8 = [];\n                            object.contents_qint32 = [];\n                            object.contents_bfloat16 = [];\n                        }\n                        if (options.defaults) {\n                            object.shape = null;\n                            object.dtype = \"\";\n                            object.is_quantized = false;\n                            object.scale = 0;\n                            object.zero_point = 0;\n                        }\n                        if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                            object.shape = $root.syft_proto.types.torch.v1.Size.toObject(message.shape, options);\n                        if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                            object.dtype = message.dtype;\n                        if (message.is_quantized != null && message.hasOwnProperty(\"is_quantized\"))\n                            object.is_quantized = message.is_quantized;\n                        if (message.scale != null && message.hasOwnProperty(\"scale\"))\n                            object.scale = options.json && !isFinite(message.scale) ? String(message.scale) : message.scale;\n                        if (message.zero_point != null && message.hasOwnProperty(\"zero_point\"))\n                            object.zero_point = message.zero_point;\n                        if (message.contents_uint8 && message.contents_uint8.length) {\n                            object.contents_uint8 = [];\n                            for (var j = 0; j < message.contents_uint8.length; ++j)\n                                object.contents_uint8[j] = message.contents_uint8[j];\n                        }\n                        if (message.contents_int8 && message.contents_int8.length) {\n                            object.contents_int8 = [];\n                            for (var j = 0; j < message.contents_int8.length; ++j)\n                                object.contents_int8[j] = message.contents_int8[j];\n                        }\n                        if (message.contents_int16 && message.contents_int16.length) {\n                            object.contents_int16 = [];\n                            for (var j = 0; j < message.contents_int16.length; ++j)\n                                object.contents_int16[j] = message.contents_int16[j];\n                        }\n                        if (message.contents_int32 && message.contents_int32.length) {\n                            object.contents_int32 = [];\n                            for (var j = 0; j < message.contents_int32.length; ++j)\n                                object.contents_int32[j] = message.contents_int32[j];\n                        }\n                        if (message.contents_int64 && message.contents_int64.length) {\n                            object.contents_int64 = [];\n                            for (var j = 0; j < message.contents_int64.length; ++j)\n                                if (typeof message.contents_int64[j] === \"number\")\n                                    object.contents_int64[j] = options.longs === String ? String(message.contents_int64[j]) : message.contents_int64[j];\n                                else\n                                    object.contents_int64[j] = options.longs === String ? $util.Long.prototype.toString.call(message.contents_int64[j]) : options.longs === Number ? new $util.LongBits(message.contents_int64[j].low >>> 0, message.contents_int64[j].high >>> 0).toNumber() : message.contents_int64[j];\n                        }\n                        if (message.contents_float16 && message.contents_float16.length) {\n                            object.contents_float16 = [];\n                            for (var j = 0; j < message.contents_float16.length; ++j)\n                                object.contents_float16[j] = options.json && !isFinite(message.contents_float16[j]) ? String(message.contents_float16[j]) : message.contents_float16[j];\n                        }\n                        if (message.contents_float32 && message.contents_float32.length) {\n                            object.contents_float32 = [];\n                            for (var j = 0; j < message.contents_float32.length; ++j)\n                                object.contents_float32[j] = options.json && !isFinite(message.contents_float32[j]) ? String(message.contents_float32[j]) : message.contents_float32[j];\n                        }\n                        if (message.contents_float64 && message.contents_float64.length) {\n                            object.contents_float64 = [];\n                            for (var j = 0; j < message.contents_float64.length; ++j)\n                                object.contents_float64[j] = options.json && !isFinite(message.contents_float64[j]) ? String(message.contents_float64[j]) : message.contents_float64[j];\n                        }\n                        if (message.contents_bool && message.contents_bool.length) {\n                            object.contents_bool = [];\n                            for (var j = 0; j < message.contents_bool.length; ++j)\n                                object.contents_bool[j] = message.contents_bool[j];\n                        }\n                        if (message.contents_qint8 && message.contents_qint8.length) {\n                            object.contents_qint8 = [];\n                            for (var j = 0; j < message.contents_qint8.length; ++j)\n                                object.contents_qint8[j] = message.contents_qint8[j];\n                        }\n                        if (message.contents_quint8 && message.contents_quint8.length) {\n                            object.contents_quint8 = [];\n                            for (var j = 0; j < message.contents_quint8.length; ++j)\n                                object.contents_quint8[j] = message.contents_quint8[j];\n                        }\n                        if (message.contents_qint32 && message.contents_qint32.length) {\n                            object.contents_qint32 = [];\n                            for (var j = 0; j < message.contents_qint32.length; ++j)\n                                object.contents_qint32[j] = message.contents_qint32[j];\n                        }\n                        if (message.contents_bfloat16 && message.contents_bfloat16.length) {\n                            object.contents_bfloat16 = [];\n                            for (var j = 0; j < message.contents_bfloat16.length; ++j)\n                                object.contents_bfloat16[j] = options.json && !isFinite(message.contents_bfloat16[j]) ? String(message.contents_bfloat16[j]) : message.contents_bfloat16[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TensorData to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.TensorData\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TensorData.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TensorData;\n                })();\n\n                v1.Size = (function() {\n\n                    /**\n                     * Properties of a Size.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ISize\n                     * @property {Array.<number>|null} [dims] Size dims\n                     */\n\n                    /**\n                     * Constructs a new Size.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a Size.\n                     * @implements ISize\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ISize=} [properties] Properties to set\n                     */\n                    function Size(properties) {\n                        this.dims = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Size dims.\n                     * @member {Array.<number>} dims\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @instance\n                     */\n                    Size.prototype.dims = $util.emptyArray;\n\n                    /**\n                     * Creates a new Size instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ISize=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.Size} Size instance\n                     */\n                    Size.create = function create(properties) {\n                        return new Size(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Size message. Does not implicitly {@link syft_proto.types.torch.v1.Size.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ISize} message Size message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Size.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.dims != null && message.dims.length) {\n                            writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                            for (var i = 0; i < message.dims.length; ++i)\n                                writer.int32(message.dims[i]);\n                            writer.ldelim();\n                        }\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Size message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.Size.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ISize} message Size message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Size.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a Size message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.Size} Size\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Size.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.Size();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                if (!(message.dims && message.dims.length))\n                                    message.dims = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.dims.push(reader.int32());\n                                } else\n                                    message.dims.push(reader.int32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Size message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.Size} Size\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Size.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a Size message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Size.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                            if (!Array.isArray(message.dims))\n                                return \"dims: array expected\";\n                            for (var i = 0; i < message.dims.length; ++i)\n                                if (!$util.isInteger(message.dims[i]))\n                                    return \"dims: integer[] expected\";\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a Size message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.Size} Size\n                     */\n                    Size.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.Size)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.Size();\n                        if (object.dims) {\n                            if (!Array.isArray(object.dims))\n                                throw TypeError(\".syft_proto.types.torch.v1.Size.dims: array expected\");\n                            message.dims = [];\n                            for (var i = 0; i < object.dims.length; ++i)\n                                message.dims[i] = object.dims[i] | 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Size message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @static\n                     * @param {syft_proto.types.torch.v1.Size} message Size\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Size.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.dims = [];\n                        if (message.dims && message.dims.length) {\n                            object.dims = [];\n                            for (var j = 0; j < message.dims.length; ++j)\n                                object.dims[j] = message.dims[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Size to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.Size\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Size.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Size;\n                })();\n\n                v1.Parameter = (function() {\n\n                    /**\n                     * Properties of a Parameter.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface IParameter\n                     * @property {syft_proto.types.syft.v1.IId|null} [id] Parameter id\n                     * @property {syft_proto.types.torch.v1.ITorchTensor|null} [tensor] Parameter tensor\n                     * @property {boolean|null} [requires_grad] Parameter requires_grad\n                     * @property {syft_proto.types.torch.v1.ITorchTensor|null} [grad] Parameter grad\n                     */\n\n                    /**\n                     * Constructs a new Parameter.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a Parameter.\n                     * @implements IParameter\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.IParameter=} [properties] Properties to set\n                     */\n                    function Parameter(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Parameter id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @instance\n                     */\n                    Parameter.prototype.id = null;\n\n                    /**\n                     * Parameter tensor.\n                     * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} tensor\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @instance\n                     */\n                    Parameter.prototype.tensor = null;\n\n                    /**\n                     * Parameter requires_grad.\n                     * @member {boolean} requires_grad\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @instance\n                     */\n                    Parameter.prototype.requires_grad = false;\n\n                    /**\n                     * Parameter grad.\n                     * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} grad\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @instance\n                     */\n                    Parameter.prototype.grad = null;\n\n                    /**\n                     * Creates a new Parameter instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IParameter=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.Parameter} Parameter instance\n                     */\n                    Parameter.create = function create(properties) {\n                        return new Parameter(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Parameter message. Does not implicitly {@link syft_proto.types.torch.v1.Parameter.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IParameter} message Parameter message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Parameter.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.tensor != null && message.hasOwnProperty(\"tensor\"))\n                            $root.syft_proto.types.torch.v1.TorchTensor.encode(message.tensor, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.requires_grad != null && message.hasOwnProperty(\"requires_grad\"))\n                            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.requires_grad);\n                        if (message.grad != null && message.hasOwnProperty(\"grad\"))\n                            $root.syft_proto.types.torch.v1.TorchTensor.encode(message.grad, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Parameter message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.Parameter.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IParameter} message Parameter message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Parameter.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a Parameter message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.Parameter} Parameter\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Parameter.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.Parameter();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.requires_grad = reader.bool();\n                                break;\n                            case 4:\n                                message.grad = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Parameter message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.Parameter} Parameter\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Parameter.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a Parameter message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Parameter.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.id != null && message.hasOwnProperty(\"id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                            if (error)\n                                return \"id.\" + error;\n                        }\n                        if (message.tensor != null && message.hasOwnProperty(\"tensor\")) {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.tensor);\n                            if (error)\n                                return \"tensor.\" + error;\n                        }\n                        if (message.requires_grad != null && message.hasOwnProperty(\"requires_grad\"))\n                            if (typeof message.requires_grad !== \"boolean\")\n                                return \"requires_grad: boolean expected\";\n                        if (message.grad != null && message.hasOwnProperty(\"grad\")) {\n                            var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.grad);\n                            if (error)\n                                return \"grad.\" + error;\n                        }\n                        return null;\n                    };\n\n                    /**\n                     * Creates a Parameter message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.Parameter} Parameter\n                     */\n                    Parameter.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.Parameter)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.Parameter();\n                        if (object.id != null) {\n                            if (typeof object.id !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.Parameter.id: object expected\");\n                            message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                        }\n                        if (object.tensor != null) {\n                            if (typeof object.tensor !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.Parameter.tensor: object expected\");\n                            message.tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.tensor);\n                        }\n                        if (object.requires_grad != null)\n                            message.requires_grad = Boolean(object.requires_grad);\n                        if (object.grad != null) {\n                            if (typeof object.grad !== \"object\")\n                                throw TypeError(\".syft_proto.types.torch.v1.Parameter.grad: object expected\");\n                            message.grad = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.grad);\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Parameter message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @static\n                     * @param {syft_proto.types.torch.v1.Parameter} message Parameter\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Parameter.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.id = null;\n                            object.tensor = null;\n                            object.requires_grad = false;\n                            object.grad = null;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                        if (message.tensor != null && message.hasOwnProperty(\"tensor\"))\n                            object.tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.tensor, options);\n                        if (message.requires_grad != null && message.hasOwnProperty(\"requires_grad\"))\n                            object.requires_grad = message.requires_grad;\n                        if (message.grad != null && message.hasOwnProperty(\"grad\"))\n                            object.grad = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.grad, options);\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Parameter to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.Parameter\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Parameter.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Parameter;\n                })();\n\n                v1.CFunction = (function() {\n\n                    /**\n                     * Properties of a CFunction.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ICFunction\n                     * @property {Uint8Array|null} [obj] CFunction obj\n                     */\n\n                    /**\n                     * Constructs a new CFunction.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a CFunction.\n                     * @implements ICFunction\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ICFunction=} [properties] Properties to set\n                     */\n                    function CFunction(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * CFunction obj.\n                     * @member {Uint8Array} obj\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @instance\n                     */\n                    CFunction.prototype.obj = $util.newBuffer([]);\n\n                    /**\n                     * Creates a new CFunction instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ICFunction=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.CFunction} CFunction instance\n                     */\n                    CFunction.create = function create(properties) {\n                        return new CFunction(properties);\n                    };\n\n                    /**\n                     * Encodes the specified CFunction message. Does not implicitly {@link syft_proto.types.torch.v1.CFunction.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ICFunction} message CFunction message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    CFunction.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.obj);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified CFunction message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.CFunction.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ICFunction} message CFunction message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    CFunction.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a CFunction message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.CFunction} CFunction\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    CFunction.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.CFunction();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.obj = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a CFunction message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.CFunction} CFunction\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    CFunction.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a CFunction message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    CFunction.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            if (!(message.obj && typeof message.obj.length === \"number\" || $util.isString(message.obj)))\n                                return \"obj: buffer expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a CFunction message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.CFunction} CFunction\n                     */\n                    CFunction.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.CFunction)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.CFunction();\n                        if (object.obj != null)\n                            if (typeof object.obj === \"string\")\n                                $util.base64.decode(object.obj, message.obj = $util.newBuffer($util.base64.length(object.obj)), 0);\n                            else if (object.obj.length)\n                                message.obj = object.obj;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a CFunction message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.CFunction} message CFunction\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    CFunction.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            if (options.bytes === String)\n                                object.obj = \"\";\n                            else {\n                                object.obj = [];\n                                if (options.bytes !== Array)\n                                    object.obj = $util.newBuffer(object.obj);\n                            }\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            object.obj = options.bytes === String ? $util.base64.encode(message.obj, 0, message.obj.length) : options.bytes === Array ? Array.prototype.slice.call(message.obj) : message.obj;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this CFunction to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.CFunction\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    CFunction.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return CFunction;\n                })();\n\n                v1.Device = (function() {\n\n                    /**\n                     * Properties of a Device.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface IDevice\n                     * @property {string|null} [type] Device type\n                     */\n\n                    /**\n                     * Constructs a new Device.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a Device.\n                     * @implements IDevice\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.IDevice=} [properties] Properties to set\n                     */\n                    function Device(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Device type.\n                     * @member {string} type\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @instance\n                     */\n                    Device.prototype.type = \"\";\n\n                    /**\n                     * Creates a new Device instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IDevice=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.Device} Device instance\n                     */\n                    Device.create = function create(properties) {\n                        return new Device(properties);\n                    };\n\n                    /**\n                     * Encodes the specified Device message. Does not implicitly {@link syft_proto.types.torch.v1.Device.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IDevice} message Device message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Device.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified Device message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.Device.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IDevice} message Device message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    Device.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a Device message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.Device} Device\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Device.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.Device();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.type = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Device message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.Device} Device\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Device.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a Device message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    Device.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            if (!$util.isString(message.type))\n                                return \"type: string expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a Device message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.Device} Device\n                     */\n                    Device.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.Device)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.Device();\n                        if (object.type != null)\n                            message.type = String(object.type);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Device message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @static\n                     * @param {syft_proto.types.torch.v1.Device} message Device\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Device.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            object.type = \"\";\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = message.type;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Device to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.Device\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Device.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Device;\n                })();\n\n                v1.TorchDType = (function() {\n\n                    /**\n                     * Properties of a TorchDType.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ITorchDType\n                     * @property {string|null} [torch_type] TorchDType torch_type\n                     */\n\n                    /**\n                     * Constructs a new TorchDType.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a TorchDType.\n                     * @implements ITorchDType\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ITorchDType=} [properties] Properties to set\n                     */\n                    function TorchDType(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TorchDType torch_type.\n                     * @member {string} torch_type\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @instance\n                     */\n                    TorchDType.prototype.torch_type = \"\";\n\n                    /**\n                     * Creates a new TorchDType instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchDType=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.TorchDType} TorchDType instance\n                     */\n                    TorchDType.create = function create(properties) {\n                        return new TorchDType(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TorchDType message. Does not implicitly {@link syft_proto.types.torch.v1.TorchDType.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchDType} message TorchDType message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TorchDType.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.torch_type != null && message.hasOwnProperty(\"torch_type\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.torch_type);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TorchDType message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.TorchDType.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITorchDType} message TorchDType message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TorchDType.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TorchDType message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.TorchDType} TorchDType\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TorchDType.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.TorchDType();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.torch_type = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TorchDType message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.TorchDType} TorchDType\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TorchDType.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TorchDType message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TorchDType.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.torch_type != null && message.hasOwnProperty(\"torch_type\"))\n                            if (!$util.isString(message.torch_type))\n                                return \"torch_type: string expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TorchDType message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.TorchDType} TorchDType\n                     */\n                    TorchDType.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.TorchDType)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.TorchDType();\n                        if (object.torch_type != null)\n                            message.torch_type = String(object.torch_type);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TorchDType message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @static\n                     * @param {syft_proto.types.torch.v1.TorchDType} message TorchDType\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TorchDType.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            object.torch_type = \"\";\n                        if (message.torch_type != null && message.hasOwnProperty(\"torch_type\"))\n                            object.torch_type = message.torch_type;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TorchDType to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.TorchDType\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TorchDType.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TorchDType;\n                })();\n\n                v1.MemoryFormat = (function() {\n\n                    /**\n                     * Properties of a MemoryFormat.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface IMemoryFormat\n                     * @property {string|null} [memory_format_type] MemoryFormat memory_format_type\n                     */\n\n                    /**\n                     * Constructs a new MemoryFormat.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a MemoryFormat.\n                     * @implements IMemoryFormat\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.IMemoryFormat=} [properties] Properties to set\n                     */\n                    function MemoryFormat(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * MemoryFormat memory_format_type.\n                     * @member {string} memory_format_type\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @instance\n                     */\n                    MemoryFormat.prototype.memory_format_type = \"\";\n\n                    /**\n                     * Creates a new MemoryFormat instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IMemoryFormat=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.MemoryFormat} MemoryFormat instance\n                     */\n                    MemoryFormat.create = function create(properties) {\n                        return new MemoryFormat(properties);\n                    };\n\n                    /**\n                     * Encodes the specified MemoryFormat message. Does not implicitly {@link syft_proto.types.torch.v1.MemoryFormat.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IMemoryFormat} message MemoryFormat message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    MemoryFormat.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.memory_format_type != null && message.hasOwnProperty(\"memory_format_type\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.memory_format_type);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified MemoryFormat message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.MemoryFormat.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IMemoryFormat} message MemoryFormat message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    MemoryFormat.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a MemoryFormat message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.MemoryFormat} MemoryFormat\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    MemoryFormat.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.MemoryFormat();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.memory_format_type = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a MemoryFormat message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.MemoryFormat} MemoryFormat\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    MemoryFormat.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a MemoryFormat message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    MemoryFormat.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.memory_format_type != null && message.hasOwnProperty(\"memory_format_type\"))\n                            if (!$util.isString(message.memory_format_type))\n                                return \"memory_format_type: string expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a MemoryFormat message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.MemoryFormat} MemoryFormat\n                     */\n                    MemoryFormat.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.MemoryFormat)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.MemoryFormat();\n                        if (object.memory_format_type != null)\n                            message.memory_format_type = String(object.memory_format_type);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a MemoryFormat message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @static\n                     * @param {syft_proto.types.torch.v1.MemoryFormat} message MemoryFormat\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    MemoryFormat.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            object.memory_format_type = \"\";\n                        if (message.memory_format_type != null && message.hasOwnProperty(\"memory_format_type\"))\n                            object.memory_format_type = message.memory_format_type;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this MemoryFormat to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.MemoryFormat\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    MemoryFormat.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return MemoryFormat;\n                })();\n\n                v1.ScriptFunction = (function() {\n\n                    /**\n                     * Properties of a ScriptFunction.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface IScriptFunction\n                     * @property {Uint8Array|null} [obj] ScriptFunction obj\n                     */\n\n                    /**\n                     * Constructs a new ScriptFunction.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a ScriptFunction.\n                     * @implements IScriptFunction\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.IScriptFunction=} [properties] Properties to set\n                     */\n                    function ScriptFunction(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * ScriptFunction obj.\n                     * @member {Uint8Array} obj\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @instance\n                     */\n                    ScriptFunction.prototype.obj = $util.newBuffer([]);\n\n                    /**\n                     * Creates a new ScriptFunction instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptFunction=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.ScriptFunction} ScriptFunction instance\n                     */\n                    ScriptFunction.create = function create(properties) {\n                        return new ScriptFunction(properties);\n                    };\n\n                    /**\n                     * Encodes the specified ScriptFunction message. Does not implicitly {@link syft_proto.types.torch.v1.ScriptFunction.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptFunction} message ScriptFunction message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ScriptFunction.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.obj);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified ScriptFunction message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.ScriptFunction.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptFunction} message ScriptFunction message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ScriptFunction.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a ScriptFunction message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.ScriptFunction} ScriptFunction\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ScriptFunction.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.ScriptFunction();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.obj = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a ScriptFunction message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.ScriptFunction} ScriptFunction\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ScriptFunction.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a ScriptFunction message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ScriptFunction.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            if (!(message.obj && typeof message.obj.length === \"number\" || $util.isString(message.obj)))\n                                return \"obj: buffer expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a ScriptFunction message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.ScriptFunction} ScriptFunction\n                     */\n                    ScriptFunction.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.ScriptFunction)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.ScriptFunction();\n                        if (object.obj != null)\n                            if (typeof object.obj === \"string\")\n                                $util.base64.decode(object.obj, message.obj = $util.newBuffer($util.base64.length(object.obj)), 0);\n                            else if (object.obj.length)\n                                message.obj = object.obj;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a ScriptFunction message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ScriptFunction} message ScriptFunction\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ScriptFunction.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            if (options.bytes === String)\n                                object.obj = \"\";\n                            else {\n                                object.obj = [];\n                                if (options.bytes !== Array)\n                                    object.obj = $util.newBuffer(object.obj);\n                            }\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            object.obj = options.bytes === String ? $util.base64.encode(message.obj, 0, message.obj.length) : options.bytes === Array ? Array.prototype.slice.call(message.obj) : message.obj;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this ScriptFunction to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.ScriptFunction\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ScriptFunction.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return ScriptFunction;\n                })();\n\n                v1.ScriptModule = (function() {\n\n                    /**\n                     * Properties of a ScriptModule.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface IScriptModule\n                     * @property {Uint8Array|null} [obj] ScriptModule obj\n                     */\n\n                    /**\n                     * Constructs a new ScriptModule.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a ScriptModule.\n                     * @implements IScriptModule\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.IScriptModule=} [properties] Properties to set\n                     */\n                    function ScriptModule(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * ScriptModule obj.\n                     * @member {Uint8Array} obj\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @instance\n                     */\n                    ScriptModule.prototype.obj = $util.newBuffer([]);\n\n                    /**\n                     * Creates a new ScriptModule instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptModule=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.ScriptModule} ScriptModule instance\n                     */\n                    ScriptModule.create = function create(properties) {\n                        return new ScriptModule(properties);\n                    };\n\n                    /**\n                     * Encodes the specified ScriptModule message. Does not implicitly {@link syft_proto.types.torch.v1.ScriptModule.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptModule} message ScriptModule message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ScriptModule.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.obj);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified ScriptModule message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.ScriptModule.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.IScriptModule} message ScriptModule message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ScriptModule.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a ScriptModule message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.ScriptModule} ScriptModule\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ScriptModule.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.ScriptModule();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.obj = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a ScriptModule message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.ScriptModule} ScriptModule\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ScriptModule.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a ScriptModule message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ScriptModule.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            if (!(message.obj && typeof message.obj.length === \"number\" || $util.isString(message.obj)))\n                                return \"obj: buffer expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a ScriptModule message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.ScriptModule} ScriptModule\n                     */\n                    ScriptModule.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.ScriptModule)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.ScriptModule();\n                        if (object.obj != null)\n                            if (typeof object.obj === \"string\")\n                                $util.base64.decode(object.obj, message.obj = $util.newBuffer($util.base64.length(object.obj)), 0);\n                            else if (object.obj.length)\n                                message.obj = object.obj;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a ScriptModule message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ScriptModule} message ScriptModule\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ScriptModule.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            if (options.bytes === String)\n                                object.obj = \"\";\n                            else {\n                                object.obj = [];\n                                if (options.bytes !== Array)\n                                    object.obj = $util.newBuffer(object.obj);\n                            }\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            object.obj = options.bytes === String ? $util.base64.encode(message.obj, 0, message.obj.length) : options.bytes === Array ? Array.prototype.slice.call(message.obj) : message.obj;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this ScriptModule to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.ScriptModule\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ScriptModule.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return ScriptModule;\n                })();\n\n                v1.TracedModule = (function() {\n\n                    /**\n                     * Properties of a TracedModule.\n                     * @memberof syft_proto.types.torch.v1\n                     * @interface ITracedModule\n                     * @property {Uint8Array|null} [obj] TracedModule obj\n                     */\n\n                    /**\n                     * Constructs a new TracedModule.\n                     * @memberof syft_proto.types.torch.v1\n                     * @classdesc Represents a TracedModule.\n                     * @implements ITracedModule\n                     * @constructor\n                     * @param {syft_proto.types.torch.v1.ITracedModule=} [properties] Properties to set\n                     */\n                    function TracedModule(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * TracedModule obj.\n                     * @member {Uint8Array} obj\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @instance\n                     */\n                    TracedModule.prototype.obj = $util.newBuffer([]);\n\n                    /**\n                     * Creates a new TracedModule instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITracedModule=} [properties] Properties to set\n                     * @returns {syft_proto.types.torch.v1.TracedModule} TracedModule instance\n                     */\n                    TracedModule.create = function create(properties) {\n                        return new TracedModule(properties);\n                    };\n\n                    /**\n                     * Encodes the specified TracedModule message. Does not implicitly {@link syft_proto.types.torch.v1.TracedModule.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITracedModule} message TracedModule message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TracedModule.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.obj);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified TracedModule message, length delimited. Does not implicitly {@link syft_proto.types.torch.v1.TracedModule.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.ITracedModule} message TracedModule message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    TracedModule.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a TracedModule message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.types.torch.v1.TracedModule} TracedModule\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TracedModule.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.types.torch.v1.TracedModule();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.obj = reader.bytes();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a TracedModule message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.types.torch.v1.TracedModule} TracedModule\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    TracedModule.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a TracedModule message.\n                     * @function verify\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    TracedModule.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            if (!(message.obj && typeof message.obj.length === \"number\" || $util.isString(message.obj)))\n                                return \"obj: buffer expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a TracedModule message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.types.torch.v1.TracedModule} TracedModule\n                     */\n                    TracedModule.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.types.torch.v1.TracedModule)\n                            return object;\n                        var message = new $root.syft_proto.types.torch.v1.TracedModule();\n                        if (object.obj != null)\n                            if (typeof object.obj === \"string\")\n                                $util.base64.decode(object.obj, message.obj = $util.newBuffer($util.base64.length(object.obj)), 0);\n                            else if (object.obj.length)\n                                message.obj = object.obj;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a TracedModule message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @static\n                     * @param {syft_proto.types.torch.v1.TracedModule} message TracedModule\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    TracedModule.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults)\n                            if (options.bytes === String)\n                                object.obj = \"\";\n                            else {\n                                object.obj = [];\n                                if (options.bytes !== Array)\n                                    object.obj = $util.newBuffer(object.obj);\n                            }\n                        if (message.obj != null && message.hasOwnProperty(\"obj\"))\n                            object.obj = options.bytes === String ? $util.base64.encode(message.obj, 0, message.obj.length) : options.bytes === Array ? Array.prototype.slice.call(message.obj) : message.obj;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this TracedModule to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.types.torch.v1.TracedModule\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    TracedModule.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return TracedModule;\n                })();\n\n                return v1;\n            })();\n\n            return torch;\n        })();\n\n        return types;\n    })();\n\n    syft_proto.generic = (function() {\n\n        /**\n         * Namespace generic.\n         * @memberof syft_proto\n         * @namespace\n         */\n        var generic = {};\n\n        generic.pointers = (function() {\n\n            /**\n             * Namespace pointers.\n             * @memberof syft_proto.generic\n             * @namespace\n             */\n            var pointers = {};\n\n            pointers.v1 = (function() {\n\n                /**\n                 * Namespace v1.\n                 * @memberof syft_proto.generic.pointers\n                 * @namespace\n                 */\n                var v1 = {};\n\n                v1.PointerTensor = (function() {\n\n                    /**\n                     * Properties of a PointerTensor.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @interface IPointerTensor\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id] PointerTensor object_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [location_id] PointerTensor location_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id_at_location] PointerTensor object_id_at_location\n                     * @property {syft_proto.types.syft.v1.IShape|null} [shape] PointerTensor shape\n                     * @property {string|null} [point_to_attr] PointerTensor point_to_attr\n                     * @property {boolean|null} [garbage_collect_data] PointerTensor garbage_collect_data\n                     */\n\n                    /**\n                     * Constructs a new PointerTensor.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @classdesc Represents a PointerTensor.\n                     * @implements IPointerTensor\n                     * @constructor\n                     * @param {syft_proto.generic.pointers.v1.IPointerTensor=} [properties] Properties to set\n                     */\n                    function PointerTensor(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * PointerTensor object_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.object_id = null;\n\n                    /**\n                     * PointerTensor location_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} location_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.location_id = null;\n\n                    /**\n                     * PointerTensor object_id_at_location.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id_at_location\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.object_id_at_location = null;\n\n                    /**\n                     * PointerTensor shape.\n                     * @member {syft_proto.types.syft.v1.IShape|null|undefined} shape\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.shape = null;\n\n                    /**\n                     * PointerTensor point_to_attr.\n                     * @member {string} point_to_attr\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.point_to_attr = \"\";\n\n                    /**\n                     * PointerTensor garbage_collect_data.\n                     * @member {boolean} garbage_collect_data\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     */\n                    PointerTensor.prototype.garbage_collect_data = false;\n\n                    /**\n                     * Creates a new PointerTensor instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerTensor=} [properties] Properties to set\n                     * @returns {syft_proto.generic.pointers.v1.PointerTensor} PointerTensor instance\n                     */\n                    PointerTensor.create = function create(properties) {\n                        return new PointerTensor(properties);\n                    };\n\n                    /**\n                     * Encodes the specified PointerTensor message. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerTensor.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerTensor} message PointerTensor message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerTensor.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.location_id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id_at_location, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                            $root.syft_proto.types.syft.v1.Shape.encode(message.shape, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.point_to_attr);\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.garbage_collect_data);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified PointerTensor message, length delimited. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerTensor.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerTensor} message PointerTensor message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerTensor.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a PointerTensor message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.generic.pointers.v1.PointerTensor} PointerTensor\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerTensor.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.generic.pointers.v1.PointerTensor();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.location_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 4:\n                                message.shape = $root.syft_proto.types.syft.v1.Shape.decode(reader, reader.uint32());\n                                break;\n                            case 5:\n                                message.point_to_attr = reader.string();\n                                break;\n                            case 6:\n                                message.garbage_collect_data = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a PointerTensor message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.generic.pointers.v1.PointerTensor} PointerTensor\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerTensor.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a PointerTensor message.\n                     * @function verify\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    PointerTensor.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                            if (error)\n                                return \"object_id.\" + error;\n                        }\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.location_id);\n                            if (error)\n                                return \"location_id.\" + error;\n                        }\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id_at_location);\n                            if (error)\n                                return \"object_id_at_location.\" + error;\n                        }\n                        if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                            var error = $root.syft_proto.types.syft.v1.Shape.verify(message.shape);\n                            if (error)\n                                return \"shape.\" + error;\n                        }\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            if (!$util.isString(message.point_to_attr))\n                                return \"point_to_attr: string expected\";\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            if (typeof message.garbage_collect_data !== \"boolean\")\n                                return \"garbage_collect_data: boolean expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a PointerTensor message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.generic.pointers.v1.PointerTensor} PointerTensor\n                     */\n                    PointerTensor.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.generic.pointers.v1.PointerTensor)\n                            return object;\n                        var message = new $root.syft_proto.generic.pointers.v1.PointerTensor();\n                        if (object.object_id != null) {\n                            if (typeof object.object_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerTensor.object_id: object expected\");\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                        }\n                        if (object.location_id != null) {\n                            if (typeof object.location_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerTensor.location_id: object expected\");\n                            message.location_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.location_id);\n                        }\n                        if (object.object_id_at_location != null) {\n                            if (typeof object.object_id_at_location !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerTensor.object_id_at_location: object expected\");\n                            message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id_at_location);\n                        }\n                        if (object.shape != null) {\n                            if (typeof object.shape !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerTensor.shape: object expected\");\n                            message.shape = $root.syft_proto.types.syft.v1.Shape.fromObject(object.shape);\n                        }\n                        if (object.point_to_attr != null)\n                            message.point_to_attr = String(object.point_to_attr);\n                        if (object.garbage_collect_data != null)\n                            message.garbage_collect_data = Boolean(object.garbage_collect_data);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a PointerTensor message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.PointerTensor} message PointerTensor\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    PointerTensor.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.object_id = null;\n                            object.location_id = null;\n                            object.object_id_at_location = null;\n                            object.shape = null;\n                            object.point_to_attr = \"\";\n                            object.garbage_collect_data = false;\n                        }\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            object.location_id = $root.syft_proto.types.syft.v1.Id.toObject(message.location_id, options);\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            object.object_id_at_location = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id_at_location, options);\n                        if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                            object.shape = $root.syft_proto.types.syft.v1.Shape.toObject(message.shape, options);\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            object.point_to_attr = message.point_to_attr;\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            object.garbage_collect_data = message.garbage_collect_data;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this PointerTensor to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.generic.pointers.v1.PointerTensor\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    PointerTensor.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return PointerTensor;\n                })();\n\n                v1.ObjectPointer = (function() {\n\n                    /**\n                     * Properties of an ObjectPointer.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @interface IObjectPointer\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id] ObjectPointer object_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [location_id] ObjectPointer location_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id_at_location] ObjectPointer object_id_at_location\n                     * @property {string|null} [point_to_attr] ObjectPointer point_to_attr\n                     */\n\n                    /**\n                     * Constructs a new ObjectPointer.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @classdesc Represents an ObjectPointer.\n                     * @implements IObjectPointer\n                     * @constructor\n                     * @param {syft_proto.generic.pointers.v1.IObjectPointer=} [properties] Properties to set\n                     */\n                    function ObjectPointer(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * ObjectPointer object_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @instance\n                     */\n                    ObjectPointer.prototype.object_id = null;\n\n                    /**\n                     * ObjectPointer location_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} location_id\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @instance\n                     */\n                    ObjectPointer.prototype.location_id = null;\n\n                    /**\n                     * ObjectPointer object_id_at_location.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id_at_location\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @instance\n                     */\n                    ObjectPointer.prototype.object_id_at_location = null;\n\n                    /**\n                     * ObjectPointer point_to_attr.\n                     * @member {string} point_to_attr\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @instance\n                     */\n                    ObjectPointer.prototype.point_to_attr = \"\";\n\n                    /**\n                     * Creates a new ObjectPointer instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IObjectPointer=} [properties] Properties to set\n                     * @returns {syft_proto.generic.pointers.v1.ObjectPointer} ObjectPointer instance\n                     */\n                    ObjectPointer.create = function create(properties) {\n                        return new ObjectPointer(properties);\n                    };\n\n                    /**\n                     * Encodes the specified ObjectPointer message. Does not implicitly {@link syft_proto.generic.pointers.v1.ObjectPointer.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IObjectPointer} message ObjectPointer message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ObjectPointer.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.location_id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id_at_location, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.point_to_attr);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified ObjectPointer message, length delimited. Does not implicitly {@link syft_proto.generic.pointers.v1.ObjectPointer.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IObjectPointer} message ObjectPointer message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    ObjectPointer.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes an ObjectPointer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.generic.pointers.v1.ObjectPointer} ObjectPointer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ObjectPointer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.generic.pointers.v1.ObjectPointer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.location_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 4:\n                                message.point_to_attr = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes an ObjectPointer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.generic.pointers.v1.ObjectPointer} ObjectPointer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    ObjectPointer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies an ObjectPointer message.\n                     * @function verify\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    ObjectPointer.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                            if (error)\n                                return \"object_id.\" + error;\n                        }\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.location_id);\n                            if (error)\n                                return \"location_id.\" + error;\n                        }\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id_at_location);\n                            if (error)\n                                return \"object_id_at_location.\" + error;\n                        }\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            if (!$util.isString(message.point_to_attr))\n                                return \"point_to_attr: string expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates an ObjectPointer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.generic.pointers.v1.ObjectPointer} ObjectPointer\n                     */\n                    ObjectPointer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.generic.pointers.v1.ObjectPointer)\n                            return object;\n                        var message = new $root.syft_proto.generic.pointers.v1.ObjectPointer();\n                        if (object.object_id != null) {\n                            if (typeof object.object_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.ObjectPointer.object_id: object expected\");\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                        }\n                        if (object.location_id != null) {\n                            if (typeof object.location_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.ObjectPointer.location_id: object expected\");\n                            message.location_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.location_id);\n                        }\n                        if (object.object_id_at_location != null) {\n                            if (typeof object.object_id_at_location !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.ObjectPointer.object_id_at_location: object expected\");\n                            message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id_at_location);\n                        }\n                        if (object.point_to_attr != null)\n                            message.point_to_attr = String(object.point_to_attr);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from an ObjectPointer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.ObjectPointer} message ObjectPointer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    ObjectPointer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.object_id = null;\n                            object.location_id = null;\n                            object.object_id_at_location = null;\n                            object.point_to_attr = \"\";\n                        }\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            object.location_id = $root.syft_proto.types.syft.v1.Id.toObject(message.location_id, options);\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            object.object_id_at_location = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id_at_location, options);\n                        if (message.point_to_attr != null && message.hasOwnProperty(\"point_to_attr\"))\n                            object.point_to_attr = message.point_to_attr;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this ObjectPointer to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.generic.pointers.v1.ObjectPointer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    ObjectPointer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return ObjectPointer;\n                })();\n\n                v1.PointerDataset = (function() {\n\n                    /**\n                     * Properties of a PointerDataset.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @interface IPointerDataset\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id] PointerDataset object_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [location_id] PointerDataset location_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id_at_location] PointerDataset object_id_at_location\n                     * @property {Array.<string>|null} [tags] PointerDataset tags\n                     * @property {string|null} [description] PointerDataset description\n                     * @property {boolean|null} [garbage_collect_data] PointerDataset garbage_collect_data\n                     */\n\n                    /**\n                     * Constructs a new PointerDataset.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @classdesc Represents a PointerDataset.\n                     * @implements IPointerDataset\n                     * @constructor\n                     * @param {syft_proto.generic.pointers.v1.IPointerDataset=} [properties] Properties to set\n                     */\n                    function PointerDataset(properties) {\n                        this.tags = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * PointerDataset object_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.object_id = null;\n\n                    /**\n                     * PointerDataset location_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} location_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.location_id = null;\n\n                    /**\n                     * PointerDataset object_id_at_location.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id_at_location\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.object_id_at_location = null;\n\n                    /**\n                     * PointerDataset tags.\n                     * @member {Array.<string>} tags\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * PointerDataset description.\n                     * @member {string} description\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.description = \"\";\n\n                    /**\n                     * PointerDataset garbage_collect_data.\n                     * @member {boolean} garbage_collect_data\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     */\n                    PointerDataset.prototype.garbage_collect_data = false;\n\n                    /**\n                     * Creates a new PointerDataset instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerDataset=} [properties] Properties to set\n                     * @returns {syft_proto.generic.pointers.v1.PointerDataset} PointerDataset instance\n                     */\n                    PointerDataset.create = function create(properties) {\n                        return new PointerDataset(properties);\n                    };\n\n                    /**\n                     * Encodes the specified PointerDataset message. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerDataset.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerDataset} message PointerDataset message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerDataset.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.location_id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id_at_location, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        if (message.tags != null && message.tags.length)\n                            for (var i = 0; i < message.tags.length; ++i)\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.garbage_collect_data);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified PointerDataset message, length delimited. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerDataset.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerDataset} message PointerDataset message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerDataset.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a PointerDataset message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.generic.pointers.v1.PointerDataset} PointerDataset\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerDataset.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.generic.pointers.v1.PointerDataset();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.location_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 4:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                message.tags.push(reader.string());\n                                break;\n                            case 5:\n                                message.description = reader.string();\n                                break;\n                            case 6:\n                                message.garbage_collect_data = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a PointerDataset message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.generic.pointers.v1.PointerDataset} PointerDataset\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerDataset.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a PointerDataset message.\n                     * @function verify\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    PointerDataset.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                            if (error)\n                                return \"object_id.\" + error;\n                        }\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.location_id);\n                            if (error)\n                                return \"location_id.\" + error;\n                        }\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id_at_location);\n                            if (error)\n                                return \"object_id_at_location.\" + error;\n                        }\n                        if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                            if (!Array.isArray(message.tags))\n                                return \"tags: array expected\";\n                            for (var i = 0; i < message.tags.length; ++i)\n                                if (!$util.isString(message.tags[i]))\n                                    return \"tags: string[] expected\";\n                        }\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            if (!$util.isString(message.description))\n                                return \"description: string expected\";\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            if (typeof message.garbage_collect_data !== \"boolean\")\n                                return \"garbage_collect_data: boolean expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a PointerDataset message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.generic.pointers.v1.PointerDataset} PointerDataset\n                     */\n                    PointerDataset.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.generic.pointers.v1.PointerDataset)\n                            return object;\n                        var message = new $root.syft_proto.generic.pointers.v1.PointerDataset();\n                        if (object.object_id != null) {\n                            if (typeof object.object_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerDataset.object_id: object expected\");\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                        }\n                        if (object.location_id != null) {\n                            if (typeof object.location_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerDataset.location_id: object expected\");\n                            message.location_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.location_id);\n                        }\n                        if (object.object_id_at_location != null) {\n                            if (typeof object.object_id_at_location !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerDataset.object_id_at_location: object expected\");\n                            message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id_at_location);\n                        }\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerDataset.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = String(object.tags[i]);\n                        }\n                        if (object.description != null)\n                            message.description = String(object.description);\n                        if (object.garbage_collect_data != null)\n                            message.garbage_collect_data = Boolean(object.garbage_collect_data);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a PointerDataset message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.PointerDataset} message PointerDataset\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    PointerDataset.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.tags = [];\n                        if (options.defaults) {\n                            object.object_id = null;\n                            object.location_id = null;\n                            object.object_id_at_location = null;\n                            object.description = \"\";\n                            object.garbage_collect_data = false;\n                        }\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            object.location_id = $root.syft_proto.types.syft.v1.Id.toObject(message.location_id, options);\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            object.object_id_at_location = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id_at_location, options);\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.description != null && message.hasOwnProperty(\"description\"))\n                            object.description = message.description;\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            object.garbage_collect_data = message.garbage_collect_data;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this PointerDataset to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.generic.pointers.v1.PointerDataset\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    PointerDataset.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return PointerDataset;\n                })();\n\n                v1.PointerPlan = (function() {\n\n                    /**\n                     * Properties of a PointerPlan.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @interface IPointerPlan\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id] PointerPlan object_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [location_id] PointerPlan location_id\n                     * @property {syft_proto.types.syft.v1.IId|null} [object_id_at_location] PointerPlan object_id_at_location\n                     * @property {Array.<string>|null} [tags] PointerPlan tags\n                     * @property {boolean|null} [garbage_collect_data] PointerPlan garbage_collect_data\n                     */\n\n                    /**\n                     * Constructs a new PointerPlan.\n                     * @memberof syft_proto.generic.pointers.v1\n                     * @classdesc Represents a PointerPlan.\n                     * @implements IPointerPlan\n                     * @constructor\n                     * @param {syft_proto.generic.pointers.v1.IPointerPlan=} [properties] Properties to set\n                     */\n                    function PointerPlan(properties) {\n                        this.tags = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * PointerPlan object_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     */\n                    PointerPlan.prototype.object_id = null;\n\n                    /**\n                     * PointerPlan location_id.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} location_id\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     */\n                    PointerPlan.prototype.location_id = null;\n\n                    /**\n                     * PointerPlan object_id_at_location.\n                     * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id_at_location\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     */\n                    PointerPlan.prototype.object_id_at_location = null;\n\n                    /**\n                     * PointerPlan tags.\n                     * @member {Array.<string>} tags\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     */\n                    PointerPlan.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * PointerPlan garbage_collect_data.\n                     * @member {boolean} garbage_collect_data\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     */\n                    PointerPlan.prototype.garbage_collect_data = false;\n\n                    /**\n                     * Creates a new PointerPlan instance using the specified properties.\n                     * @function create\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerPlan=} [properties] Properties to set\n                     * @returns {syft_proto.generic.pointers.v1.PointerPlan} PointerPlan instance\n                     */\n                    PointerPlan.create = function create(properties) {\n                        return new PointerPlan(properties);\n                    };\n\n                    /**\n                     * Encodes the specified PointerPlan message. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerPlan.verify|verify} messages.\n                     * @function encode\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerPlan} message PointerPlan message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerPlan.encode = function encode(message, writer) {\n                        if (!writer)\n                            writer = $Writer.create();\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.location_id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            $root.syft_proto.types.syft.v1.Id.encode(message.object_id_at_location, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                        if (message.tags != null && message.tags.length)\n                            for (var i = 0; i < message.tags.length; ++i)\n                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.garbage_collect_data);\n                        return writer;\n                    };\n\n                    /**\n                     * Encodes the specified PointerPlan message, length delimited. Does not implicitly {@link syft_proto.generic.pointers.v1.PointerPlan.verify|verify} messages.\n                     * @function encodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.IPointerPlan} message PointerPlan message or plain object to encode\n                     * @param {$protobuf.Writer} [writer] Writer to encode to\n                     * @returns {$protobuf.Writer} Writer\n                     */\n                    PointerPlan.encodeDelimited = function encodeDelimited(message, writer) {\n                        return this.encode(message, writer).ldelim();\n                    };\n\n                    /**\n                     * Decodes a PointerPlan message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {syft_proto.generic.pointers.v1.PointerPlan} PointerPlan\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerPlan.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.generic.pointers.v1.PointerPlan();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 2:\n                                message.location_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 3:\n                                message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                break;\n                            case 4:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                message.tags.push(reader.string());\n                                break;\n                            case 5:\n                                message.garbage_collect_data = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a PointerPlan message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {syft_proto.generic.pointers.v1.PointerPlan} PointerPlan\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    PointerPlan.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Verifies a PointerPlan message.\n                     * @function verify\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {Object.<string,*>} message Plain object to verify\n                     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                     */\n                    PointerPlan.verify = function verify(message) {\n                        if (typeof message !== \"object\" || message === null)\n                            return \"object expected\";\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                            if (error)\n                                return \"object_id.\" + error;\n                        }\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.location_id);\n                            if (error)\n                                return \"location_id.\" + error;\n                        }\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\")) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id_at_location);\n                            if (error)\n                                return \"object_id_at_location.\" + error;\n                        }\n                        if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                            if (!Array.isArray(message.tags))\n                                return \"tags: array expected\";\n                            for (var i = 0; i < message.tags.length; ++i)\n                                if (!$util.isString(message.tags[i]))\n                                    return \"tags: string[] expected\";\n                        }\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            if (typeof message.garbage_collect_data !== \"boolean\")\n                                return \"garbage_collect_data: boolean expected\";\n                        return null;\n                    };\n\n                    /**\n                     * Creates a PointerPlan message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {syft_proto.generic.pointers.v1.PointerPlan} PointerPlan\n                     */\n                    PointerPlan.fromObject = function fromObject(object) {\n                        if (object instanceof $root.syft_proto.generic.pointers.v1.PointerPlan)\n                            return object;\n                        var message = new $root.syft_proto.generic.pointers.v1.PointerPlan();\n                        if (object.object_id != null) {\n                            if (typeof object.object_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerPlan.object_id: object expected\");\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                        }\n                        if (object.location_id != null) {\n                            if (typeof object.location_id !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerPlan.location_id: object expected\");\n                            message.location_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.location_id);\n                        }\n                        if (object.object_id_at_location != null) {\n                            if (typeof object.object_id_at_location !== \"object\")\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerPlan.object_id_at_location: object expected\");\n                            message.object_id_at_location = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id_at_location);\n                        }\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".syft_proto.generic.pointers.v1.PointerPlan.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = String(object.tags[i]);\n                        }\n                        if (object.garbage_collect_data != null)\n                            message.garbage_collect_data = Boolean(object.garbage_collect_data);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a PointerPlan message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @static\n                     * @param {syft_proto.generic.pointers.v1.PointerPlan} message PointerPlan\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    PointerPlan.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults)\n                            object.tags = [];\n                        if (options.defaults) {\n                            object.object_id = null;\n                            object.location_id = null;\n                            object.object_id_at_location = null;\n                            object.garbage_collect_data = false;\n                        }\n                        if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                            object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                        if (message.location_id != null && message.hasOwnProperty(\"location_id\"))\n                            object.location_id = $root.syft_proto.types.syft.v1.Id.toObject(message.location_id, options);\n                        if (message.object_id_at_location != null && message.hasOwnProperty(\"object_id_at_location\"))\n                            object.object_id_at_location = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id_at_location, options);\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.garbage_collect_data != null && message.hasOwnProperty(\"garbage_collect_data\"))\n                            object.garbage_collect_data = message.garbage_collect_data;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this PointerPlan to JSON.\n                     * @function toJSON\n                     * @memberof syft_proto.generic.pointers.v1.PointerPlan\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    PointerPlan.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return PointerPlan;\n                })();\n\n                return v1;\n            })();\n\n            return pointers;\n        })();\n\n        return generic;\n    })();\n\n    syft_proto.frameworks = (function() {\n\n        /**\n         * Namespace frameworks.\n         * @memberof syft_proto\n         * @namespace\n         */\n        var frameworks = {};\n\n        frameworks.torch = (function() {\n\n            /**\n             * Namespace torch.\n             * @memberof syft_proto.frameworks\n             * @namespace\n             */\n            var torch = {};\n\n            torch.fl = (function() {\n\n                /**\n                 * Namespace fl.\n                 * @memberof syft_proto.frameworks.torch\n                 * @namespace\n                 */\n                var fl = {};\n\n                fl.v1 = (function() {\n\n                    /**\n                     * Namespace v1.\n                     * @memberof syft_proto.frameworks.torch.fl\n                     * @namespace\n                     */\n                    var v1 = {};\n\n                    v1.BaseDataset = (function() {\n\n                        /**\n                         * Properties of a BaseDataset.\n                         * @memberof syft_proto.frameworks.torch.fl.v1\n                         * @interface IBaseDataset\n                         * @property {syft_proto.types.torch.v1.ITorchTensor|null} [data] BaseDataset data\n                         * @property {syft_proto.types.torch.v1.ITorchTensor|null} [targets] BaseDataset targets\n                         * @property {syft_proto.types.syft.v1.IId|null} [id] BaseDataset id\n                         * @property {Array.<string>|null} [tags] BaseDataset tags\n                         * @property {string|null} [description] BaseDataset description\n                         * @property {syft_proto.types.torch.v1.ITorchTensor|null} [child] BaseDataset child\n                         */\n\n                        /**\n                         * Constructs a new BaseDataset.\n                         * @memberof syft_proto.frameworks.torch.fl.v1\n                         * @classdesc Represents a BaseDataset.\n                         * @implements IBaseDataset\n                         * @constructor\n                         * @param {syft_proto.frameworks.torch.fl.v1.IBaseDataset=} [properties] Properties to set\n                         */\n                        function BaseDataset(properties) {\n                            this.tags = [];\n                            if (properties)\n                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                    if (properties[keys[i]] != null)\n                                        this[keys[i]] = properties[keys[i]];\n                        }\n\n                        /**\n                         * BaseDataset data.\n                         * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} data\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.data = null;\n\n                        /**\n                         * BaseDataset targets.\n                         * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} targets\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.targets = null;\n\n                        /**\n                         * BaseDataset id.\n                         * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.id = null;\n\n                        /**\n                         * BaseDataset tags.\n                         * @member {Array.<string>} tags\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.tags = $util.emptyArray;\n\n                        /**\n                         * BaseDataset description.\n                         * @member {string} description\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.description = \"\";\n\n                        /**\n                         * BaseDataset child.\n                         * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} child\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         */\n                        BaseDataset.prototype.child = null;\n\n                        /**\n                         * Creates a new BaseDataset instance using the specified properties.\n                         * @function create\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {syft_proto.frameworks.torch.fl.v1.IBaseDataset=} [properties] Properties to set\n                         * @returns {syft_proto.frameworks.torch.fl.v1.BaseDataset} BaseDataset instance\n                         */\n                        BaseDataset.create = function create(properties) {\n                            return new BaseDataset(properties);\n                        };\n\n                        /**\n                         * Encodes the specified BaseDataset message. Does not implicitly {@link syft_proto.frameworks.torch.fl.v1.BaseDataset.verify|verify} messages.\n                         * @function encode\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {syft_proto.frameworks.torch.fl.v1.IBaseDataset} message BaseDataset message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        BaseDataset.encode = function encode(message, writer) {\n                            if (!writer)\n                                writer = $Writer.create();\n                            if (message.data != null && message.hasOwnProperty(\"data\"))\n                                $root.syft_proto.types.torch.v1.TorchTensor.encode(message.data, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                            if (message.targets != null && message.hasOwnProperty(\"targets\"))\n                                $root.syft_proto.types.torch.v1.TorchTensor.encode(message.targets, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                            if (message.id != null && message.hasOwnProperty(\"id\"))\n                                $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                            if (message.tags != null && message.tags.length)\n                                for (var i = 0; i < message.tags.length; ++i)\n                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);\n                            if (message.description != null && message.hasOwnProperty(\"description\"))\n                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);\n                            if (message.child != null && message.hasOwnProperty(\"child\"))\n                                $root.syft_proto.types.torch.v1.TorchTensor.encode(message.child, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                            return writer;\n                        };\n\n                        /**\n                         * Encodes the specified BaseDataset message, length delimited. Does not implicitly {@link syft_proto.frameworks.torch.fl.v1.BaseDataset.verify|verify} messages.\n                         * @function encodeDelimited\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {syft_proto.frameworks.torch.fl.v1.IBaseDataset} message BaseDataset message or plain object to encode\n                         * @param {$protobuf.Writer} [writer] Writer to encode to\n                         * @returns {$protobuf.Writer} Writer\n                         */\n                        BaseDataset.encodeDelimited = function encodeDelimited(message, writer) {\n                            return this.encode(message, writer).ldelim();\n                        };\n\n                        /**\n                         * Decodes a BaseDataset message from the specified reader or buffer.\n                         * @function decode\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @param {number} [length] Message length if known beforehand\n                         * @returns {syft_proto.frameworks.torch.fl.v1.BaseDataset} BaseDataset\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        BaseDataset.decode = function decode(reader, length) {\n                            if (!(reader instanceof $Reader))\n                                reader = $Reader.create(reader);\n                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.frameworks.torch.fl.v1.BaseDataset();\n                            while (reader.pos < end) {\n                                var tag = reader.uint32();\n                                switch (tag >>> 3) {\n                                case 1:\n                                    message.data = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                    break;\n                                case 2:\n                                    message.targets = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                    break;\n                                case 3:\n                                    message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                    break;\n                                case 4:\n                                    if (!(message.tags && message.tags.length))\n                                        message.tags = [];\n                                    message.tags.push(reader.string());\n                                    break;\n                                case 5:\n                                    message.description = reader.string();\n                                    break;\n                                case 6:\n                                    message.child = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                                    break;\n                                default:\n                                    reader.skipType(tag & 7);\n                                    break;\n                                }\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Decodes a BaseDataset message from the specified reader or buffer, length delimited.\n                         * @function decodeDelimited\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                         * @returns {syft_proto.frameworks.torch.fl.v1.BaseDataset} BaseDataset\n                         * @throws {Error} If the payload is not a reader or valid buffer\n                         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                         */\n                        BaseDataset.decodeDelimited = function decodeDelimited(reader) {\n                            if (!(reader instanceof $Reader))\n                                reader = new $Reader(reader);\n                            return this.decode(reader, reader.uint32());\n                        };\n\n                        /**\n                         * Verifies a BaseDataset message.\n                         * @function verify\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {Object.<string,*>} message Plain object to verify\n                         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                         */\n                        BaseDataset.verify = function verify(message) {\n                            if (typeof message !== \"object\" || message === null)\n                                return \"object expected\";\n                            if (message.data != null && message.hasOwnProperty(\"data\")) {\n                                var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.data);\n                                if (error)\n                                    return \"data.\" + error;\n                            }\n                            if (message.targets != null && message.hasOwnProperty(\"targets\")) {\n                                var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.targets);\n                                if (error)\n                                    return \"targets.\" + error;\n                            }\n                            if (message.id != null && message.hasOwnProperty(\"id\")) {\n                                var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                                if (error)\n                                    return \"id.\" + error;\n                            }\n                            if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                                if (!Array.isArray(message.tags))\n                                    return \"tags: array expected\";\n                                for (var i = 0; i < message.tags.length; ++i)\n                                    if (!$util.isString(message.tags[i]))\n                                        return \"tags: string[] expected\";\n                            }\n                            if (message.description != null && message.hasOwnProperty(\"description\"))\n                                if (!$util.isString(message.description))\n                                    return \"description: string expected\";\n                            if (message.child != null && message.hasOwnProperty(\"child\")) {\n                                var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.child);\n                                if (error)\n                                    return \"child.\" + error;\n                            }\n                            return null;\n                        };\n\n                        /**\n                         * Creates a BaseDataset message from a plain object. Also converts values to their respective internal types.\n                         * @function fromObject\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {Object.<string,*>} object Plain object\n                         * @returns {syft_proto.frameworks.torch.fl.v1.BaseDataset} BaseDataset\n                         */\n                        BaseDataset.fromObject = function fromObject(object) {\n                            if (object instanceof $root.syft_proto.frameworks.torch.fl.v1.BaseDataset)\n                                return object;\n                            var message = new $root.syft_proto.frameworks.torch.fl.v1.BaseDataset();\n                            if (object.data != null) {\n                                if (typeof object.data !== \"object\")\n                                    throw TypeError(\".syft_proto.frameworks.torch.fl.v1.BaseDataset.data: object expected\");\n                                message.data = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.data);\n                            }\n                            if (object.targets != null) {\n                                if (typeof object.targets !== \"object\")\n                                    throw TypeError(\".syft_proto.frameworks.torch.fl.v1.BaseDataset.targets: object expected\");\n                                message.targets = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.targets);\n                            }\n                            if (object.id != null) {\n                                if (typeof object.id !== \"object\")\n                                    throw TypeError(\".syft_proto.frameworks.torch.fl.v1.BaseDataset.id: object expected\");\n                                message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                            }\n                            if (object.tags) {\n                                if (!Array.isArray(object.tags))\n                                    throw TypeError(\".syft_proto.frameworks.torch.fl.v1.BaseDataset.tags: array expected\");\n                                message.tags = [];\n                                for (var i = 0; i < object.tags.length; ++i)\n                                    message.tags[i] = String(object.tags[i]);\n                            }\n                            if (object.description != null)\n                                message.description = String(object.description);\n                            if (object.child != null) {\n                                if (typeof object.child !== \"object\")\n                                    throw TypeError(\".syft_proto.frameworks.torch.fl.v1.BaseDataset.child: object expected\");\n                                message.child = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.child);\n                            }\n                            return message;\n                        };\n\n                        /**\n                         * Creates a plain object from a BaseDataset message. Also converts values to other types if specified.\n                         * @function toObject\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @static\n                         * @param {syft_proto.frameworks.torch.fl.v1.BaseDataset} message BaseDataset\n                         * @param {$protobuf.IConversionOptions} [options] Conversion options\n                         * @returns {Object.<string,*>} Plain object\n                         */\n                        BaseDataset.toObject = function toObject(message, options) {\n                            if (!options)\n                                options = {};\n                            var object = {};\n                            if (options.arrays || options.defaults)\n                                object.tags = [];\n                            if (options.defaults) {\n                                object.data = null;\n                                object.targets = null;\n                                object.id = null;\n                                object.description = \"\";\n                                object.child = null;\n                            }\n                            if (message.data != null && message.hasOwnProperty(\"data\"))\n                                object.data = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.data, options);\n                            if (message.targets != null && message.hasOwnProperty(\"targets\"))\n                                object.targets = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.targets, options);\n                            if (message.id != null && message.hasOwnProperty(\"id\"))\n                                object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                            if (message.tags && message.tags.length) {\n                                object.tags = [];\n                                for (var j = 0; j < message.tags.length; ++j)\n                                    object.tags[j] = message.tags[j];\n                            }\n                            if (message.description != null && message.hasOwnProperty(\"description\"))\n                                object.description = message.description;\n                            if (message.child != null && message.hasOwnProperty(\"child\"))\n                                object.child = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.child, options);\n                            return object;\n                        };\n\n                        /**\n                         * Converts this BaseDataset to JSON.\n                         * @function toJSON\n                         * @memberof syft_proto.frameworks.torch.fl.v1.BaseDataset\n                         * @instance\n                         * @returns {Object.<string,*>} JSON object\n                         */\n                        BaseDataset.prototype.toJSON = function toJSON() {\n                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                        };\n\n                        return BaseDataset;\n                    })();\n\n                    return v1;\n                })();\n\n                return fl;\n            })();\n\n            torch.tensors = (function() {\n\n                /**\n                 * Namespace tensors.\n                 * @memberof syft_proto.frameworks.torch\n                 * @namespace\n                 */\n                var tensors = {};\n\n                tensors.interpreters = (function() {\n\n                    /**\n                     * Namespace interpreters.\n                     * @memberof syft_proto.frameworks.torch.tensors\n                     * @namespace\n                     */\n                    var interpreters = {};\n\n                    interpreters.v1 = (function() {\n\n                        /**\n                         * Namespace v1.\n                         * @memberof syft_proto.frameworks.torch.tensors.interpreters\n                         * @namespace\n                         */\n                        var v1 = {};\n\n                        v1.AdditiveSharingTensor = (function() {\n\n                            /**\n                             * Properties of an AdditiveSharingTensor.\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1\n                             * @interface IAdditiveSharingTensor\n                             * @property {syft_proto.types.syft.v1.IId|null} [id] AdditiveSharingTensor id\n                             * @property {number|Long|null} [field_int] AdditiveSharingTensor field_int\n                             * @property {string|null} [field_str] AdditiveSharingTensor field_str\n                             * @property {string|null} [dtype] AdditiveSharingTensor dtype\n                             * @property {syft_proto.types.syft.v1.IId|null} [crypto_provider_id] AdditiveSharingTensor crypto_provider_id\n                             * @property {Array.<syft_proto.types.syft.v1.IId>|null} [location_ids] AdditiveSharingTensor location_ids\n                             * @property {Array.<syft_proto.generic.pointers.v1.IPointerTensor>|null} [shares] AdditiveSharingTensor shares\n                             */\n\n                            /**\n                             * Constructs a new AdditiveSharingTensor.\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1\n                             * @classdesc Represents an AdditiveSharingTensor.\n                             * @implements IAdditiveSharingTensor\n                             * @constructor\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor=} [properties] Properties to set\n                             */\n                            function AdditiveSharingTensor(properties) {\n                                this.location_ids = [];\n                                this.shares = [];\n                                if (properties)\n                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                        if (properties[keys[i]] != null)\n                                            this[keys[i]] = properties[keys[i]];\n                            }\n\n                            /**\n                             * AdditiveSharingTensor id.\n                             * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.id = null;\n\n                            /**\n                             * AdditiveSharingTensor field_int.\n                             * @member {number|Long} field_int\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.field_int = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                            /**\n                             * AdditiveSharingTensor field_str.\n                             * @member {string} field_str\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.field_str = \"\";\n\n                            /**\n                             * AdditiveSharingTensor dtype.\n                             * @member {string} dtype\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.dtype = \"\";\n\n                            /**\n                             * AdditiveSharingTensor crypto_provider_id.\n                             * @member {syft_proto.types.syft.v1.IId|null|undefined} crypto_provider_id\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.crypto_provider_id = null;\n\n                            /**\n                             * AdditiveSharingTensor location_ids.\n                             * @member {Array.<syft_proto.types.syft.v1.IId>} location_ids\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.location_ids = $util.emptyArray;\n\n                            /**\n                             * AdditiveSharingTensor shares.\n                             * @member {Array.<syft_proto.generic.pointers.v1.IPointerTensor>} shares\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            AdditiveSharingTensor.prototype.shares = $util.emptyArray;\n\n                            // OneOf field names bound to virtual getters and setters\n                            var $oneOfFields;\n\n                            /**\n                             * AdditiveSharingTensor field_size.\n                             * @member {\"field_int\"|\"field_str\"|undefined} field_size\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             */\n                            Object.defineProperty(AdditiveSharingTensor.prototype, \"field_size\", {\n                                get: $util.oneOfGetter($oneOfFields = [\"field_int\", \"field_str\"]),\n                                set: $util.oneOfSetter($oneOfFields)\n                            });\n\n                            /**\n                             * Creates a new AdditiveSharingTensor instance using the specified properties.\n                             * @function create\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor=} [properties] Properties to set\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor} AdditiveSharingTensor instance\n                             */\n                            AdditiveSharingTensor.create = function create(properties) {\n                                return new AdditiveSharingTensor(properties);\n                            };\n\n                            /**\n                             * Encodes the specified AdditiveSharingTensor message. Does not implicitly {@link syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.verify|verify} messages.\n                             * @function encode\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor} message AdditiveSharingTensor message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            AdditiveSharingTensor.encode = function encode(message, writer) {\n                                if (!writer)\n                                    writer = $Writer.create();\n                                if (message.id != null && message.hasOwnProperty(\"id\"))\n                                    $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                                if (message.field_int != null && message.hasOwnProperty(\"field_int\"))\n                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.field_int);\n                                if (message.field_str != null && message.hasOwnProperty(\"field_str\"))\n                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.field_str);\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.dtype);\n                                if (message.crypto_provider_id != null && message.hasOwnProperty(\"crypto_provider_id\"))\n                                    $root.syft_proto.types.syft.v1.Id.encode(message.crypto_provider_id, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                                if (message.location_ids != null && message.location_ids.length)\n                                    for (var i = 0; i < message.location_ids.length; ++i)\n                                        $root.syft_proto.types.syft.v1.Id.encode(message.location_ids[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                                if (message.shares != null && message.shares.length)\n                                    for (var i = 0; i < message.shares.length; ++i)\n                                        $root.syft_proto.generic.pointers.v1.PointerTensor.encode(message.shares[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                                return writer;\n                            };\n\n                            /**\n                             * Encodes the specified AdditiveSharingTensor message, length delimited. Does not implicitly {@link syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.verify|verify} messages.\n                             * @function encodeDelimited\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor} message AdditiveSharingTensor message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            AdditiveSharingTensor.encodeDelimited = function encodeDelimited(message, writer) {\n                                return this.encode(message, writer).ldelim();\n                            };\n\n                            /**\n                             * Decodes an AdditiveSharingTensor message from the specified reader or buffer.\n                             * @function decode\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @param {number} [length] Message length if known beforehand\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor} AdditiveSharingTensor\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            AdditiveSharingTensor.decode = function decode(reader, length) {\n                                if (!(reader instanceof $Reader))\n                                    reader = $Reader.create(reader);\n                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor();\n                                while (reader.pos < end) {\n                                    var tag = reader.uint32();\n                                    switch (tag >>> 3) {\n                                    case 1:\n                                        message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                        break;\n                                    case 2:\n                                        message.field_int = reader.int64();\n                                        break;\n                                    case 3:\n                                        message.field_str = reader.string();\n                                        break;\n                                    case 4:\n                                        message.dtype = reader.string();\n                                        break;\n                                    case 5:\n                                        message.crypto_provider_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                        break;\n                                    case 6:\n                                        if (!(message.location_ids && message.location_ids.length))\n                                            message.location_ids = [];\n                                        message.location_ids.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                                        break;\n                                    case 7:\n                                        if (!(message.shares && message.shares.length))\n                                            message.shares = [];\n                                        message.shares.push($root.syft_proto.generic.pointers.v1.PointerTensor.decode(reader, reader.uint32()));\n                                        break;\n                                    default:\n                                        reader.skipType(tag & 7);\n                                        break;\n                                    }\n                                }\n                                return message;\n                            };\n\n                            /**\n                             * Decodes an AdditiveSharingTensor message from the specified reader or buffer, length delimited.\n                             * @function decodeDelimited\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor} AdditiveSharingTensor\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            AdditiveSharingTensor.decodeDelimited = function decodeDelimited(reader) {\n                                if (!(reader instanceof $Reader))\n                                    reader = new $Reader(reader);\n                                return this.decode(reader, reader.uint32());\n                            };\n\n                            /**\n                             * Verifies an AdditiveSharingTensor message.\n                             * @function verify\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {Object.<string,*>} message Plain object to verify\n                             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                             */\n                            AdditiveSharingTensor.verify = function verify(message) {\n                                if (typeof message !== \"object\" || message === null)\n                                    return \"object expected\";\n                                var properties = {};\n                                if (message.id != null && message.hasOwnProperty(\"id\")) {\n                                    var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                                    if (error)\n                                        return \"id.\" + error;\n                                }\n                                if (message.field_int != null && message.hasOwnProperty(\"field_int\")) {\n                                    properties.field_size = 1;\n                                    if (!$util.isInteger(message.field_int) && !(message.field_int && $util.isInteger(message.field_int.low) && $util.isInteger(message.field_int.high)))\n                                        return \"field_int: integer|Long expected\";\n                                }\n                                if (message.field_str != null && message.hasOwnProperty(\"field_str\")) {\n                                    if (properties.field_size === 1)\n                                        return \"field_size: multiple values\";\n                                    properties.field_size = 1;\n                                    if (!$util.isString(message.field_str))\n                                        return \"field_str: string expected\";\n                                }\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    if (!$util.isString(message.dtype))\n                                        return \"dtype: string expected\";\n                                if (message.crypto_provider_id != null && message.hasOwnProperty(\"crypto_provider_id\")) {\n                                    var error = $root.syft_proto.types.syft.v1.Id.verify(message.crypto_provider_id);\n                                    if (error)\n                                        return \"crypto_provider_id.\" + error;\n                                }\n                                if (message.location_ids != null && message.hasOwnProperty(\"location_ids\")) {\n                                    if (!Array.isArray(message.location_ids))\n                                        return \"location_ids: array expected\";\n                                    for (var i = 0; i < message.location_ids.length; ++i) {\n                                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.location_ids[i]);\n                                        if (error)\n                                            return \"location_ids.\" + error;\n                                    }\n                                }\n                                if (message.shares != null && message.hasOwnProperty(\"shares\")) {\n                                    if (!Array.isArray(message.shares))\n                                        return \"shares: array expected\";\n                                    for (var i = 0; i < message.shares.length; ++i) {\n                                        var error = $root.syft_proto.generic.pointers.v1.PointerTensor.verify(message.shares[i]);\n                                        if (error)\n                                            return \"shares.\" + error;\n                                    }\n                                }\n                                return null;\n                            };\n\n                            /**\n                             * Creates an AdditiveSharingTensor message from a plain object. Also converts values to their respective internal types.\n                             * @function fromObject\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {Object.<string,*>} object Plain object\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor} AdditiveSharingTensor\n                             */\n                            AdditiveSharingTensor.fromObject = function fromObject(object) {\n                                if (object instanceof $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor)\n                                    return object;\n                                var message = new $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor();\n                                if (object.id != null) {\n                                    if (typeof object.id !== \"object\")\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.id: object expected\");\n                                    message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                                }\n                                if (object.field_int != null)\n                                    if ($util.Long)\n                                        (message.field_int = $util.Long.fromValue(object.field_int)).unsigned = false;\n                                    else if (typeof object.field_int === \"string\")\n                                        message.field_int = parseInt(object.field_int, 10);\n                                    else if (typeof object.field_int === \"number\")\n                                        message.field_int = object.field_int;\n                                    else if (typeof object.field_int === \"object\")\n                                        message.field_int = new $util.LongBits(object.field_int.low >>> 0, object.field_int.high >>> 0).toNumber();\n                                if (object.field_str != null)\n                                    message.field_str = String(object.field_str);\n                                if (object.dtype != null)\n                                    message.dtype = String(object.dtype);\n                                if (object.crypto_provider_id != null) {\n                                    if (typeof object.crypto_provider_id !== \"object\")\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.crypto_provider_id: object expected\");\n                                    message.crypto_provider_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.crypto_provider_id);\n                                }\n                                if (object.location_ids) {\n                                    if (!Array.isArray(object.location_ids))\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.location_ids: array expected\");\n                                    message.location_ids = [];\n                                    for (var i = 0; i < object.location_ids.length; ++i) {\n                                        if (typeof object.location_ids[i] !== \"object\")\n                                            throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.location_ids: object expected\");\n                                        message.location_ids[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.location_ids[i]);\n                                    }\n                                }\n                                if (object.shares) {\n                                    if (!Array.isArray(object.shares))\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.shares: array expected\");\n                                    message.shares = [];\n                                    for (var i = 0; i < object.shares.length; ++i) {\n                                        if (typeof object.shares[i] !== \"object\")\n                                            throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.shares: object expected\");\n                                        message.shares[i] = $root.syft_proto.generic.pointers.v1.PointerTensor.fromObject(object.shares[i]);\n                                    }\n                                }\n                                return message;\n                            };\n\n                            /**\n                             * Creates a plain object from an AdditiveSharingTensor message. Also converts values to other types if specified.\n                             * @function toObject\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor} message AdditiveSharingTensor\n                             * @param {$protobuf.IConversionOptions} [options] Conversion options\n                             * @returns {Object.<string,*>} Plain object\n                             */\n                            AdditiveSharingTensor.toObject = function toObject(message, options) {\n                                if (!options)\n                                    options = {};\n                                var object = {};\n                                if (options.arrays || options.defaults) {\n                                    object.location_ids = [];\n                                    object.shares = [];\n                                }\n                                if (options.defaults) {\n                                    object.id = null;\n                                    object.dtype = \"\";\n                                    object.crypto_provider_id = null;\n                                }\n                                if (message.id != null && message.hasOwnProperty(\"id\"))\n                                    object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                                if (message.field_int != null && message.hasOwnProperty(\"field_int\")) {\n                                    if (typeof message.field_int === \"number\")\n                                        object.field_int = options.longs === String ? String(message.field_int) : message.field_int;\n                                    else\n                                        object.field_int = options.longs === String ? $util.Long.prototype.toString.call(message.field_int) : options.longs === Number ? new $util.LongBits(message.field_int.low >>> 0, message.field_int.high >>> 0).toNumber() : message.field_int;\n                                    if (options.oneofs)\n                                        object.field_size = \"field_int\";\n                                }\n                                if (message.field_str != null && message.hasOwnProperty(\"field_str\")) {\n                                    object.field_str = message.field_str;\n                                    if (options.oneofs)\n                                        object.field_size = \"field_str\";\n                                }\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    object.dtype = message.dtype;\n                                if (message.crypto_provider_id != null && message.hasOwnProperty(\"crypto_provider_id\"))\n                                    object.crypto_provider_id = $root.syft_proto.types.syft.v1.Id.toObject(message.crypto_provider_id, options);\n                                if (message.location_ids && message.location_ids.length) {\n                                    object.location_ids = [];\n                                    for (var j = 0; j < message.location_ids.length; ++j)\n                                        object.location_ids[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.location_ids[j], options);\n                                }\n                                if (message.shares && message.shares.length) {\n                                    object.shares = [];\n                                    for (var j = 0; j < message.shares.length; ++j)\n                                        object.shares[j] = $root.syft_proto.generic.pointers.v1.PointerTensor.toObject(message.shares[j], options);\n                                }\n                                return object;\n                            };\n\n                            /**\n                             * Converts this AdditiveSharingTensor to JSON.\n                             * @function toJSON\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor\n                             * @instance\n                             * @returns {Object.<string,*>} JSON object\n                             */\n                            AdditiveSharingTensor.prototype.toJSON = function toJSON() {\n                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                            };\n\n                            return AdditiveSharingTensor;\n                        })();\n\n                        v1.FixedPrecisionTensor = (function() {\n\n                            /**\n                             * Properties of a FixedPrecisionTensor.\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1\n                             * @interface IFixedPrecisionTensor\n                             * @property {syft_proto.types.syft.v1.IId|null} [id] FixedPrecisionTensor id\n                             * @property {string|null} [field] FixedPrecisionTensor field\n                             * @property {string|null} [dtype] FixedPrecisionTensor dtype\n                             * @property {number|null} [base] FixedPrecisionTensor base\n                             * @property {number|null} [kappa] FixedPrecisionTensor kappa\n                             * @property {number|null} [precision_fractional] FixedPrecisionTensor precision_fractional\n                             * @property {Array.<string>|null} [tags] FixedPrecisionTensor tags\n                             * @property {string|null} [description] FixedPrecisionTensor description\n                             * @property {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor|null} [child] FixedPrecisionTensor child\n                             */\n\n                            /**\n                             * Constructs a new FixedPrecisionTensor.\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1\n                             * @classdesc Represents a FixedPrecisionTensor.\n                             * @implements IFixedPrecisionTensor\n                             * @constructor\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IFixedPrecisionTensor=} [properties] Properties to set\n                             */\n                            function FixedPrecisionTensor(properties) {\n                                this.tags = [];\n                                if (properties)\n                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                        if (properties[keys[i]] != null)\n                                            this[keys[i]] = properties[keys[i]];\n                            }\n\n                            /**\n                             * FixedPrecisionTensor id.\n                             * @member {syft_proto.types.syft.v1.IId|null|undefined} id\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.id = null;\n\n                            /**\n                             * FixedPrecisionTensor field.\n                             * @member {string} field\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.field = \"\";\n\n                            /**\n                             * FixedPrecisionTensor dtype.\n                             * @member {string} dtype\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.dtype = \"\";\n\n                            /**\n                             * FixedPrecisionTensor base.\n                             * @member {number} base\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.base = 0;\n\n                            /**\n                             * FixedPrecisionTensor kappa.\n                             * @member {number} kappa\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.kappa = 0;\n\n                            /**\n                             * FixedPrecisionTensor precision_fractional.\n                             * @member {number} precision_fractional\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.precision_fractional = 0;\n\n                            /**\n                             * FixedPrecisionTensor tags.\n                             * @member {Array.<string>} tags\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.tags = $util.emptyArray;\n\n                            /**\n                             * FixedPrecisionTensor description.\n                             * @member {string} description\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.description = \"\";\n\n                            /**\n                             * FixedPrecisionTensor child.\n                             * @member {syft_proto.frameworks.torch.tensors.interpreters.v1.IAdditiveSharingTensor|null|undefined} child\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             */\n                            FixedPrecisionTensor.prototype.child = null;\n\n                            /**\n                             * Creates a new FixedPrecisionTensor instance using the specified properties.\n                             * @function create\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IFixedPrecisionTensor=} [properties] Properties to set\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor} FixedPrecisionTensor instance\n                             */\n                            FixedPrecisionTensor.create = function create(properties) {\n                                return new FixedPrecisionTensor(properties);\n                            };\n\n                            /**\n                             * Encodes the specified FixedPrecisionTensor message. Does not implicitly {@link syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor.verify|verify} messages.\n                             * @function encode\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IFixedPrecisionTensor} message FixedPrecisionTensor message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            FixedPrecisionTensor.encode = function encode(message, writer) {\n                                if (!writer)\n                                    writer = $Writer.create();\n                                if (message.id != null && message.hasOwnProperty(\"id\"))\n                                    $root.syft_proto.types.syft.v1.Id.encode(message.id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                                if (message.field != null && message.hasOwnProperty(\"field\"))\n                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.field);\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.dtype);\n                                if (message.base != null && message.hasOwnProperty(\"base\"))\n                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.base);\n                                if (message.kappa != null && message.hasOwnProperty(\"kappa\"))\n                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.kappa);\n                                if (message.precision_fractional != null && message.hasOwnProperty(\"precision_fractional\"))\n                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.precision_fractional);\n                                if (message.tags != null && message.tags.length)\n                                    for (var i = 0; i < message.tags.length; ++i)\n                                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.tags[i]);\n                                if (message.description != null && message.hasOwnProperty(\"description\"))\n                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.description);\n                                if (message.child != null && message.hasOwnProperty(\"child\"))\n                                    $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.encode(message.child, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                                return writer;\n                            };\n\n                            /**\n                             * Encodes the specified FixedPrecisionTensor message, length delimited. Does not implicitly {@link syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor.verify|verify} messages.\n                             * @function encodeDelimited\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.IFixedPrecisionTensor} message FixedPrecisionTensor message or plain object to encode\n                             * @param {$protobuf.Writer} [writer] Writer to encode to\n                             * @returns {$protobuf.Writer} Writer\n                             */\n                            FixedPrecisionTensor.encodeDelimited = function encodeDelimited(message, writer) {\n                                return this.encode(message, writer).ldelim();\n                            };\n\n                            /**\n                             * Decodes a FixedPrecisionTensor message from the specified reader or buffer.\n                             * @function decode\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @param {number} [length] Message length if known beforehand\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor} FixedPrecisionTensor\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            FixedPrecisionTensor.decode = function decode(reader, length) {\n                                if (!(reader instanceof $Reader))\n                                    reader = $Reader.create(reader);\n                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor();\n                                while (reader.pos < end) {\n                                    var tag = reader.uint32();\n                                    switch (tag >>> 3) {\n                                    case 1:\n                                        message.id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                                        break;\n                                    case 3:\n                                        message.field = reader.string();\n                                        break;\n                                    case 4:\n                                        message.dtype = reader.string();\n                                        break;\n                                    case 5:\n                                        message.base = reader.int32();\n                                        break;\n                                    case 6:\n                                        message.kappa = reader.int32();\n                                        break;\n                                    case 7:\n                                        message.precision_fractional = reader.int32();\n                                        break;\n                                    case 8:\n                                        if (!(message.tags && message.tags.length))\n                                            message.tags = [];\n                                        message.tags.push(reader.string());\n                                        break;\n                                    case 9:\n                                        message.description = reader.string();\n                                        break;\n                                    case 10:\n                                        message.child = $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.decode(reader, reader.uint32());\n                                        break;\n                                    default:\n                                        reader.skipType(tag & 7);\n                                        break;\n                                    }\n                                }\n                                return message;\n                            };\n\n                            /**\n                             * Decodes a FixedPrecisionTensor message from the specified reader or buffer, length delimited.\n                             * @function decodeDelimited\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor} FixedPrecisionTensor\n                             * @throws {Error} If the payload is not a reader or valid buffer\n                             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                             */\n                            FixedPrecisionTensor.decodeDelimited = function decodeDelimited(reader) {\n                                if (!(reader instanceof $Reader))\n                                    reader = new $Reader(reader);\n                                return this.decode(reader, reader.uint32());\n                            };\n\n                            /**\n                             * Verifies a FixedPrecisionTensor message.\n                             * @function verify\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {Object.<string,*>} message Plain object to verify\n                             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                             */\n                            FixedPrecisionTensor.verify = function verify(message) {\n                                if (typeof message !== \"object\" || message === null)\n                                    return \"object expected\";\n                                if (message.id != null && message.hasOwnProperty(\"id\")) {\n                                    var error = $root.syft_proto.types.syft.v1.Id.verify(message.id);\n                                    if (error)\n                                        return \"id.\" + error;\n                                }\n                                if (message.field != null && message.hasOwnProperty(\"field\"))\n                                    if (!$util.isString(message.field))\n                                        return \"field: string expected\";\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    if (!$util.isString(message.dtype))\n                                        return \"dtype: string expected\";\n                                if (message.base != null && message.hasOwnProperty(\"base\"))\n                                    if (!$util.isInteger(message.base))\n                                        return \"base: integer expected\";\n                                if (message.kappa != null && message.hasOwnProperty(\"kappa\"))\n                                    if (!$util.isInteger(message.kappa))\n                                        return \"kappa: integer expected\";\n                                if (message.precision_fractional != null && message.hasOwnProperty(\"precision_fractional\"))\n                                    if (!$util.isInteger(message.precision_fractional))\n                                        return \"precision_fractional: integer expected\";\n                                if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                                    if (!Array.isArray(message.tags))\n                                        return \"tags: array expected\";\n                                    for (var i = 0; i < message.tags.length; ++i)\n                                        if (!$util.isString(message.tags[i]))\n                                            return \"tags: string[] expected\";\n                                }\n                                if (message.description != null && message.hasOwnProperty(\"description\"))\n                                    if (!$util.isString(message.description))\n                                        return \"description: string expected\";\n                                if (message.child != null && message.hasOwnProperty(\"child\")) {\n                                    var error = $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.verify(message.child);\n                                    if (error)\n                                        return \"child.\" + error;\n                                }\n                                return null;\n                            };\n\n                            /**\n                             * Creates a FixedPrecisionTensor message from a plain object. Also converts values to their respective internal types.\n                             * @function fromObject\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {Object.<string,*>} object Plain object\n                             * @returns {syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor} FixedPrecisionTensor\n                             */\n                            FixedPrecisionTensor.fromObject = function fromObject(object) {\n                                if (object instanceof $root.syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor)\n                                    return object;\n                                var message = new $root.syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor();\n                                if (object.id != null) {\n                                    if (typeof object.id !== \"object\")\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor.id: object expected\");\n                                    message.id = $root.syft_proto.types.syft.v1.Id.fromObject(object.id);\n                                }\n                                if (object.field != null)\n                                    message.field = String(object.field);\n                                if (object.dtype != null)\n                                    message.dtype = String(object.dtype);\n                                if (object.base != null)\n                                    message.base = object.base | 0;\n                                if (object.kappa != null)\n                                    message.kappa = object.kappa | 0;\n                                if (object.precision_fractional != null)\n                                    message.precision_fractional = object.precision_fractional | 0;\n                                if (object.tags) {\n                                    if (!Array.isArray(object.tags))\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor.tags: array expected\");\n                                    message.tags = [];\n                                    for (var i = 0; i < object.tags.length; ++i)\n                                        message.tags[i] = String(object.tags[i]);\n                                }\n                                if (object.description != null)\n                                    message.description = String(object.description);\n                                if (object.child != null) {\n                                    if (typeof object.child !== \"object\")\n                                        throw TypeError(\".syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor.child: object expected\");\n                                    message.child = $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.fromObject(object.child);\n                                }\n                                return message;\n                            };\n\n                            /**\n                             * Creates a plain object from a FixedPrecisionTensor message. Also converts values to other types if specified.\n                             * @function toObject\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @static\n                             * @param {syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor} message FixedPrecisionTensor\n                             * @param {$protobuf.IConversionOptions} [options] Conversion options\n                             * @returns {Object.<string,*>} Plain object\n                             */\n                            FixedPrecisionTensor.toObject = function toObject(message, options) {\n                                if (!options)\n                                    options = {};\n                                var object = {};\n                                if (options.arrays || options.defaults)\n                                    object.tags = [];\n                                if (options.defaults) {\n                                    object.id = null;\n                                    object.field = \"\";\n                                    object.dtype = \"\";\n                                    object.base = 0;\n                                    object.kappa = 0;\n                                    object.precision_fractional = 0;\n                                    object.description = \"\";\n                                    object.child = null;\n                                }\n                                if (message.id != null && message.hasOwnProperty(\"id\"))\n                                    object.id = $root.syft_proto.types.syft.v1.Id.toObject(message.id, options);\n                                if (message.field != null && message.hasOwnProperty(\"field\"))\n                                    object.field = message.field;\n                                if (message.dtype != null && message.hasOwnProperty(\"dtype\"))\n                                    object.dtype = message.dtype;\n                                if (message.base != null && message.hasOwnProperty(\"base\"))\n                                    object.base = message.base;\n                                if (message.kappa != null && message.hasOwnProperty(\"kappa\"))\n                                    object.kappa = message.kappa;\n                                if (message.precision_fractional != null && message.hasOwnProperty(\"precision_fractional\"))\n                                    object.precision_fractional = message.precision_fractional;\n                                if (message.tags && message.tags.length) {\n                                    object.tags = [];\n                                    for (var j = 0; j < message.tags.length; ++j)\n                                        object.tags[j] = message.tags[j];\n                                }\n                                if (message.description != null && message.hasOwnProperty(\"description\"))\n                                    object.description = message.description;\n                                if (message.child != null && message.hasOwnProperty(\"child\"))\n                                    object.child = $root.syft_proto.frameworks.torch.tensors.interpreters.v1.AdditiveSharingTensor.toObject(message.child, options);\n                                return object;\n                            };\n\n                            /**\n                             * Converts this FixedPrecisionTensor to JSON.\n                             * @function toJSON\n                             * @memberof syft_proto.frameworks.torch.tensors.interpreters.v1.FixedPrecisionTensor\n                             * @instance\n                             * @returns {Object.<string,*>} JSON object\n                             */\n                            FixedPrecisionTensor.prototype.toJSON = function toJSON() {\n                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                            };\n\n                            return FixedPrecisionTensor;\n                        })();\n\n                        return v1;\n                    })();\n\n                    return interpreters;\n                })();\n\n                return tensors;\n            })();\n\n            return torch;\n        })();\n\n        return frameworks;\n    })();\n\n    syft_proto.messaging = (function() {\n\n        /**\n         * Namespace messaging.\n         * @memberof syft_proto\n         * @namespace\n         */\n        var messaging = {};\n\n        messaging.v1 = (function() {\n\n            /**\n             * Namespace v1.\n             * @memberof syft_proto.messaging\n             * @namespace\n             */\n            var v1 = {};\n\n            v1.String = (function() {\n\n                /**\n                 * Properties of a String.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IString\n                 * @property {string|null} [child] String child\n                 * @property {Array.<string>|null} [tags] String tags\n                 * @property {string|null} [description] String description\n                 */\n\n                /**\n                 * Constructs a new String.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a String.\n                 * @implements IString\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IString=} [properties] Properties to set\n                 */\n                function String(properties) {\n                    this.tags = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * String child.\n                 * @member {string} child\n                 * @memberof syft_proto.messaging.v1.String\n                 * @instance\n                 */\n                String.prototype.child = \"\";\n\n                /**\n                 * String tags.\n                 * @member {Array.<string>} tags\n                 * @memberof syft_proto.messaging.v1.String\n                 * @instance\n                 */\n                String.prototype.tags = $util.emptyArray;\n\n                /**\n                 * String description.\n                 * @member {string} description\n                 * @memberof syft_proto.messaging.v1.String\n                 * @instance\n                 */\n                String.prototype.description = \"\";\n\n                /**\n                 * Creates a new String instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {syft_proto.messaging.v1.IString=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.String} String instance\n                 */\n                String.create = function create(properties) {\n                    return new String(properties);\n                };\n\n                /**\n                 * Encodes the specified String message. Does not implicitly {@link syft_proto.messaging.v1.String.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {syft_proto.messaging.v1.IString} message String message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                String.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.child != null && message.hasOwnProperty(\"child\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.child);\n                    if (message.tags != null && message.tags.length)\n                        for (var i = 0; i < message.tags.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.tags[i]);\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified String message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.String.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {syft_proto.messaging.v1.IString} message String message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                String.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a String message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.String} String\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                String.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.String();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.child = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.tags && message.tags.length))\n                                message.tags = [];\n                            message.tags.push(reader.string());\n                            break;\n                        case 3:\n                            message.description = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a String message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.String} String\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                String.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a String message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                String.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.child != null && message.hasOwnProperty(\"child\"))\n                        if (!$util.isString(message.child))\n                            return \"child: string expected\";\n                    if (message.tags != null && message.hasOwnProperty(\"tags\")) {\n                        if (!Array.isArray(message.tags))\n                            return \"tags: array expected\";\n                        for (var i = 0; i < message.tags.length; ++i)\n                            if (!$util.isString(message.tags[i]))\n                                return \"tags: string[] expected\";\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        if (!$util.isString(message.description))\n                            return \"description: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a String message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.String} String\n                 */\n                String.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.String)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.String();\n                    if (object.child != null)\n                        message.child = String(object.child);\n                    if (object.tags) {\n                        if (!Array.isArray(object.tags))\n                            throw TypeError(\".syft_proto.messaging.v1.String.tags: array expected\");\n                        message.tags = [];\n                        for (var i = 0; i < object.tags.length; ++i)\n                            message.tags[i] = String(object.tags[i]);\n                    }\n                    if (object.description != null)\n                        message.description = String(object.description);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a String message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.String\n                 * @static\n                 * @param {syft_proto.messaging.v1.String} message String\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                String.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.tags = [];\n                    if (options.defaults) {\n                        object.child = \"\";\n                        object.description = \"\";\n                    }\n                    if (message.child != null && message.hasOwnProperty(\"child\"))\n                        object.child = message.child;\n                    if (message.tags && message.tags.length) {\n                        object.tags = [];\n                        for (var j = 0; j < message.tags.length; ++j)\n                            object.tags[j] = message.tags[j];\n                    }\n                    if (message.description != null && message.hasOwnProperty(\"description\"))\n                        object.description = message.description;\n                    return object;\n                };\n\n                /**\n                 * Converts this String to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.String\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                String.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return String;\n            })();\n\n            v1.SyftMessage = (function() {\n\n                /**\n                 * Properties of a SyftMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface ISyftMessage\n                 * @property {google.protobuf.IEmpty|null} [contents_empty_msg] SyftMessage contents_empty_msg\n                 * @property {syft_proto.messaging.v1.IForceObjectDeleteMessage|null} [contents_delete_msg] SyftMessage contents_delete_msg\n                 * @property {syft_proto.messaging.v1.IGetShapeMessage|null} [contents_get_shape_msg] SyftMessage contents_get_shape_msg\n                 * @property {syft_proto.messaging.v1.IIsNoneMessage|null} [contents_is_none_msg] SyftMessage contents_is_none_msg\n                 * @property {syft_proto.messaging.v1.IObjectMessage|null} [contents_object_msg] SyftMessage contents_object_msg\n                 * @property {syft_proto.messaging.v1.IObjectRequestMessage|null} [contents_object_request_msg] SyftMessage contents_object_request_msg\n                 * @property {syft_proto.messaging.v1.ITensorCommandMessage|null} [contents_tensor_cmd_msg] SyftMessage contents_tensor_cmd_msg\n                 * @property {syft_proto.messaging.v1.IPlanCommandMessage|null} [contents_plan_cmd_msg] SyftMessage contents_plan_cmd_msg\n                 * @property {syft_proto.messaging.v1.IWorkerCommandMessage|null} [contents_worker_cmd_msg] SyftMessage contents_worker_cmd_msg\n                 * @property {syft_proto.messaging.v1.ISearchMessage|null} [contents_search_msg] SyftMessage contents_search_msg\n                 */\n\n                /**\n                 * Constructs a new SyftMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a SyftMessage.\n                 * @implements ISyftMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.ISyftMessage=} [properties] Properties to set\n                 */\n                function SyftMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * SyftMessage contents_empty_msg.\n                 * @member {google.protobuf.IEmpty|null|undefined} contents_empty_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_empty_msg = null;\n\n                /**\n                 * SyftMessage contents_delete_msg.\n                 * @member {syft_proto.messaging.v1.IForceObjectDeleteMessage|null|undefined} contents_delete_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_delete_msg = null;\n\n                /**\n                 * SyftMessage contents_get_shape_msg.\n                 * @member {syft_proto.messaging.v1.IGetShapeMessage|null|undefined} contents_get_shape_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_get_shape_msg = null;\n\n                /**\n                 * SyftMessage contents_is_none_msg.\n                 * @member {syft_proto.messaging.v1.IIsNoneMessage|null|undefined} contents_is_none_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_is_none_msg = null;\n\n                /**\n                 * SyftMessage contents_object_msg.\n                 * @member {syft_proto.messaging.v1.IObjectMessage|null|undefined} contents_object_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_object_msg = null;\n\n                /**\n                 * SyftMessage contents_object_request_msg.\n                 * @member {syft_proto.messaging.v1.IObjectRequestMessage|null|undefined} contents_object_request_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_object_request_msg = null;\n\n                /**\n                 * SyftMessage contents_tensor_cmd_msg.\n                 * @member {syft_proto.messaging.v1.ITensorCommandMessage|null|undefined} contents_tensor_cmd_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_tensor_cmd_msg = null;\n\n                /**\n                 * SyftMessage contents_plan_cmd_msg.\n                 * @member {syft_proto.messaging.v1.IPlanCommandMessage|null|undefined} contents_plan_cmd_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_plan_cmd_msg = null;\n\n                /**\n                 * SyftMessage contents_worker_cmd_msg.\n                 * @member {syft_proto.messaging.v1.IWorkerCommandMessage|null|undefined} contents_worker_cmd_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_worker_cmd_msg = null;\n\n                /**\n                 * SyftMessage contents_search_msg.\n                 * @member {syft_proto.messaging.v1.ISearchMessage|null|undefined} contents_search_msg\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                SyftMessage.prototype.contents_search_msg = null;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * SyftMessage contents.\n                 * @member {\"contents_empty_msg\"|\"contents_delete_msg\"|\"contents_get_shape_msg\"|\"contents_is_none_msg\"|\"contents_object_msg\"|\"contents_object_request_msg\"|\"contents_tensor_cmd_msg\"|\"contents_plan_cmd_msg\"|\"contents_worker_cmd_msg\"|\"contents_search_msg\"|undefined} contents\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 */\n                Object.defineProperty(SyftMessage.prototype, \"contents\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"contents_empty_msg\", \"contents_delete_msg\", \"contents_get_shape_msg\", \"contents_is_none_msg\", \"contents_object_msg\", \"contents_object_request_msg\", \"contents_tensor_cmd_msg\", \"contents_plan_cmd_msg\", \"contents_worker_cmd_msg\", \"contents_search_msg\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new SyftMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISyftMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.SyftMessage} SyftMessage instance\n                 */\n                SyftMessage.create = function create(properties) {\n                    return new SyftMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified SyftMessage message. Does not implicitly {@link syft_proto.messaging.v1.SyftMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISyftMessage} message SyftMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SyftMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.contents_empty_msg != null && message.hasOwnProperty(\"contents_empty_msg\"))\n                        $root.google.protobuf.Empty.encode(message.contents_empty_msg, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.contents_delete_msg != null && message.hasOwnProperty(\"contents_delete_msg\"))\n                        $root.syft_proto.messaging.v1.ForceObjectDeleteMessage.encode(message.contents_delete_msg, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    if (message.contents_get_shape_msg != null && message.hasOwnProperty(\"contents_get_shape_msg\"))\n                        $root.syft_proto.messaging.v1.GetShapeMessage.encode(message.contents_get_shape_msg, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                    if (message.contents_is_none_msg != null && message.hasOwnProperty(\"contents_is_none_msg\"))\n                        $root.syft_proto.messaging.v1.IsNoneMessage.encode(message.contents_is_none_msg, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    if (message.contents_object_msg != null && message.hasOwnProperty(\"contents_object_msg\"))\n                        $root.syft_proto.messaging.v1.ObjectMessage.encode(message.contents_object_msg, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                    if (message.contents_object_request_msg != null && message.hasOwnProperty(\"contents_object_request_msg\"))\n                        $root.syft_proto.messaging.v1.ObjectRequestMessage.encode(message.contents_object_request_msg, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                    if (message.contents_tensor_cmd_msg != null && message.hasOwnProperty(\"contents_tensor_cmd_msg\"))\n                        $root.syft_proto.messaging.v1.TensorCommandMessage.encode(message.contents_tensor_cmd_msg, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                    if (message.contents_plan_cmd_msg != null && message.hasOwnProperty(\"contents_plan_cmd_msg\"))\n                        $root.syft_proto.messaging.v1.PlanCommandMessage.encode(message.contents_plan_cmd_msg, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                    if (message.contents_worker_cmd_msg != null && message.hasOwnProperty(\"contents_worker_cmd_msg\"))\n                        $root.syft_proto.messaging.v1.WorkerCommandMessage.encode(message.contents_worker_cmd_msg, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                    if (message.contents_search_msg != null && message.hasOwnProperty(\"contents_search_msg\"))\n                        $root.syft_proto.messaging.v1.SearchMessage.encode(message.contents_search_msg, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified SyftMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.SyftMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISyftMessage} message SyftMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SyftMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a SyftMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.SyftMessage} SyftMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SyftMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.SyftMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.contents_empty_msg = $root.google.protobuf.Empty.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.contents_delete_msg = $root.syft_proto.messaging.v1.ForceObjectDeleteMessage.decode(reader, reader.uint32());\n                            break;\n                        case 3:\n                            message.contents_get_shape_msg = $root.syft_proto.messaging.v1.GetShapeMessage.decode(reader, reader.uint32());\n                            break;\n                        case 4:\n                            message.contents_is_none_msg = $root.syft_proto.messaging.v1.IsNoneMessage.decode(reader, reader.uint32());\n                            break;\n                        case 5:\n                            message.contents_object_msg = $root.syft_proto.messaging.v1.ObjectMessage.decode(reader, reader.uint32());\n                            break;\n                        case 6:\n                            message.contents_object_request_msg = $root.syft_proto.messaging.v1.ObjectRequestMessage.decode(reader, reader.uint32());\n                            break;\n                        case 7:\n                            message.contents_tensor_cmd_msg = $root.syft_proto.messaging.v1.TensorCommandMessage.decode(reader, reader.uint32());\n                            break;\n                        case 8:\n                            message.contents_plan_cmd_msg = $root.syft_proto.messaging.v1.PlanCommandMessage.decode(reader, reader.uint32());\n                            break;\n                        case 9:\n                            message.contents_worker_cmd_msg = $root.syft_proto.messaging.v1.WorkerCommandMessage.decode(reader, reader.uint32());\n                            break;\n                        case 10:\n                            message.contents_search_msg = $root.syft_proto.messaging.v1.SearchMessage.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a SyftMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.SyftMessage} SyftMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SyftMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a SyftMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                SyftMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.contents_empty_msg != null && message.hasOwnProperty(\"contents_empty_msg\")) {\n                        properties.contents = 1;\n                        {\n                            var error = $root.google.protobuf.Empty.verify(message.contents_empty_msg);\n                            if (error)\n                                return \"contents_empty_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_delete_msg != null && message.hasOwnProperty(\"contents_delete_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.ForceObjectDeleteMessage.verify(message.contents_delete_msg);\n                            if (error)\n                                return \"contents_delete_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_get_shape_msg != null && message.hasOwnProperty(\"contents_get_shape_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.GetShapeMessage.verify(message.contents_get_shape_msg);\n                            if (error)\n                                return \"contents_get_shape_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_is_none_msg != null && message.hasOwnProperty(\"contents_is_none_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.IsNoneMessage.verify(message.contents_is_none_msg);\n                            if (error)\n                                return \"contents_is_none_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_object_msg != null && message.hasOwnProperty(\"contents_object_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.ObjectMessage.verify(message.contents_object_msg);\n                            if (error)\n                                return \"contents_object_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_object_request_msg != null && message.hasOwnProperty(\"contents_object_request_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.ObjectRequestMessage.verify(message.contents_object_request_msg);\n                            if (error)\n                                return \"contents_object_request_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_tensor_cmd_msg != null && message.hasOwnProperty(\"contents_tensor_cmd_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.TensorCommandMessage.verify(message.contents_tensor_cmd_msg);\n                            if (error)\n                                return \"contents_tensor_cmd_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_plan_cmd_msg != null && message.hasOwnProperty(\"contents_plan_cmd_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.PlanCommandMessage.verify(message.contents_plan_cmd_msg);\n                            if (error)\n                                return \"contents_plan_cmd_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_worker_cmd_msg != null && message.hasOwnProperty(\"contents_worker_cmd_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.WorkerCommandMessage.verify(message.contents_worker_cmd_msg);\n                            if (error)\n                                return \"contents_worker_cmd_msg.\" + error;\n                        }\n                    }\n                    if (message.contents_search_msg != null && message.hasOwnProperty(\"contents_search_msg\")) {\n                        if (properties.contents === 1)\n                            return \"contents: multiple values\";\n                        properties.contents = 1;\n                        {\n                            var error = $root.syft_proto.messaging.v1.SearchMessage.verify(message.contents_search_msg);\n                            if (error)\n                                return \"contents_search_msg.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a SyftMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.SyftMessage} SyftMessage\n                 */\n                SyftMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.SyftMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.SyftMessage();\n                    if (object.contents_empty_msg != null) {\n                        if (typeof object.contents_empty_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_empty_msg: object expected\");\n                        message.contents_empty_msg = $root.google.protobuf.Empty.fromObject(object.contents_empty_msg);\n                    }\n                    if (object.contents_delete_msg != null) {\n                        if (typeof object.contents_delete_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_delete_msg: object expected\");\n                        message.contents_delete_msg = $root.syft_proto.messaging.v1.ForceObjectDeleteMessage.fromObject(object.contents_delete_msg);\n                    }\n                    if (object.contents_get_shape_msg != null) {\n                        if (typeof object.contents_get_shape_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_get_shape_msg: object expected\");\n                        message.contents_get_shape_msg = $root.syft_proto.messaging.v1.GetShapeMessage.fromObject(object.contents_get_shape_msg);\n                    }\n                    if (object.contents_is_none_msg != null) {\n                        if (typeof object.contents_is_none_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_is_none_msg: object expected\");\n                        message.contents_is_none_msg = $root.syft_proto.messaging.v1.IsNoneMessage.fromObject(object.contents_is_none_msg);\n                    }\n                    if (object.contents_object_msg != null) {\n                        if (typeof object.contents_object_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_object_msg: object expected\");\n                        message.contents_object_msg = $root.syft_proto.messaging.v1.ObjectMessage.fromObject(object.contents_object_msg);\n                    }\n                    if (object.contents_object_request_msg != null) {\n                        if (typeof object.contents_object_request_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_object_request_msg: object expected\");\n                        message.contents_object_request_msg = $root.syft_proto.messaging.v1.ObjectRequestMessage.fromObject(object.contents_object_request_msg);\n                    }\n                    if (object.contents_tensor_cmd_msg != null) {\n                        if (typeof object.contents_tensor_cmd_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_tensor_cmd_msg: object expected\");\n                        message.contents_tensor_cmd_msg = $root.syft_proto.messaging.v1.TensorCommandMessage.fromObject(object.contents_tensor_cmd_msg);\n                    }\n                    if (object.contents_plan_cmd_msg != null) {\n                        if (typeof object.contents_plan_cmd_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_plan_cmd_msg: object expected\");\n                        message.contents_plan_cmd_msg = $root.syft_proto.messaging.v1.PlanCommandMessage.fromObject(object.contents_plan_cmd_msg);\n                    }\n                    if (object.contents_worker_cmd_msg != null) {\n                        if (typeof object.contents_worker_cmd_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_worker_cmd_msg: object expected\");\n                        message.contents_worker_cmd_msg = $root.syft_proto.messaging.v1.WorkerCommandMessage.fromObject(object.contents_worker_cmd_msg);\n                    }\n                    if (object.contents_search_msg != null) {\n                        if (typeof object.contents_search_msg !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.SyftMessage.contents_search_msg: object expected\");\n                        message.contents_search_msg = $root.syft_proto.messaging.v1.SearchMessage.fromObject(object.contents_search_msg);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a SyftMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.SyftMessage} message SyftMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                SyftMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (message.contents_empty_msg != null && message.hasOwnProperty(\"contents_empty_msg\")) {\n                        object.contents_empty_msg = $root.google.protobuf.Empty.toObject(message.contents_empty_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_empty_msg\";\n                    }\n                    if (message.contents_delete_msg != null && message.hasOwnProperty(\"contents_delete_msg\")) {\n                        object.contents_delete_msg = $root.syft_proto.messaging.v1.ForceObjectDeleteMessage.toObject(message.contents_delete_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_delete_msg\";\n                    }\n                    if (message.contents_get_shape_msg != null && message.hasOwnProperty(\"contents_get_shape_msg\")) {\n                        object.contents_get_shape_msg = $root.syft_proto.messaging.v1.GetShapeMessage.toObject(message.contents_get_shape_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_get_shape_msg\";\n                    }\n                    if (message.contents_is_none_msg != null && message.hasOwnProperty(\"contents_is_none_msg\")) {\n                        object.contents_is_none_msg = $root.syft_proto.messaging.v1.IsNoneMessage.toObject(message.contents_is_none_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_is_none_msg\";\n                    }\n                    if (message.contents_object_msg != null && message.hasOwnProperty(\"contents_object_msg\")) {\n                        object.contents_object_msg = $root.syft_proto.messaging.v1.ObjectMessage.toObject(message.contents_object_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_object_msg\";\n                    }\n                    if (message.contents_object_request_msg != null && message.hasOwnProperty(\"contents_object_request_msg\")) {\n                        object.contents_object_request_msg = $root.syft_proto.messaging.v1.ObjectRequestMessage.toObject(message.contents_object_request_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_object_request_msg\";\n                    }\n                    if (message.contents_tensor_cmd_msg != null && message.hasOwnProperty(\"contents_tensor_cmd_msg\")) {\n                        object.contents_tensor_cmd_msg = $root.syft_proto.messaging.v1.TensorCommandMessage.toObject(message.contents_tensor_cmd_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_tensor_cmd_msg\";\n                    }\n                    if (message.contents_plan_cmd_msg != null && message.hasOwnProperty(\"contents_plan_cmd_msg\")) {\n                        object.contents_plan_cmd_msg = $root.syft_proto.messaging.v1.PlanCommandMessage.toObject(message.contents_plan_cmd_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_plan_cmd_msg\";\n                    }\n                    if (message.contents_worker_cmd_msg != null && message.hasOwnProperty(\"contents_worker_cmd_msg\")) {\n                        object.contents_worker_cmd_msg = $root.syft_proto.messaging.v1.WorkerCommandMessage.toObject(message.contents_worker_cmd_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_worker_cmd_msg\";\n                    }\n                    if (message.contents_search_msg != null && message.hasOwnProperty(\"contents_search_msg\")) {\n                        object.contents_search_msg = $root.syft_proto.messaging.v1.SearchMessage.toObject(message.contents_search_msg, options);\n                        if (options.oneofs)\n                            object.contents = \"contents_search_msg\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this SyftMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.SyftMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                SyftMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return SyftMessage;\n            })();\n\n            v1.IsNoneMessage = (function() {\n\n                /**\n                 * Properties of an IsNoneMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IIsNoneMessage\n                 * @property {syft_proto.types.syft.v1.IId|null} [object_id] IsNoneMessage object_id\n                 */\n\n                /**\n                 * Constructs a new IsNoneMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents an IsNoneMessage.\n                 * @implements IIsNoneMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IIsNoneMessage=} [properties] Properties to set\n                 */\n                function IsNoneMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * IsNoneMessage object_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @instance\n                 */\n                IsNoneMessage.prototype.object_id = null;\n\n                /**\n                 * Creates a new IsNoneMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IIsNoneMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.IsNoneMessage} IsNoneMessage instance\n                 */\n                IsNoneMessage.create = function create(properties) {\n                    return new IsNoneMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified IsNoneMessage message. Does not implicitly {@link syft_proto.messaging.v1.IsNoneMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IIsNoneMessage} message IsNoneMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                IsNoneMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified IsNoneMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.IsNoneMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IIsNoneMessage} message IsNoneMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                IsNoneMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an IsNoneMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.IsNoneMessage} IsNoneMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                IsNoneMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.IsNoneMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an IsNoneMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.IsNoneMessage} IsNoneMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                IsNoneMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an IsNoneMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                IsNoneMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                        if (error)\n                            return \"object_id.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates an IsNoneMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.IsNoneMessage} IsNoneMessage\n                 */\n                IsNoneMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.IsNoneMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.IsNoneMessage();\n                    if (object.object_id != null) {\n                        if (typeof object.object_id !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.IsNoneMessage.object_id: object expected\");\n                        message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an IsNoneMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IsNoneMessage} message IsNoneMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                IsNoneMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.object_id = null;\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this IsNoneMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.IsNoneMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                IsNoneMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return IsNoneMessage;\n            })();\n\n            v1.ObjectMessage = (function() {\n\n                /**\n                 * Properties of an ObjectMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IObjectMessage\n                 * @property {syft_proto.types.torch.v1.ITorchTensor|null} [tensor] ObjectMessage tensor\n                 */\n\n                /**\n                 * Constructs a new ObjectMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents an ObjectMessage.\n                 * @implements IObjectMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IObjectMessage=} [properties] Properties to set\n                 */\n                function ObjectMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ObjectMessage tensor.\n                 * @member {syft_proto.types.torch.v1.ITorchTensor|null|undefined} tensor\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @instance\n                 */\n                ObjectMessage.prototype.tensor = null;\n\n                /**\n                 * Creates a new ObjectMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.ObjectMessage} ObjectMessage instance\n                 */\n                ObjectMessage.create = function create(properties) {\n                    return new ObjectMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified ObjectMessage message. Does not implicitly {@link syft_proto.messaging.v1.ObjectMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectMessage} message ObjectMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ObjectMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.tensor != null && message.hasOwnProperty(\"tensor\"))\n                        $root.syft_proto.types.torch.v1.TorchTensor.encode(message.tensor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ObjectMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.ObjectMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectMessage} message ObjectMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ObjectMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an ObjectMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.ObjectMessage} ObjectMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ObjectMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.ObjectMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.tensor = $root.syft_proto.types.torch.v1.TorchTensor.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an ObjectMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.ObjectMessage} ObjectMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ObjectMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an ObjectMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ObjectMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.tensor != null && message.hasOwnProperty(\"tensor\")) {\n                        var error = $root.syft_proto.types.torch.v1.TorchTensor.verify(message.tensor);\n                        if (error)\n                            return \"tensor.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates an ObjectMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.ObjectMessage} ObjectMessage\n                 */\n                ObjectMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.ObjectMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.ObjectMessage();\n                    if (object.tensor != null) {\n                        if (typeof object.tensor !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.ObjectMessage.tensor: object expected\");\n                        message.tensor = $root.syft_proto.types.torch.v1.TorchTensor.fromObject(object.tensor);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an ObjectMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ObjectMessage} message ObjectMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ObjectMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.tensor = null;\n                    if (message.tensor != null && message.hasOwnProperty(\"tensor\"))\n                        object.tensor = $root.syft_proto.types.torch.v1.TorchTensor.toObject(message.tensor, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this ObjectMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.ObjectMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ObjectMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ObjectMessage;\n            })();\n\n            v1.TensorCommandMessage = (function() {\n\n                /**\n                 * Properties of a TensorCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface ITensorCommandMessage\n                 * @property {syft_proto.execution.v1.IComputationAction|null} [computation] TensorCommandMessage computation\n                 * @property {syft_proto.execution.v1.ICommunicationAction|null} [communication] TensorCommandMessage communication\n                 */\n\n                /**\n                 * Constructs a new TensorCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a TensorCommandMessage.\n                 * @implements ITensorCommandMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.ITensorCommandMessage=} [properties] Properties to set\n                 */\n                function TensorCommandMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * TensorCommandMessage computation.\n                 * @member {syft_proto.execution.v1.IComputationAction|null|undefined} computation\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @instance\n                 */\n                TensorCommandMessage.prototype.computation = null;\n\n                /**\n                 * TensorCommandMessage communication.\n                 * @member {syft_proto.execution.v1.ICommunicationAction|null|undefined} communication\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @instance\n                 */\n                TensorCommandMessage.prototype.communication = null;\n\n                // OneOf field names bound to virtual getters and setters\n                var $oneOfFields;\n\n                /**\n                 * TensorCommandMessage action.\n                 * @member {\"computation\"|\"communication\"|undefined} action\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @instance\n                 */\n                Object.defineProperty(TensorCommandMessage.prototype, \"action\", {\n                    get: $util.oneOfGetter($oneOfFields = [\"computation\", \"communication\"]),\n                    set: $util.oneOfSetter($oneOfFields)\n                });\n\n                /**\n                 * Creates a new TensorCommandMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ITensorCommandMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.TensorCommandMessage} TensorCommandMessage instance\n                 */\n                TensorCommandMessage.create = function create(properties) {\n                    return new TensorCommandMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified TensorCommandMessage message. Does not implicitly {@link syft_proto.messaging.v1.TensorCommandMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ITensorCommandMessage} message TensorCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                TensorCommandMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.computation != null && message.hasOwnProperty(\"computation\"))\n                        $root.syft_proto.execution.v1.ComputationAction.encode(message.computation, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.communication != null && message.hasOwnProperty(\"communication\"))\n                        $root.syft_proto.execution.v1.CommunicationAction.encode(message.communication, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified TensorCommandMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.TensorCommandMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ITensorCommandMessage} message TensorCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                TensorCommandMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a TensorCommandMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.TensorCommandMessage} TensorCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                TensorCommandMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.TensorCommandMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.computation = $root.syft_proto.execution.v1.ComputationAction.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.communication = $root.syft_proto.execution.v1.CommunicationAction.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a TensorCommandMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.TensorCommandMessage} TensorCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                TensorCommandMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a TensorCommandMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                TensorCommandMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    var properties = {};\n                    if (message.computation != null && message.hasOwnProperty(\"computation\")) {\n                        properties.action = 1;\n                        {\n                            var error = $root.syft_proto.execution.v1.ComputationAction.verify(message.computation);\n                            if (error)\n                                return \"computation.\" + error;\n                        }\n                    }\n                    if (message.communication != null && message.hasOwnProperty(\"communication\")) {\n                        if (properties.action === 1)\n                            return \"action: multiple values\";\n                        properties.action = 1;\n                        {\n                            var error = $root.syft_proto.execution.v1.CommunicationAction.verify(message.communication);\n                            if (error)\n                                return \"communication.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a TensorCommandMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.TensorCommandMessage} TensorCommandMessage\n                 */\n                TensorCommandMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.TensorCommandMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.TensorCommandMessage();\n                    if (object.computation != null) {\n                        if (typeof object.computation !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.TensorCommandMessage.computation: object expected\");\n                        message.computation = $root.syft_proto.execution.v1.ComputationAction.fromObject(object.computation);\n                    }\n                    if (object.communication != null) {\n                        if (typeof object.communication !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.TensorCommandMessage.communication: object expected\");\n                        message.communication = $root.syft_proto.execution.v1.CommunicationAction.fromObject(object.communication);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a TensorCommandMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.TensorCommandMessage} message TensorCommandMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                TensorCommandMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (message.computation != null && message.hasOwnProperty(\"computation\")) {\n                        object.computation = $root.syft_proto.execution.v1.ComputationAction.toObject(message.computation, options);\n                        if (options.oneofs)\n                            object.action = \"computation\";\n                    }\n                    if (message.communication != null && message.hasOwnProperty(\"communication\")) {\n                        object.communication = $root.syft_proto.execution.v1.CommunicationAction.toObject(message.communication, options);\n                        if (options.oneofs)\n                            object.action = \"communication\";\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this TensorCommandMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.TensorCommandMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                TensorCommandMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return TensorCommandMessage;\n            })();\n\n            v1.ForceObjectDeleteMessage = (function() {\n\n                /**\n                 * Properties of a ForceObjectDeleteMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IForceObjectDeleteMessage\n                 * @property {syft_proto.types.syft.v1.IId|null} [object_id] ForceObjectDeleteMessage object_id\n                 */\n\n                /**\n                 * Constructs a new ForceObjectDeleteMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a ForceObjectDeleteMessage.\n                 * @implements IForceObjectDeleteMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IForceObjectDeleteMessage=} [properties] Properties to set\n                 */\n                function ForceObjectDeleteMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ForceObjectDeleteMessage object_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @instance\n                 */\n                ForceObjectDeleteMessage.prototype.object_id = null;\n\n                /**\n                 * Creates a new ForceObjectDeleteMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IForceObjectDeleteMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.ForceObjectDeleteMessage} ForceObjectDeleteMessage instance\n                 */\n                ForceObjectDeleteMessage.create = function create(properties) {\n                    return new ForceObjectDeleteMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified ForceObjectDeleteMessage message. Does not implicitly {@link syft_proto.messaging.v1.ForceObjectDeleteMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IForceObjectDeleteMessage} message ForceObjectDeleteMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ForceObjectDeleteMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ForceObjectDeleteMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.ForceObjectDeleteMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IForceObjectDeleteMessage} message ForceObjectDeleteMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ForceObjectDeleteMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ForceObjectDeleteMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.ForceObjectDeleteMessage} ForceObjectDeleteMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ForceObjectDeleteMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.ForceObjectDeleteMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ForceObjectDeleteMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.ForceObjectDeleteMessage} ForceObjectDeleteMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ForceObjectDeleteMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ForceObjectDeleteMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ForceObjectDeleteMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                        if (error)\n                            return \"object_id.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a ForceObjectDeleteMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.ForceObjectDeleteMessage} ForceObjectDeleteMessage\n                 */\n                ForceObjectDeleteMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.ForceObjectDeleteMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.ForceObjectDeleteMessage();\n                    if (object.object_id != null) {\n                        if (typeof object.object_id !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.ForceObjectDeleteMessage.object_id: object expected\");\n                        message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ForceObjectDeleteMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ForceObjectDeleteMessage} message ForceObjectDeleteMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ForceObjectDeleteMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.object_id = null;\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this ForceObjectDeleteMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.ForceObjectDeleteMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ForceObjectDeleteMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ForceObjectDeleteMessage;\n            })();\n\n            v1.GetShapeMessage = (function() {\n\n                /**\n                 * Properties of a GetShapeMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IGetShapeMessage\n                 * @property {syft_proto.types.syft.v1.IId|null} [object_id] GetShapeMessage object_id\n                 */\n\n                /**\n                 * Constructs a new GetShapeMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a GetShapeMessage.\n                 * @implements IGetShapeMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IGetShapeMessage=} [properties] Properties to set\n                 */\n                function GetShapeMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * GetShapeMessage object_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @instance\n                 */\n                GetShapeMessage.prototype.object_id = null;\n\n                /**\n                 * Creates a new GetShapeMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IGetShapeMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.GetShapeMessage} GetShapeMessage instance\n                 */\n                GetShapeMessage.create = function create(properties) {\n                    return new GetShapeMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified GetShapeMessage message. Does not implicitly {@link syft_proto.messaging.v1.GetShapeMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IGetShapeMessage} message GetShapeMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GetShapeMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified GetShapeMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.GetShapeMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IGetShapeMessage} message GetShapeMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GetShapeMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a GetShapeMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.GetShapeMessage} GetShapeMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GetShapeMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.GetShapeMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a GetShapeMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.GetShapeMessage} GetShapeMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GetShapeMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a GetShapeMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                GetShapeMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                        if (error)\n                            return \"object_id.\" + error;\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a GetShapeMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.GetShapeMessage} GetShapeMessage\n                 */\n                GetShapeMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.GetShapeMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.GetShapeMessage();\n                    if (object.object_id != null) {\n                        if (typeof object.object_id !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.GetShapeMessage.object_id: object expected\");\n                        message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a GetShapeMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.GetShapeMessage} message GetShapeMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                GetShapeMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        object.object_id = null;\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                    return object;\n                };\n\n                /**\n                 * Converts this GetShapeMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.GetShapeMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                GetShapeMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return GetShapeMessage;\n            })();\n\n            v1.ObjectRequestMessage = (function() {\n\n                /**\n                 * Properties of an ObjectRequestMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IObjectRequestMessage\n                 * @property {syft_proto.types.syft.v1.IId|null} [object_id] ObjectRequestMessage object_id\n                 * @property {string|null} [reason] ObjectRequestMessage reason\n                 */\n\n                /**\n                 * Constructs a new ObjectRequestMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents an ObjectRequestMessage.\n                 * @implements IObjectRequestMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IObjectRequestMessage=} [properties] Properties to set\n                 */\n                function ObjectRequestMessage(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ObjectRequestMessage object_id.\n                 * @member {syft_proto.types.syft.v1.IId|null|undefined} object_id\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @instance\n                 */\n                ObjectRequestMessage.prototype.object_id = null;\n\n                /**\n                 * ObjectRequestMessage reason.\n                 * @member {string} reason\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @instance\n                 */\n                ObjectRequestMessage.prototype.reason = \"\";\n\n                /**\n                 * Creates a new ObjectRequestMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectRequestMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.ObjectRequestMessage} ObjectRequestMessage instance\n                 */\n                ObjectRequestMessage.create = function create(properties) {\n                    return new ObjectRequestMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified ObjectRequestMessage message. Does not implicitly {@link syft_proto.messaging.v1.ObjectRequestMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectRequestMessage} message ObjectRequestMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ObjectRequestMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        $root.syft_proto.types.syft.v1.Id.encode(message.object_id, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.reason != null && message.hasOwnProperty(\"reason\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.reason);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ObjectRequestMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.ObjectRequestMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IObjectRequestMessage} message ObjectRequestMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ObjectRequestMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an ObjectRequestMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.ObjectRequestMessage} ObjectRequestMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ObjectRequestMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.ObjectRequestMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.object_id = $root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            message.reason = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an ObjectRequestMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.ObjectRequestMessage} ObjectRequestMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ObjectRequestMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an ObjectRequestMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ObjectRequestMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\")) {\n                        var error = $root.syft_proto.types.syft.v1.Id.verify(message.object_id);\n                        if (error)\n                            return \"object_id.\" + error;\n                    }\n                    if (message.reason != null && message.hasOwnProperty(\"reason\"))\n                        if (!$util.isString(message.reason))\n                            return \"reason: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates an ObjectRequestMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.ObjectRequestMessage} ObjectRequestMessage\n                 */\n                ObjectRequestMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.ObjectRequestMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.ObjectRequestMessage();\n                    if (object.object_id != null) {\n                        if (typeof object.object_id !== \"object\")\n                            throw TypeError(\".syft_proto.messaging.v1.ObjectRequestMessage.object_id: object expected\");\n                        message.object_id = $root.syft_proto.types.syft.v1.Id.fromObject(object.object_id);\n                    }\n                    if (object.reason != null)\n                        message.reason = String(object.reason);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an ObjectRequestMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ObjectRequestMessage} message ObjectRequestMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ObjectRequestMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.object_id = null;\n                        object.reason = \"\";\n                    }\n                    if (message.object_id != null && message.hasOwnProperty(\"object_id\"))\n                        object.object_id = $root.syft_proto.types.syft.v1.Id.toObject(message.object_id, options);\n                    if (message.reason != null && message.hasOwnProperty(\"reason\"))\n                        object.reason = message.reason;\n                    return object;\n                };\n\n                /**\n                 * Converts this ObjectRequestMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.ObjectRequestMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ObjectRequestMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ObjectRequestMessage;\n            })();\n\n            v1.PlanCommandMessage = (function() {\n\n                /**\n                 * Properties of a PlanCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IPlanCommandMessage\n                 * @property {string|null} [command_name] PlanCommandMessage command_name\n                 * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] PlanCommandMessage args\n                 */\n\n                /**\n                 * Constructs a new PlanCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a PlanCommandMessage.\n                 * @implements IPlanCommandMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IPlanCommandMessage=} [properties] Properties to set\n                 */\n                function PlanCommandMessage(properties) {\n                    this.args = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * PlanCommandMessage command_name.\n                 * @member {string} command_name\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @instance\n                 */\n                PlanCommandMessage.prototype.command_name = \"\";\n\n                /**\n                 * PlanCommandMessage args.\n                 * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @instance\n                 */\n                PlanCommandMessage.prototype.args = $util.emptyArray;\n\n                /**\n                 * Creates a new PlanCommandMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IPlanCommandMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.PlanCommandMessage} PlanCommandMessage instance\n                 */\n                PlanCommandMessage.create = function create(properties) {\n                    return new PlanCommandMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified PlanCommandMessage message. Does not implicitly {@link syft_proto.messaging.v1.PlanCommandMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IPlanCommandMessage} message PlanCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlanCommandMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.command_name);\n                    if (message.args != null && message.args.length)\n                        for (var i = 0; i < message.args.length; ++i)\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified PlanCommandMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.PlanCommandMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IPlanCommandMessage} message PlanCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlanCommandMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a PlanCommandMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.PlanCommandMessage} PlanCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlanCommandMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.PlanCommandMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.command_name = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.args && message.args.length))\n                                message.args = [];\n                            message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a PlanCommandMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.PlanCommandMessage} PlanCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlanCommandMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a PlanCommandMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                PlanCommandMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        if (!$util.isString(message.command_name))\n                            return \"command_name: string expected\";\n                    if (message.args != null && message.hasOwnProperty(\"args\")) {\n                        if (!Array.isArray(message.args))\n                            return \"args: array expected\";\n                        for (var i = 0; i < message.args.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                            if (error)\n                                return \"args.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a PlanCommandMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.PlanCommandMessage} PlanCommandMessage\n                 */\n                PlanCommandMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.PlanCommandMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.PlanCommandMessage();\n                    if (object.command_name != null)\n                        message.command_name = String(object.command_name);\n                    if (object.args) {\n                        if (!Array.isArray(object.args))\n                            throw TypeError(\".syft_proto.messaging.v1.PlanCommandMessage.args: array expected\");\n                        message.args = [];\n                        for (var i = 0; i < object.args.length; ++i) {\n                            if (typeof object.args[i] !== \"object\")\n                                throw TypeError(\".syft_proto.messaging.v1.PlanCommandMessage.args: object expected\");\n                            message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a PlanCommandMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.PlanCommandMessage} message PlanCommandMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                PlanCommandMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.args = [];\n                    if (options.defaults)\n                        object.command_name = \"\";\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        object.command_name = message.command_name;\n                    if (message.args && message.args.length) {\n                        object.args = [];\n                        for (var j = 0; j < message.args.length; ++j)\n                            object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this PlanCommandMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.PlanCommandMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                PlanCommandMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return PlanCommandMessage;\n            })();\n\n            v1.WorkerCommandMessage = (function() {\n\n                /**\n                 * Properties of a WorkerCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface IWorkerCommandMessage\n                 * @property {string|null} [command_name] WorkerCommandMessage command_name\n                 * @property {Array.<syft_proto.types.syft.v1.IArg>|null} [args] WorkerCommandMessage args\n                 */\n\n                /**\n                 * Constructs a new WorkerCommandMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a WorkerCommandMessage.\n                 * @implements IWorkerCommandMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.IWorkerCommandMessage=} [properties] Properties to set\n                 */\n                function WorkerCommandMessage(properties) {\n                    this.args = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * WorkerCommandMessage command_name.\n                 * @member {string} command_name\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @instance\n                 */\n                WorkerCommandMessage.prototype.command_name = \"\";\n\n                /**\n                 * WorkerCommandMessage args.\n                 * @member {Array.<syft_proto.types.syft.v1.IArg>} args\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @instance\n                 */\n                WorkerCommandMessage.prototype.args = $util.emptyArray;\n\n                /**\n                 * Creates a new WorkerCommandMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IWorkerCommandMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.WorkerCommandMessage} WorkerCommandMessage instance\n                 */\n                WorkerCommandMessage.create = function create(properties) {\n                    return new WorkerCommandMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified WorkerCommandMessage message. Does not implicitly {@link syft_proto.messaging.v1.WorkerCommandMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IWorkerCommandMessage} message WorkerCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                WorkerCommandMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.command_name);\n                    if (message.args != null && message.args.length)\n                        for (var i = 0; i < message.args.length; ++i)\n                            $root.syft_proto.types.syft.v1.Arg.encode(message.args[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified WorkerCommandMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.WorkerCommandMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.IWorkerCommandMessage} message WorkerCommandMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                WorkerCommandMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a WorkerCommandMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.WorkerCommandMessage} WorkerCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                WorkerCommandMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.WorkerCommandMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.command_name = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.args && message.args.length))\n                                message.args = [];\n                            message.args.push($root.syft_proto.types.syft.v1.Arg.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a WorkerCommandMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.WorkerCommandMessage} WorkerCommandMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                WorkerCommandMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a WorkerCommandMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                WorkerCommandMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        if (!$util.isString(message.command_name))\n                            return \"command_name: string expected\";\n                    if (message.args != null && message.hasOwnProperty(\"args\")) {\n                        if (!Array.isArray(message.args))\n                            return \"args: array expected\";\n                        for (var i = 0; i < message.args.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Arg.verify(message.args[i]);\n                            if (error)\n                                return \"args.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a WorkerCommandMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.WorkerCommandMessage} WorkerCommandMessage\n                 */\n                WorkerCommandMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.WorkerCommandMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.WorkerCommandMessage();\n                    if (object.command_name != null)\n                        message.command_name = String(object.command_name);\n                    if (object.args) {\n                        if (!Array.isArray(object.args))\n                            throw TypeError(\".syft_proto.messaging.v1.WorkerCommandMessage.args: array expected\");\n                        message.args = [];\n                        for (var i = 0; i < object.args.length; ++i) {\n                            if (typeof object.args[i] !== \"object\")\n                                throw TypeError(\".syft_proto.messaging.v1.WorkerCommandMessage.args: object expected\");\n                            message.args[i] = $root.syft_proto.types.syft.v1.Arg.fromObject(object.args[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a WorkerCommandMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.WorkerCommandMessage} message WorkerCommandMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                WorkerCommandMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.args = [];\n                    if (options.defaults)\n                        object.command_name = \"\";\n                    if (message.command_name != null && message.hasOwnProperty(\"command_name\"))\n                        object.command_name = message.command_name;\n                    if (message.args && message.args.length) {\n                        object.args = [];\n                        for (var j = 0; j < message.args.length; ++j)\n                            object.args[j] = $root.syft_proto.types.syft.v1.Arg.toObject(message.args[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this WorkerCommandMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.WorkerCommandMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                WorkerCommandMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return WorkerCommandMessage;\n            })();\n\n            v1.SearchMessage = (function() {\n\n                /**\n                 * Properties of a SearchMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @interface ISearchMessage\n                 * @property {Array.<syft_proto.types.syft.v1.IId>|null} [query] SearchMessage query\n                 */\n\n                /**\n                 * Constructs a new SearchMessage.\n                 * @memberof syft_proto.messaging.v1\n                 * @classdesc Represents a SearchMessage.\n                 * @implements ISearchMessage\n                 * @constructor\n                 * @param {syft_proto.messaging.v1.ISearchMessage=} [properties] Properties to set\n                 */\n                function SearchMessage(properties) {\n                    this.query = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * SearchMessage query.\n                 * @member {Array.<syft_proto.types.syft.v1.IId>} query\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @instance\n                 */\n                SearchMessage.prototype.query = $util.emptyArray;\n\n                /**\n                 * Creates a new SearchMessage instance using the specified properties.\n                 * @function create\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISearchMessage=} [properties] Properties to set\n                 * @returns {syft_proto.messaging.v1.SearchMessage} SearchMessage instance\n                 */\n                SearchMessage.create = function create(properties) {\n                    return new SearchMessage(properties);\n                };\n\n                /**\n                 * Encodes the specified SearchMessage message. Does not implicitly {@link syft_proto.messaging.v1.SearchMessage.verify|verify} messages.\n                 * @function encode\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISearchMessage} message SearchMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SearchMessage.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.query != null && message.query.length)\n                        for (var i = 0; i < message.query.length; ++i)\n                            $root.syft_proto.types.syft.v1.Id.encode(message.query[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified SearchMessage message, length delimited. Does not implicitly {@link syft_proto.messaging.v1.SearchMessage.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.ISearchMessage} message SearchMessage message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                SearchMessage.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a SearchMessage message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {syft_proto.messaging.v1.SearchMessage} SearchMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SearchMessage.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.syft_proto.messaging.v1.SearchMessage();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.query && message.query.length))\n                                message.query = [];\n                            message.query.push($root.syft_proto.types.syft.v1.Id.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a SearchMessage message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {syft_proto.messaging.v1.SearchMessage} SearchMessage\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                SearchMessage.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a SearchMessage message.\n                 * @function verify\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                SearchMessage.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.query != null && message.hasOwnProperty(\"query\")) {\n                        if (!Array.isArray(message.query))\n                            return \"query: array expected\";\n                        for (var i = 0; i < message.query.length; ++i) {\n                            var error = $root.syft_proto.types.syft.v1.Id.verify(message.query[i]);\n                            if (error)\n                                return \"query.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a SearchMessage message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {syft_proto.messaging.v1.SearchMessage} SearchMessage\n                 */\n                SearchMessage.fromObject = function fromObject(object) {\n                    if (object instanceof $root.syft_proto.messaging.v1.SearchMessage)\n                        return object;\n                    var message = new $root.syft_proto.messaging.v1.SearchMessage();\n                    if (object.query) {\n                        if (!Array.isArray(object.query))\n                            throw TypeError(\".syft_proto.messaging.v1.SearchMessage.query: array expected\");\n                        message.query = [];\n                        for (var i = 0; i < object.query.length; ++i) {\n                            if (typeof object.query[i] !== \"object\")\n                                throw TypeError(\".syft_proto.messaging.v1.SearchMessage.query: object expected\");\n                            message.query[i] = $root.syft_proto.types.syft.v1.Id.fromObject(object.query[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a SearchMessage message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @static\n                 * @param {syft_proto.messaging.v1.SearchMessage} message SearchMessage\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                SearchMessage.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.query = [];\n                    if (message.query && message.query.length) {\n                        object.query = [];\n                        for (var j = 0; j < message.query.length; ++j)\n                            object.query[j] = $root.syft_proto.types.syft.v1.Id.toObject(message.query[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this SearchMessage to JSON.\n                 * @function toJSON\n                 * @memberof syft_proto.messaging.v1.SearchMessage\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                SearchMessage.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return SearchMessage;\n            })();\n\n            return v1;\n        })();\n\n        return messaging;\n    })();\n\n    return syft_proto;\n})();\n\n$root.google = (function() {\n\n    /**\n     * Namespace google.\n     * @exports google\n     * @namespace\n     */\n    var google = {};\n\n    google.protobuf = (function() {\n\n        /**\n         * Namespace protobuf.\n         * @memberof google\n         * @namespace\n         */\n        var protobuf = {};\n\n        protobuf.Empty = (function() {\n\n            /**\n             * Properties of an Empty.\n             * @memberof google.protobuf\n             * @interface IEmpty\n             */\n\n            /**\n             * Constructs a new Empty.\n             * @memberof google.protobuf\n             * @classdesc Represents an Empty.\n             * @implements IEmpty\n             * @constructor\n             * @param {google.protobuf.IEmpty=} [properties] Properties to set\n             */\n            function Empty(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Creates a new Empty instance using the specified properties.\n             * @function create\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {google.protobuf.IEmpty=} [properties] Properties to set\n             * @returns {google.protobuf.Empty} Empty instance\n             */\n            Empty.create = function create(properties) {\n                return new Empty(properties);\n            };\n\n            /**\n             * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.\n             * @function encode\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {google.protobuf.IEmpty} message Empty message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Empty.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {google.protobuf.IEmpty} message Empty message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Empty.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Empty message from the specified reader or buffer.\n             * @function decode\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {google.protobuf.Empty} Empty\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Empty.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Empty message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {google.protobuf.Empty} Empty\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Empty.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Empty message.\n             * @function verify\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Empty.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Empty message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {google.protobuf.Empty} Empty\n             */\n            Empty.fromObject = function fromObject(object) {\n                if (object instanceof $root.google.protobuf.Empty)\n                    return object;\n                return new $root.google.protobuf.Empty();\n            };\n\n            /**\n             * Creates a plain object from an Empty message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof google.protobuf.Empty\n             * @static\n             * @param {google.protobuf.Empty} message Empty\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Empty.toObject = function toObject() {\n                return {};\n            };\n\n            /**\n             * Converts this Empty to JSON.\n             * @function toJSON\n             * @memberof google.protobuf.Empty\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Empty.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Empty;\n        })();\n\n        return protobuf;\n    })();\n\n    return google;\n})();\n\nmodule.exports = $root;\n","'use strict';\r\nconst proto_info = require('../proto.json');\r\nexports.proto_info = proto_info;\r\n\r\nconst root = require('./protobuf');\r\nexports.protobuf = root;\r\n","import { getPbId } from '../protobuf';\n\n/**\n * Protocol stores a squence of actions. A Protocol's sequence of actions can\n * be sent to remote workers while the Protocol keeps a reference to the actions.\n * This way, to operate on remote input, only a single message with references\n * of the Protocol as well as the pointers is required for a worker to perform\n * the actions.\n *\n * Protocol contains a mix of ComputationActions and CommunicationActions.\n * Therefore, Protocol can act as a cross-worker and is different from Plan, which\n * contains pure mathematical operations.\n *\n * Note: Protocol is currently not used in syft.js.\n */\nexport default class Protocol {\n  /**\n   * @param {number} id - Id of the PointerTensor.\n   * @param {Array.<string>} tags - Tags for Protocol.\n   * @param {string} description - Description for Protocol.\n   * @param {Array.<Plan>} planAssigments - Array of Plans that Protocol should execute.\n   * @param {*} workersResolved\n   */\n  constructor(id, tags, description, planAssigments, workersResolved) {\n    this.id = id;\n    this.tags = tags;\n    this.description = description;\n    this.plans = planAssigments;\n    this.workersResolved = workersResolved;\n  }\n\n  /**\n   * Reconstructs a Protocol object from the protobuf message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.Protocol} pb - Protobuf object for Protocol.\n   * @returns {Protocol}\n   */\n  static unbufferize(worker, pb) {\n    const planAssignments = [];\n    if (pb.plan_assignments) {\n      pb.plan_assignments.forEach((item) => {\n        planAssignments.push([getPbId(item.worker_id), getPbId(item.plan_id)]);\n      });\n    }\n    return new Protocol(\n      getPbId(pb.id),\n      pb.tags,\n      pb.description,\n      planAssignments,\n      pb.workers_resolved\n    );\n  }\n}\n","import { getPbId, unbufferize } from '../protobuf';\n\n/**\n * Plan stores a sequence of actions (ComputationAction) in its role.\n * A worker is assigned plans and executes the actions stored in the plans.\n */\nexport class Plan {\n  /**\n   * @hideconstructor\n   * @param {string} id - Id of the Plan.\n   * @param {string} name - Name of the Plan.\n   * @param {Array.<Role>} [role=[]] Array of Roles.\n   * @param {Array.<string>} [tags=[]] - Tags for Plan.\n   * @param {string|null} [description=null] Description for Plan.\n   */\n  constructor(id, name, role = [], tags = [], description = null) {\n    this.id = id;\n    this.name = name;\n    this.role = role;\n    this.tags = tags;\n    this.description = description;\n  }\n\n  /**\n   * Reconstructs a Plan object from the protobuf message.\n   * Note that this method take a worker-specific argument in the future.\n   * @private\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.Plan} pb - Protobuf object for Role.\n   * @returns {Plan}\n   */\n  static unbufferize(worker, pb) {\n    const id = getPbId(pb.id);\n\n    return new Plan(\n      id,\n      pb.name,\n      unbufferize(worker, pb.role),\n      pb.tags,\n      pb.description\n    );\n  }\n\n  /**\n   * Executes the Plan and returns its output.\n   *\n   * The order, type and number of arguments must match to arguments defined in the PySyft Plan.\n   *\n   * @param {Syft} worker\n   * @param {...(tf.Tensor|number)} data\n   * @returns {Promise<Array.<tf.Tensor>>}\n   */\n  async execute(worker, ...data) {\n    return this.role.execute(worker, ...data);\n  }\n}\n\n/**\n * Object that describes Plan input.\n * Parameters known to `PlanTrainer`\n * (like training data, model parameters, batch size, etc.)\n * are mapped into Plan arguments according to this object.\n *\n * @param {string} type - Input argument type.\n * @param {string} [name] - Optional argument name.\n * @param {number} [index] - Optional argument index (to take from array).\n * @param {*} [value] - Argument value.\n */\nexport class PlanInputSpec {\n  /**\n   * Represents training data (substituted with PlanTrainer's `data` batch)\n   * @constant\n   */\n  static TYPE_DATA = 'data';\n\n  /**\n   * Represents training targets aka labels (substituted with PlanTrainer's `target` batch)\n   * @constant\n   */\n  static TYPE_TARGET = 'target';\n\n  /**\n   * Represents batch size (substituted with PlanTrainer's `batchSize`).\n   * @constant\n   */\n  static TYPE_BATCH_SIZE = 'batchSize';\n\n  /**\n   * Represents parameter from client config configured in FL model, `name` argument is required (substituted with parameter from PlanTrainer's `clientConfig`).\n   * @constant\n   */\n  static TYPE_CLIENT_CONFIG_PARAM = 'clientConfigParam';\n\n  /**\n   * Represents any value, `value` argument is required.\n   * @constant\n   */\n  static TYPE_VALUE = 'value';\n\n  /**\n   * Represents model parameter (substituted with `SyftModel` contents).\n   * @constant\n   */\n  static TYPE_MODEL_PARAM = 'modelParam';\n\n  constructor(type, name = null, index = null, value = null) {\n    this.type = type;\n    this.name = name;\n    this.index = index;\n    this.value = value;\n  }\n\n  /**\n   * Creates list of Plan arguments according to specified `specs`.\n   *\n   * @private\n   * @param {[PlanInputSpec]} specs - Plan arguments specifications.\n   * @param {Object} data - Dictionary containing Plan arguments.\n   * @returns {[]}\n   */\n  static resolve(specs, data) {\n    const args = [];\n    for (const spec of specs) {\n      if (spec.type === this.TYPE_VALUE) {\n        args.push(spec.value);\n      } else if (spec.index !== null) {\n        args.push(data[spec.type][spec.index]);\n      } else if (spec.name !== null) {\n        args.push(data[spec.type][spec.name]);\n      } else if (spec.type === this.TYPE_CLIENT_CONFIG_PARAM) {\n        args.push(data[spec.type][spec.name]);\n      } else {\n        args.push(data[spec.type]);\n      }\n    }\n    return args;\n  }\n}\n\n/**\n * Object that describes Plan output.\n * Values returned from Plan\n * (like loss, accuracy, model parameters, etc.)\n * are mapped into `PlanTrainer`'s internal state according to this object.\n *\n * @param {string} type - Output variable type.\n * @param {string} [name] - Optional name.\n * @param {number} [index] - Optional index (to put into array).\n */\nexport class PlanOutputSpec {\n  /**\n   * Represents loss value (maps to PlanTrainer's loss).\n   * @constant\n   */\n  static TYPE_LOSS = 'loss';\n  /**\n   * Represents metric value, name is required (maps to PlanTrainer's metrics dictionary).\n   * @constant\n   */\n  static TYPE_METRIC = 'metric';\n  /**\n   * Represents model parameter (maps to `SyftModel` parameters)\n   * @constant\n   */\n  static TYPE_MODEL_PARAM = 'modelParam';\n\n  constructor(type, name = null, index = null) {\n    this.type = type;\n    this.name = name;\n    this.index = index;\n  }\n\n  /**\n   * Creates dictionary of Plan output values according to `specs`.\n   *\n   * @private\n   * @param {[PlanOutputSpec]} specs - Specifications of Plan output variables.\n   * @param {[*]} data - Plan output.\n   * @returns {Object}\n   */\n  static resolve(specs, data) {\n    const out = {};\n    let i = 0;\n    for (const spec of specs) {\n      if (spec.index !== null) {\n        if (typeof out[spec.type] === 'undefined') {\n          out[spec.type] = [];\n        }\n        out[spec.type][spec.index] = data[i];\n      } else if (spec.name !== null) {\n        if (typeof out[spec.type] === 'undefined') {\n          out[spec.type] = {};\n        }\n        out[spec.type][spec.name] = data[i];\n      } else {\n        out[spec.type] = data[i];\n      }\n      i++;\n    }\n    return out;\n  }\n}\n","import * as tf from '@tensorflow/tfjs-core';\n\n/**\n * ObjectRegistry stores a map of {id -> object} and a map of {id -> gc},\n * where gc denotes if the object of given id will be garbage collected.\n */\nexport default class ObjectRegistry {\n  /**\n   * @property {Object.<string, Object>} objects - a map of {id: object}\n   * @property {Object.<string, boolean>} gc - a map of {id: boolean} that determines if the object of id will be garbage collected\n   */\n  constructor() {\n    this.objects = {};\n    this.gc = {};\n  }\n\n  set(id, obj, gc = false) {\n    // Remove the current id and object in the objects map before replacing them\n    if (this.objects[id] instanceof tf.Tensor) {\n      this.objects[id].dispose();\n      delete this.objects[id];\n    }\n    this.objects[id] = obj;\n    this.gc[id] = gc;\n  }\n\n  setGc(id, gc) {\n    this.gc[id] = gc;\n  }\n\n  get(id) {\n    return this.objects[id];\n  }\n\n  has(id) {\n    return Object.hasOwnProperty.call(this.objects, id);\n  }\n\n  clear() {\n    for (let key of Object.keys(this.objects)) {\n      if (this.gc[key] && this.objects[key] instanceof tf.Tensor) {\n        this.objects[key].dispose();\n      }\n    }\n    this.objects = {};\n    this.gc = {};\n  }\n\n  /**\n   * Loads the objects from an existing ObjectRegistry and stores them in this.objects\n   * @param {ObjectRegistry} objectRegistry\n   */\n  load(objectRegistry) {\n    for (let key of Object.keys(objectRegistry.objects)) {\n      this.set(key, objectRegistry.get(key));\n    }\n  }\n}\n","import { getPbId, unbufferize } from '../protobuf';\nimport ObjectRegistry from '../object-registry';\nimport { NotEnoughArgsError } from '../_errors';\n\n/**\n * Role encapsulates a list of ComputationActions that are executed in a Plan.\n *\n * Concretely, a worker is assigned a Role, which includes actions that the\n * worker should perform.\n */\nexport class Role {\n  /**\n   * @param {string} id - Id of the Role.\n   * @param {Array.<ComputationAction>} [actions=[]] - Array of actions to be executed.\n   * @param {State} [state=null]\n   * @param {Object.<string,Placeholder>} [placeholders={}] - Array of Placeholders that contain tensors.\n   * @param {Array.<PlaceholderId>} [input_placeholder_ids=[]] - Array of PlaceholderIds for input values.\n   * @param {Array.<PlaceholderId>} [output_placeholder_ids=[]] - Array of PlaceholderIds for output values.\n   * @param {Array.<string>} [tags=[]] - Tags for Role.\n   * @param {string|null} [description=null] Description for Role.\n   */\n  constructor(\n    id,\n    actions = [],\n    state = null,\n    placeholders = {},\n    input_placeholder_ids = [],\n    output_placeholder_ids = [],\n    tags = [],\n    description = null\n  ) {\n    this.id = id;\n    this.actions = actions;\n    this.state = state;\n    this.placeholders = placeholders;\n    this.input_placeholder_ids = input_placeholder_ids;\n    this.output_placeholder_ids = output_placeholder_ids;\n    this.tags = tags;\n    this.description = description;\n  }\n\n  /**\n   * Reconstructs a Role object from the protobuf message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.Role} pb - Protobuf object for Role.\n   * @returns {Role}\n   */\n  static unbufferize(worker, pb) {\n    let placeholdersArray = unbufferize(worker, pb.placeholders);\n    let placeholders = {};\n    for (let ph of placeholdersArray) {\n      placeholders[ph.id] = ph;\n    }\n\n    return new Role(\n      getPbId(pb.id),\n      unbufferize(worker, pb.actions),\n      unbufferize(worker, pb.state),\n      placeholders,\n      pb.input_placeholder_ids.map(getPbId),\n      pb.output_placeholder_ids.map(getPbId),\n      pb.tags,\n      pb.description\n    );\n  }\n\n  /**\n   * @returns {Array.<Placeholder>} - Input Placeholders\n   */\n  getInputPlaceholders() {\n    return this.input_placeholder_ids.map((id) => this.placeholders[id]);\n  }\n\n  /**\n   * @returns {Array.<Placeholder>} - Output Placeholders\n   */\n  getOutputPlaceholders() {\n    return this.output_placeholder_ids.map((id) => this.placeholders[id]);\n  }\n\n  /**\n   * Executes the actions in the Role with a given worker.\n   * @param {Syft} worker\n   * @param {...(tf.Tensor)} data\n   * @returns {Promise<Array>}\n   */\n  async execute(worker, ...data) {\n    // Create local scope\n    const planScope = new ObjectRegistry();\n    planScope.load(worker.objects);\n\n    const inputPlaceholders = this.getInputPlaceholders(),\n      outputPlaceholders = this.getOutputPlaceholders(),\n      argsLength = inputPlaceholders.length;\n\n    // If the number of arguments supplied does not match the number of arguments required\n    if (data.length !== argsLength)\n      throw new NotEnoughArgsError(data.length, argsLength);\n\n    // Add each argument to local scope\n    data.forEach((datum, i) => {\n      planScope.set(inputPlaceholders[i].id, datum);\n    });\n\n    // Load state tensors to worker\n    if (this.state && this.state.tensors) {\n      this.state.placeholders.forEach((ph, idx) => {\n        planScope.set(ph.id, this.state.tensors[idx]);\n      });\n    }\n\n    // Execute the plan\n    for (const action of this.actions) {\n      // The result of the current operation\n      const result = await action.execute(planScope);\n\n      // Place the result of the current operation into this.objects at the 0th item in returnIds\n      // All intermediate tensors will be garbage collected by default\n      if (result) {\n        if (action.returnIds.length > 0) {\n          planScope.set(action.returnIds[0], result, true);\n        } else if (action.returnPlaceholderIds.length > 0) {\n          planScope.set(action.returnPlaceholderIds[0].id, result, true);\n        }\n      }\n    }\n\n    // Resolve all of the requested resultId's as specified by the Plan\n    const resolvedResultingTensors = [];\n    outputPlaceholders.forEach((placeholder) => {\n      resolvedResultingTensors.push(planScope.get(placeholder.id));\n      // Do not gc output tensors\n      planScope.setGc(placeholder.id, false);\n    });\n\n    // Clean up intermediate plan variables.\n    planScope.clear();\n\n    // Return resolved tensors to the worker\n    return resolvedResultingTensors;\n  }\n}\n","import { protobuf, unbufferize } from '../protobuf';\n\n/**\n * State stores a list of tensors. In Syft.JS, State is used to\n * serialize and store model weights.\n */\nexport class State {\n  /**\n   * @hideconstructor\n   * @param {Array.<Placeholder>} [placeholders=null] - Array of Placeholders.\n   * @param {Array.<TorchTensor>} [tensors=null] - Array of TorchTensors.\n   */\n  constructor(placeholders = null, tensors = null) {\n    this.placeholders = placeholders;\n    this.tensors = tensors;\n  }\n\n  /**\n   * Converts an Array of TorchTensor to tf.Tensor.\n   * @returns {Array.<tf.Tensor>}\n   */\n  getTfTensors() {\n    return this.tensors.map((t) => t.toTfTensor());\n  }\n\n  /**\n   * Reconstructs a State object from the protobuf message.\n   * Note that this method take a worker-specific argument in the future.\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.State} pb - Protobuf object for State.\n   * @returns {State}\n   */\n  static unbufferize(worker, pb) {\n    const tensors = pb.tensors.map((stateTensor) => {\n      // unwrap StateTensor\n      return unbufferize(worker, stateTensor[stateTensor.tensor]);\n    });\n\n    return new State(unbufferize(worker, pb.placeholders), tensors);\n  }\n\n  /**\n   * Bufferizes the State object, its tensors and placeholders to\n   * a protobuf State object.\n   *\n   * Note that this method should take a worker-specific argument in the future.\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @returns {protobuf.syft_proto.execution.v1.State}\n   */\n  bufferize(worker) {\n    const tensorsPb = this.tensors.map((tensor) =>\n      protobuf.syft_proto.execution.v1.StateTensor.create({\n        torch_tensor: tensor.bufferize(worker),\n      })\n    );\n    const placeholdersPb = this.placeholders.map((ph) => ph.bufferize());\n    return protobuf.syft_proto.execution.v1.State.create({\n      placeholders: placeholdersPb,\n      tensors: tensorsPb,\n    });\n  }\n}\n","import { unbufferize } from '../protobuf';\nimport Logger from '../logger';\n\n/**\n * Message enables comunicating between PySyft and Syft workers.\n * Message is the parent class to all other Message types.\n *\n * All Message types are currently are currently not in use.\n *\n * @property {*} contents - For storing unbufferized message data.\n * @property {Logger} logger - For logging information.\n */\nexport class Message {\n  constructor(contents) {\n    if (contents) {\n      this.contents = contents;\n    }\n    this.logger = new Logger();\n  }\n}\n\n/**\n * ObjectMessage is used to send an object as message between PySyft and Syft workers.\n * @extends Message\n */\nexport class ObjectMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n\n  /**\n   * Unbufferizes and maps data from protobuf object to JS object.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments when messaging with PySyft.\n   * @param {protobuf.syft_proto.messaging.v1.ObjectMessage} pb - Protobuf object.\n   * @returns {ObjectMessage}\n   */\n  static unbufferize(worker, pb) {\n    const tensor = unbufferize(worker, pb.tensor);\n    return new ObjectMessage(tensor);\n  }\n}\n\n// TODO when types will be availbale in protobuf\n\n/*\nexport class ObjectRequestMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n}\n\nexport class IsNoneMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n}\n\nexport class GetShapeMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n}\n\nexport class ForceObjectDeleteMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n}\n\nexport class SearchMessage extends Message {\n  constructor(contents) {\n    super(contents);\n  }\n}\n\nexport class PlanCommandMessage extends Message {\n  constructor(commandName, message) {\n    super();\n\n    this.commandName = commandName;\n    this.message = message;\n  }\n}\n*/\n","import { getPbId, unbufferize, protobuf, pbId } from '../protobuf';\nimport * as tf from '@tensorflow/tfjs-core';\n\nexport class TorchTensor {\n  constructor(\n    id,\n    contents,\n    shape,\n    dtype,\n    chain = null,\n    gradChain = null,\n    tags = [],\n    description = null\n  ) {\n    this.id = id;\n    this.shape = shape;\n    this.dtype = dtype;\n    this.contents = contents;\n    this.chain = chain;\n    this.gradChain = gradChain;\n    this.tags = tags;\n    this.description = description;\n    this._tfTensor = null;\n  }\n\n  toTfTensor() {\n    if (!this._tfTensor) {\n      this._tfTensor = tf.tensor(this.contents, this.shape, this.dtype);\n    }\n    return this._tfTensor;\n  }\n\n  static unbufferize(worker, pb) {\n    if (\n      pb.serializer !==\n      protobuf.syft_proto.types.torch.v1.TorchTensor.Serializer.SERIALIZER_ALL\n    ) {\n      throw new Error(\n        `Tensor serializer ${pb.serializer} is not supported in syft.js`\n      );\n    }\n\n    // unwrap TensorData\n    const tensorData = pb.contents_data;\n    const dtype = tensorData.dtype;\n    const shape = tensorData.shape.dims;\n    const contents = tensorData[`contents_${dtype}`];\n\n    return new TorchTensor(\n      getPbId(pb.id),\n      contents,\n      shape,\n      dtype,\n      unbufferize(worker, pb.chain),\n      unbufferize(worker, pb.grad_chain),\n      pb.tags,\n      pb.description\n    );\n  }\n\n  bufferize(/* worker */) {\n    const tensorData = {\n      shape: protobuf.syft_proto.types.torch.v1.Size.create({\n        dims: this.shape,\n      }),\n      dtype: this.dtype,\n    };\n    tensorData[`contents_${this.dtype}`] = this.contents;\n    const pbTensorData = protobuf.syft_proto.types.torch.v1.TensorData.create(\n      tensorData\n    );\n    return protobuf.syft_proto.types.torch.v1.TorchTensor.create({\n      id: pbId(this.id),\n      serializer:\n        protobuf.syft_proto.types.torch.v1.TorchTensor.Serializer\n          .SERIALIZER_ALL,\n      contents_data: pbTensorData,\n      tags: this.tags,\n      description: this.description,\n    });\n  }\n\n  /**\n   * Returns new `TorchTensor` created from `tf.Tensor`.\n   *\n   * @param {tf.Tensor} tensor - Tensor.\n   * @return {Promise<TorchTensor>}\n   */\n  static async fromTfTensor(tensor) {\n    const flat = tensor.flatten();\n    const array = await flat.array();\n    flat.dispose();\n    const t = new TorchTensor(tensor.id, array, tensor.shape, tensor.dtype);\n    t._tfTensor = tensor;\n    return t;\n  }\n}\n\nexport class TorchSize {\n  constructor(size) {\n    this.size = size;\n  }\n}\n\nexport class TorchParameter {\n  constructor(id, tensor, requiresGrad, grad) {\n    this.id = id;\n    this.tensor = tensor;\n    this.requiresGrad = requiresGrad;\n    this.grad = grad;\n  }\n\n  static unbufferize(worker, pb) {\n    return new TorchParameter(\n      getPbId(pb.id),\n      unbufferize(worker, pb.tensor),\n      pb.requires_grad,\n      unbufferize(worker, pb.grad)\n    );\n  }\n\n  toTfTensor() {\n    return this.tensor.toTfTensor();\n  }\n}\n","import { protobuf, getPbId, pbId } from '../protobuf';\n\n/**\n * PlaceholderId identifies which Placeholder tensors should be used as\n * inputs and outputs of Actions inside a Plan.\n *\n * @property {string} id - Unbufferized, unique id for a Placeholder object.\n */\nexport class PlaceholderId {\n  constructor(id) {\n    this.id = id;\n  }\n\n  /**\n   * Reconstructs a PlaceholderId object from the protobuf message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.types.syft.v1.Id} pb - Protobuf object for Id.\n   * @returns {PlaceholderId}\n   */\n  static unbufferize(worker, pb) {\n    return new PlaceholderId(getPbId(pb.id));\n  }\n\n  /**\n   * Save the Id string into a protobuf PlaceholderId message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @returns {protobuf.syft_proto.execution.v1.PlaceholderId}\n   */\n  bufferize(/* worker */) {\n    return protobuf.syft_proto.execution.v1.PlaceholderId.create({\n      id: pbId(this.id),\n    });\n  }\n}\n\n/**\n * Placeholder acts as a tensor. It is replaced by actual tensors after actions\n * are acted on it and can be used to trace the actions from a Plan. A Placeholder\n * has a PlaceholderId that uniquely identifies itself.\n *\n * @property {string} id - Unbufferized Id object.\n */\nexport class Placeholder {\n  constructor(id, tags = [], description = null, expected_shape = null) {\n    this.id = id;\n    this.tags = tags;\n    this.description = description;\n    this.expected_shape = expected_shape;\n  }\n\n  /**\n   * Reconstructs a Placeholder object from the protobuf message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.Placeholder} pb - Protobuf object for Placeholder.\n   * @returns {Placeholder}\n   */\n  static unbufferize(worker, pb) {\n    let expected_shape = null;\n    if (\n      pb.expected_shape &&\n      Array.isArray(pb.expected_shape.dims) &&\n      pb.expected_shape.dims.length > 0\n    ) {\n      // Unwrap Shape\n      expected_shape = pb.expected_shape.dims;\n    }\n\n    return new Placeholder(\n      getPbId(pb.id),\n      pb.tags || [],\n      pb.description,\n      expected_shape\n    );\n  }\n\n  /**\n   * Bufferizes the Placeholder object to a protobuf Placeholder object.\n   * Note that this method should take a worker-specific argument in the future.\n   *\n   * @returns {protobuf.syft_proto.execution.v1.Placeholder}\n   */\n  bufferize(/* worker */) {\n    return protobuf.syft_proto.execution.v1.Placeholder.create({\n      id: pbId(this.id),\n      tags: this.tags,\n      description: this.description,\n      expected_shape: protobuf.syft_proto.types.syft.v1.Shape.create(\n        this.expected_shape\n      ),\n    });\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * PointerTensor points to a remote tensor and forwards all API calls\n * to its remote tensor. A PointerTensor mimic the entire API of a normal\n * tensor, but instead of computing a tensor function (such as addition,\n * subtraction, etc.) locally, PointerTensor forwards the computation to\n * a remote machine as specified by self.locationId.\n *\n * Note that PointerTensor is currently not supported. Support for communication\n * between workers comes from Protocol.\n */\nexport default class PointerTensor {\n  /**\n   * @param {number} id - Id of the PointerTensor.\n   * @param {number} idAtLocation - Id of the remote tensor being pointed at.\n   * @param {string} locationId - Id of the location where the remote tensor resides.\n   * @param {string} pointToAttr - String value to specify if the PointerTensor should point to an attribute of the remote tensor such as .child or .grad.\n   * @param {Array.<number>} shape - Size of the tensor the pointer points to.\n   * @param {boolean} garbageCollectData - If True, delete the remote tensor when the PointerTensor is removed.\n   */\n  constructor(\n    id,\n    idAtLocation,\n    locationId,\n    pointToAttr,\n    shape,\n    garbageCollectData\n  ) {\n    this.id = id;\n    this.idAtLocation = idAtLocation;\n    this.locationId = locationId;\n    this.pointToAttr = pointToAttr;\n    this.shape = shape;\n    this.garbageCollectData = garbageCollectData;\n  }\n}\n","import { unbufferize } from '../protobuf';\nimport PointerTensor from './pointer-tensor';\nimport { Placeholder, PlaceholderId } from './placeholder';\nimport * as tf from '@tensorflow/tfjs-core';\nimport { TorchParameter, TorchTensor } from './torch';\nimport { CannotFindCommandError, MissingVariableError } from '../_errors';\n\n/**\n * ComputationAction describes mathematical operations performed on tensors.\n *\n * @param {string} command - The name of the method to be invoked (e.g. \"torch.abs\").\n * @param {string|PointerTensor|PlaceholderId|TorchTensor} target - The object to invoke the method on.\n * @param {*} args - The arguments to the method call.\n * @param {Object} kwargs - The keyword arguments to the method call.\n * @param {Array.<string>} returnIds - List of ids for action results.\n * @param {Array.<PlaceholderId>} returnPlaceholderIds - List of PlaceholderIds returned from the action.\n */\nexport class ComputationAction {\n  constructor(command, target, args, kwargs, returnIds, returnPlaceholderIds) {\n    this.command = command;\n    this.target = target;\n    this.args = args;\n    this.kwargs = kwargs;\n    this.returnIds = returnIds;\n    this.returnPlaceholderIds = returnPlaceholderIds;\n  }\n\n  /**\n   * Reconstructs a ComputationAction object from a protobuf message.\n   * Note that this method might take a worker-specific argument in the future.\n   *\n   * @static\n   * @param {*} worker - Reserved placeholder for worker-specific arguments.\n   * @param {protobuf.syft_proto.execution.v1.ComputationAction} pb - Protobuf object for ComputationAction.\n   * @returns {ComputationAction}\n   */\n  static unbufferize(worker, pb) {\n    return new ComputationAction(\n      pb.command,\n      unbufferize(worker, pb[pb.target]),\n      unbufferize(worker, pb.args),\n      unbufferize(worker, pb.kwargs),\n      unbufferize(worker, pb.return_ids),\n      unbufferize(worker, pb.return_placeholder_ids)\n    );\n  }\n\n  /**\n   * Execute the ComputationAction with given worker.\n   * @param {ObjectRegistry} scope - Local scope provided by the Role on executing the Plan and its actions.\n   * @returns {Promise<Array.<tf.Tensor|number>>}\n   */\n  async execute(scope) {\n    // Helper function to determine if all PointerTensors/Placeholders in \"this.args\" also exist as tensors in \"objects\"\n    const haveValuesForAllArgs = (args) => {\n      let enoughInfo = true;\n\n      args.forEach((arg) => {\n        if (\n          (arg instanceof PointerTensor && !scope.has(arg.idAtLocation)) ||\n          (arg instanceof Placeholder && !scope.has(arg.id)) ||\n          (arg instanceof PlaceholderId && !scope.has(arg.id))\n        ) {\n          enoughInfo = false;\n        }\n      });\n\n      return enoughInfo;\n    };\n\n    const toTFTensor = (tensor) => {\n      if (tensor instanceof tf.Tensor) {\n        return tensor;\n      } else if (tensor instanceof TorchTensor) {\n        return tensor.toTfTensor();\n      } else if (tensor instanceof TorchParameter) {\n        return tensor.tensor.toTfTensor();\n      } else if (typeof tensor === 'number') {\n        return tensor;\n      }\n      return null;\n    };\n\n    const getTensorByRef = (reference) => {\n      let tensor = null;\n      if (reference instanceof PlaceholderId) {\n        tensor = scope.get(reference.id);\n      } else if (reference instanceof Placeholder) {\n        tensor = scope.get(reference.id);\n      } else if (reference instanceof PointerTensor) {\n        tensor = scope.get(reference.idAtLocation);\n      }\n      tensor = toTFTensor(tensor);\n      return tensor;\n    };\n\n    // Helper function to get all operable tensors from PointerTensors in \"this.args\"\n    const pullTensorsFromArgs = (args) => {\n      const resolvedArgs = [];\n\n      args.forEach((arg) => {\n        const tensorByRef = getTensorByRef(arg);\n        if (tensorByRef) {\n          resolvedArgs.push(toTFTensor(tensorByRef));\n        } else {\n          // Try to convert to tensor\n          const tensor = toTFTensor(arg);\n          if (tensor !== null) {\n            resolvedArgs.push(toTFTensor(arg));\n          } else {\n            // Keep as is.\n            resolvedArgs.push(arg);\n          }\n        }\n      });\n\n      return resolvedArgs;\n    };\n\n    const args = this.args;\n    let self = null;\n\n    if (this.target) {\n      // Resolve \"self\" if it's present\n      self = getTensorByRef(this.target);\n      if (!self) {\n        throw new MissingVariableError();\n      }\n    }\n\n    if (!haveValuesForAllArgs(args)) {\n      throw new MissingVariableError();\n    }\n\n    const resolvedArgs = pullTensorsFromArgs(args);\n    const functionName = this.command.split('.').pop();\n\n    // If target exists, check if target contains the specific function and return computed results\n    if (self) {\n      if (!(functionName in self)) {\n        throw new CannotFindCommandError(`tensor.${functionName}`);\n      } else {\n        return self[functionName](...resolvedArgs);\n      }\n    }\n\n    // Else, check if tfjs contains the specific function and return computed results\n    if (!(functionName in tf)) {\n      throw new CannotFindCommandError(functionName);\n    } else {\n      return tf[functionName](...resolvedArgs, ...Object.values(this.kwargs));\n    }\n  }\n}\n","import { protobuf } from 'syft-proto';\nimport Protocol from '../types/protocol';\nimport { Plan } from '../types/plan';\nimport { Role } from '../types/role';\nimport { State } from '../types/state';\nimport { ObjectMessage } from '../types/message';\nimport { TorchParameter, TorchTensor } from '../types/torch';\nimport { Placeholder, PlaceholderId } from '../types/placeholder';\nimport { ComputationAction } from '../types/computation-action';\n\nlet PB_CLASS_MAP, PB_TO_UNBUFFERIZER;\n\n// Because of cyclic dependencies between Protocol/etc modules and protobuf module\n// Protocol/etc classes are undefined at the moment when this module is imported\nexport const initMappings = () => {\n  PB_CLASS_MAP = [\n    [Protocol, protobuf.syft_proto.execution.v1.Protocol],\n    [Plan, protobuf.syft_proto.execution.v1.Plan],\n    [Role, protobuf.syft_proto.execution.v1.Role],\n    [State, protobuf.syft_proto.execution.v1.State],\n    [ComputationAction, protobuf.syft_proto.execution.v1.ComputationAction],\n    [Placeholder, protobuf.syft_proto.execution.v1.Placeholder],\n    [PlaceholderId, protobuf.syft_proto.execution.v1.PlaceholderId],\n    [ObjectMessage, protobuf.syft_proto.messaging.v1.ObjectMessage],\n    [TorchTensor, protobuf.syft_proto.types.torch.v1.TorchTensor],\n    [TorchParameter, protobuf.syft_proto.types.torch.v1.Parameter],\n  ];\n\n  PB_TO_UNBUFFERIZER = PB_CLASS_MAP.reduce((map, item) => {\n    map[item[1]] = item[0].unbufferize;\n    return map;\n  }, {});\n};\n\nexport { PB_CLASS_MAP, PB_TO_UNBUFFERIZER };\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","import { NoDetailerError, ProtobufUnserializeFailedError } from '../_errors';\nimport { initMappings, PB_TO_UNBUFFERIZER } from './mapping';\nimport { protobuf } from 'syft-proto';\nimport Long from 'long';\nimport { base64Decode } from '../utils/base64';\n\nexport { protobuf };\n\nexport const unbufferize = (worker, pbObj) => {\n  if (!PB_TO_UNBUFFERIZER) {\n    initMappings();\n  }\n\n  if (\n    pbObj === undefined ||\n    pbObj === null ||\n    ['number', 'string', 'boolean'].includes(typeof pbObj)\n  ) {\n    return pbObj;\n  }\n\n  const pbType = pbObj.constructor;\n\n  // automatically unbufferize repeated fields\n  if (Array.isArray(pbObj)) {\n    return pbObj.map((item) => unbufferize(worker, item));\n  }\n\n  // automatically unbufferize map fields\n  if (pbType.name === 'Object') {\n    let res = {};\n    for (let key of Object.keys(pbObj)) {\n      res[key] = unbufferize(worker, pbObj[key]);\n    }\n    return res;\n  }\n\n  // automatically unbufferize Id\n  if (pbType === protobuf.syft_proto.types.syft.v1.Id) {\n    return getPbId(pbObj);\n  }\n\n  // automatically unwrap Arg\n  if (pbType === protobuf.syft_proto.types.syft.v1.Arg) {\n    if (pbObj.arg === 'arg_int' && pbObj[pbObj.arg] instanceof Long) {\n      // protobuf int64 is represented as Long\n      return pbObj[pbObj.arg].toNumber();\n    } else {\n      return unbufferize(worker, pbObj[pbObj.arg]);\n    }\n  }\n\n  // automatically unwrap ArgList\n  if (pbType === protobuf.syft_proto.types.syft.v1.ArgList) {\n    return unbufferize(worker, pbObj.args);\n  }\n\n  const unbufferizer = PB_TO_UNBUFFERIZER[pbType];\n  if (typeof unbufferizer === 'undefined') {\n    throw new NoDetailerError(pbType.name);\n  }\n  return unbufferizer(worker, pbObj);\n};\n\n/**\n * Converts binary in the form of ArrayBuffer or base64 string to syft class\n * @param worker\n * @param bin\n * @param pbType\n * @returns {Object}\n */\nexport const unserialize = (worker, bin, pbType) => {\n  const buff =\n    typeof bin === 'string'\n      ? base64Decode(bin)\n      : bin instanceof ArrayBuffer\n      ? new Uint8Array(bin)\n      : bin;\n  let pbObj;\n  try {\n    pbObj = pbType.decode(buff);\n  } catch (e) {\n    throw new ProtobufUnserializeFailedError(pbType.name, e.message);\n  }\n  return unbufferize(worker, pbObj);\n};\n\n/**\n * Converts syft class to protobuf-serialized binary\n * @param worker\n * @param obj\n * @returns {ArrayBuffer}\n */\nexport const serialize = (worker, obj) => {\n  const pbObj = obj.bufferize(worker);\n  const pbType = pbObj.constructor;\n  const err = pbType.verify(pbObj);\n  if (err) {\n    throw new Error(err);\n  }\n  const bin = pbType.encode(pbObj).finish();\n  return new Uint8Array(bin).buffer;\n};\n\nexport const getPbId = (field) => {\n  // convert int64 to string\n  return field[field.id].toString();\n};\n\nexport const pbId = (value) => {\n  if (typeof value === 'number') {\n    return protobuf.syft_proto.types.syft.v1.Id.create({ id_int: value });\n  } else if (typeof value === 'string') {\n    return protobuf.syft_proto.types.syft.v1.Id.create({ id_str: value });\n  }\n};\n","import { unserialize, protobuf, serialize } from './protobuf';\nimport { State } from './types/state';\nimport { TorchTensor } from './types/torch';\nimport { Placeholder } from './types/placeholder';\nimport { ModelLoadFailedError } from './_errors';\n\n/**\n * Model parameters as stored in the PyGrid.\n *\n * @property {[tf.Tensor]} params - Array of Model parameters.\n */\nexport default class SyftModel {\n  /**\n   * @hideconstructor\n   * @param {Object} options\n   * @param {Syft} options.worker - Instance of Syft client.\n   * @param {ArrayBuffer} options.serializedModelParameters - Serialized Model parameters as returned by PyGrid.\n   * @param {[tf.Tensor]} options.modelParameters - Serialized Model parameters as returned by PyGrid.\n   */\n  constructor({\n    worker,\n    serializedModelParameters = null,\n    modelParameters = null,\n  }) {\n    this.worker = worker;\n    if (serializedModelParameters) {\n      // Convert model from binary and store model weights in the syft class State\n      try {\n        const state = unserialize(\n          worker,\n          serializedModelParameters,\n          protobuf.syft_proto.execution.v1.State\n        );\n        this.params = state.getTfTensors();\n      } catch (e) {\n        throw new ModelLoadFailedError(e.message);\n      }\n    }\n    if (modelParameters) {\n      this.params = modelParameters;\n    }\n  }\n\n  /**\n   * Returns model serialized to protobuf.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async toProtobuf() {\n    const placeholders = [],\n      tensors = [];\n    for (let i = 0; i < this.params.length; i++) {\n      placeholders.push(new Placeholder(i, [`#${i}`, `#state-${i}`]));\n      tensors.push(await TorchTensor.fromTfTensor(this.params[i]));\n    }\n    const state = new State(placeholders, tensors);\n    return serialize(this.worker, state);\n  }\n\n  /**\n   * Calculates difference between 2 versions of the Model parameters\n   * and returns serialized `diff` that can be submitted to PyGrid.\n   *\n   * @param {Array.<tf.Tensor>} updatedModelParams - Array of model parameters (tensors).\n   * @returns {Promise<ArrayBuffer>} Protobuf-serialized `diff`.\n   */\n  async createSerializedDiff(updatedModelParams) {\n    const placeholders = [],\n      tensors = [];\n\n    // Store model weight differences in a new State and convert to protobuf-serialized binary\n    for (let i = 0; i < updatedModelParams.length; i++) {\n      let paramDiff = this.params[i].sub(updatedModelParams[i]);\n      placeholders.push(new Placeholder(i, [`#${i}`, `#state-${i}`]));\n      tensors.push(await TorchTensor.fromTfTensor(paramDiff));\n    }\n    const state = new State(placeholders, tensors);\n    const bin = serialize(this.worker, state);\n\n    // Free up memory\n    tensors.forEach((t) => t._tfTensor.dispose());\n\n    return bin;\n  }\n\n  /**\n   * Calculates difference between 2 versions of the Model\n   * and returns serialized `diff` that can be submitted to PyGrid.\n   *\n   * @param {SyftModel} model - Model to compare with.\n   * @returns {Promise<ArrayBuffer>} Protobuf-serialized `diff`.\n   */\n  async createSerializedDiffFromModel(model) {\n    return this.createSerializedDiff(model.params);\n  }\n}\n","/**\n * Base transformation class.\n *\n * @param {...Object} options - Each argument is an options dict for an individual input\n */\nexport class Transform {\n  constructor(...options) {\n    this.options = options;\n  }\n\n  apply(...items) {\n    return items.map((item, idx) => {\n      if (!this.options[idx]) {\n        return item;\n      }\n      return this.applyToItem(item, this.options[idx]);\n    });\n  }\n\n  applyToItem(item /* options */) {\n    // no-op\n    return item;\n  }\n}\n\n/**\n * Composes multiple transforms into one.\n *\n * @param {Transform[]} transforms - Array of transforms\n */\nexport class Compose extends Transform {\n  constructor(transforms) {\n    super();\n    this.transforms = transforms;\n  }\n\n  apply(...data) {\n    let _data = data;\n    for (let transform of this.transforms) {\n      _data = transform.apply(..._data);\n    }\n    return _data;\n  }\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","import * as tf from '@tensorflow/tfjs-core';\nimport { Transform } from '../core';\n\n/**\n * Converts numeric data to tfjs tensor of specified shape and dtype.\n *\n * @param {...Object} options - Options dict per each input\n * @param {Number[]} options.shape - Tensor shape\n * @param {String} options.dtype - Tensor dtype\n */\nexport class ToTensor extends Transform {\n  applyToItem(item, options) {\n    const { shape = null, dtype = null } = options || {};\n    return tf.tensor(item, shape, dtype);\n  }\n}\n\n/**\n * Scales tensor using mean/std.\n *\n * @param {...Object} options - Options dict per each input\n * @param {Number[]} options.mean - Mean (one item per channel)\n * @param {Number[]} options.std - Std (one item per channel)\n */\nexport class Normalize extends Transform {\n  applyToItem(item, options) {\n    const { mean, std } = options;\n    const channels = mean.length;\n    let dataChannels, dataShape;\n    if (item.rank <= 1) {\n      dataChannels = 1;\n      dataShape = item.shape;\n    } else {\n      [dataChannels, ...dataShape] = item.shape;\n    }\n\n    if (channels !== 1 && dataChannels !== channels) {\n      throw new TypeError('Number of channels does not match');\n    }\n\n    let result;\n    if (channels > 1) {\n      const means = [];\n      const stds = [];\n      for (let i = 0; i < channels; i++) {\n        means.push(tf.zeros(dataShape).add(mean[i]));\n        stds.push(tf.zeros(dataShape).add(std[i]));\n      }\n      result = item.sub(tf.stack(means)).div(tf.stack(stds));\n    } else {\n      result = item.sub(mean[0]).div(std[0]);\n    }\n    return result;\n  }\n}\n\n/**\n * One-hot encoding of tensor.\n *\n * @param {...Object} options - Options dict per each input\n * @param {Number} options.depth - Number of classes for one-hot encoding\n * @param {Boolean} options.squeeze - Do not add extra dimension\n */\nexport class OneHot extends Transform {\n  applyToItem(item, options) {\n    const { depth, squeeze = false } = options;\n    const oneHot = tf.oneHot(item, depth);\n    if (squeeze) {\n      return tf.squeeze(oneHot);\n    }\n    return oneHot;\n  }\n}\n","/**\n * Abstract class for Dataset.\n * `getItem` method and `length` getter must be defined in the child class.\n *\n * @example\n * class MyDataset extends Dataset {\n *   constructor() {\n *     super();\n *     this.data = [1, 2, 3, 4, 5].map(i => tf.tensor(i));\n *     this.labels = [0, 0, 1, 0, 1].map(i => tf.tensor(i));\n *   }\n *\n *   getItem(index) {\n *     return [this.data[index], this.labels[index]];\n *   }\n *\n *   get length() {\n *     return this.data.length;\n *   }\n * }\n *\n * const ds = new MyDataset();\n * ds[0][0].print() // => Tensor 1\n * ds[0][1].print() // => Tensor 0\n *\n * @property {Function} getItem - Returns a sample\n * @property {Number} length - Length of the datasets\n * @abstract\n */\nexport class Dataset {\n  constructor() {\n    if (new.target === Dataset) {\n      throw new TypeError('Dataset is abstract, extend it');\n    }\n    if (this.getItem === undefined) {\n      throw new TypeError('Override getItem method');\n    }\n    if (\n      Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), 'length')\n        .get === undefined\n    ) {\n      throw new TypeError('Override length getter');\n    }\n\n    // Make dataset[x] work\n    const subscriptableHandler = {\n      get: function (target, prop /* receiver */) {\n        const possibleIdx = parseInt(prop);\n        if (Number.isInteger(possibleIdx) && possibleIdx >= 0) {\n          return target.getItem(prop);\n        } else {\n          return Reflect.get(...arguments);\n        }\n      },\n    };\n\n    return new Proxy(this, subscriptableHandler);\n  }\n}\n","/**\n * Abstract Sampler class.\n * Sampler produces indices for fetching samples from the Dataset.\n *\n * @private\n */\nexport class Sampler {\n  constructor(dataset) {\n    if (new.target === Sampler) {\n      throw new TypeError('Sampler is abstract, extend it');\n    }\n    if (this[Symbol.iterator] === undefined) {\n      throw new TypeError('Override iterator method');\n    }\n    if (\n      Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this), 'length')\n        .get === undefined\n    ) {\n      throw new TypeError('Override length getter');\n    }\n    this.dataset = dataset;\n  }\n}\n\n/**\n * Sequential sampler produces indices in sequential order.\n\n * @private\n * @param {Dataset} dataset\n */\nexport class SequentialSampler extends Sampler {\n  constructor(dataset) {\n    super(dataset);\n  }\n\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.dataset.length; i++) {\n      yield i;\n    }\n  }\n\n  get length() {\n    return this.dataset.length;\n  }\n}\n\n/**\n * Random sampler produces random indices drawn from uniform distribution.\n *\n * @private\n * @param {Dataset} dataset\n */\nexport class RandomSampler extends Sampler {\n  constructor(dataset) {\n    super(dataset);\n  }\n\n  *[Symbol.iterator]() {\n    // Create & shuffle list of dataset indices\n    const indices = [...Array(this.dataset.length).keys()];\n    for (let i = indices.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [indices[i], indices[j]] = [indices[j], indices[i]];\n    }\n\n    yield* indices;\n  }\n\n  get length() {\n    return this.dataset.length;\n  }\n}\n\n/**\n * Batch sampler produces batched indices of other samplers.\n *\n * @private\n * @param {Sampler} sampler - Sampler to use for batching\n * @param {Number} batchSize - Batch size\n * @param {Boolean} dropLast - Whether the last undersized batch should be omitted\n */\nexport class BatchSampler extends Sampler {\n  constructor(sampler, batchSize, dropLast) {\n    super();\n    this.sampler = sampler;\n    this.batchSize = batchSize;\n    this.dropLast = dropLast;\n  }\n\n  *[Symbol.iterator]() {\n    let batch = [];\n    for (let idx of this.sampler) {\n      batch.push(idx);\n      if (batch.length === this.batchSize) {\n        yield batch;\n        batch = [];\n      }\n    }\n    if (batch.length > 0 && !this.dropLast) {\n      yield batch;\n    }\n  }\n\n  get length() {\n    return Math[this.dropLast ? 'floor' : 'ceil'](\n      this.sampler.length / this.batchSize\n    );\n  }\n}\n","/**\n * Base class for dataset fetchers.\n * Fetcher takes index or list of indices and returns collated samples from the dataset.\n *\n * @private\n * @param {Dataset} dataset - Dataset to fetch from\n * @param {Function} collateFn - Collate function\n * @param {Boolean} dropLast - If the last batch needs to be dropped\n */\nclass BaseDatasetFetcher {\n  constructor(dataset, collateFn, dropLast) {\n    this.dataset = dataset;\n    this.collateFn = collateFn;\n    this.dropLast = dropLast;\n  }\n\n  fetch(/* index */) {}\n}\n\n/**\n * Map-style dataset fetcher.\n * Assumes that a dataset sample can be accessed by specific index,\n * i.e. it is not iterable-style dataset.\n *\n * @private\n */\nexport class MapDatasetFetcher extends BaseDatasetFetcher {\n  constructor(dataset, collateFn, dropLast) {\n    super(dataset, collateFn, dropLast);\n  }\n\n  /**\n   * Fetches a sample or batch of samples from the dataset.\n   *\n   * @param {Number[]|Number} indices\n   * @return {*}\n   */\n  fetch(indices) {\n    let data;\n    if (Array.isArray(indices)) {\n      data = indices.map((idx) => this.dataset.getItem(idx));\n    } else {\n      data = this.dataset.getItem(indices);\n    }\n    return this.collateFn(data);\n  }\n}\n","import * as tf from '@tensorflow/tfjs-core';\n\n/**\n * Collates list of samples into one tensor.\n * When sample is a list or dictionary of tensors:\n *  `[[sampleA1, sampleB1], [sampleA2, sampleB2], ... ]`\n *  `[{a: sampleA1, b: sampleB1}, {a: sampleA2, b: sampleB2}, ... ]`\n * result is a list or dict of collated samples:\n *  `[batchA, batchB]`\n *  `{a: batchA, b: batchB}`\n *\n * @param {Array<tf.Tensor>|Array<Array<tf.Tensor>>|Object} batch - List of data samples to collate\n * @return {tf.Tensor|{}|tf.Tensor[]}\n */\nexport const tfjs_collate = (batch) => {\n  const elem = batch[0];\n  if (elem instanceof tf.Tensor) {\n    // List of Tensors to stack\n    return tf.stack(batch, 0);\n  } else if (Array.isArray(elem)) {\n    // Sample is a list, we need to collate each element of it\n    const params = [];\n    for (let i = 0; i < elem.length; i++) {\n      params.push(tfjs_collate(batch.map((item) => item[i])));\n    }\n    return params;\n  } else if (typeof batch === 'object' && !!batch) {\n    // Sample is an object, we need to collate each property of it\n    const dict = {};\n    for (let key of Object.keys(elem)) {\n      dict[key] = tfjs_collate(batch.map((item) => item[key]));\n    }\n    return dict;\n  }\n};\n","import { SequentialSampler, BatchSampler, RandomSampler } from './sampler';\nimport { MapDatasetFetcher } from './fetch';\nimport { tfjs_collate } from './collate';\n\n/**\n * DataLoader controls fetching the data from the Dataset,\n * including shuffling and batching.\n * Implements iterable protocol to iterate over data samples.\n *\n * Note: currently it only supports tf.Tensor data in the dataset,\n * and collates batches using TFJS.\n *\n * @example\n * const loader = new DataLoader({dataset, batchSize: 32})\n * consle.log('number of batches: ', loader.length)\n * for (let batch of loader) {\n *   // ...\n * }\n *\n * @param {Object} parameters\n * @param {Dataset} parameters.dataset - Dataset to load\n * @param {Number} parameters.batchSize - Batch size for batching\n * @param {Boolean} parameters.shuffle - Shuffle the Dataset\n * @param {Boolean} parameters.dropLast - Skip the last chunk if it is smaller than the `batchSize`\n *\n * @property {Number} length - Data length.\n */\nexport class DataLoader {\n  constructor({ dataset, batchSize = 1, shuffle = true, dropLast = false }) {\n    this.dataset = dataset;\n    this.batchSize = batchSize;\n    this.shuffle = shuffle;\n    this.dropLast = dropLast;\n\n    if (this.shuffle) {\n      this.sampler = new RandomSampler(this.dataset);\n    } else {\n      this.sampler = new SequentialSampler(this.dataset);\n    }\n\n    this.batchSampler = new BatchSampler(\n      this.sampler,\n      this.batchSize,\n      this.dropLast\n    );\n\n    // Default collate function supports TFJS only\n    this.collateFn = tfjs_collate;\n  }\n\n  /**\n   * Iterator producing data batches.\n   * @return {*}\n   */\n  *[Symbol.iterator]() {\n    const iterator = new SimpleDataloaderIterator(this);\n    yield* iterator;\n  }\n\n  /**\n   * Returns indices sampler.\n   * @private\n   * @return {Sampler}\n   */\n  get indexSampler() {\n    return this.batchSampler;\n  }\n\n  get length() {\n    return this.indexSampler.length;\n  }\n}\n\n/**\n * Base class for DataLoader iterator.\n *\n * @private\n * @param {DataLoader} loader - DataLoader to iterate\n */\nclass BaseDataLoaderIterator {\n  constructor(loader) {\n    this.indexSampler = loader.indexSampler;\n    this.collateFn = loader.collateFn;\n    this.datasetFetcher = new MapDatasetFetcher(\n      loader.dataset,\n      loader.collateFn,\n      loader.dropLast\n    );\n  }\n}\n\n/**\n * Simple Dataloader iterator that sequentially fetches\n * dataset samples as a single worker.\n *\n * @private\n * @param {DataLoader} loader - DataLoader to iterate\n */\nclass SimpleDataloaderIterator extends BaseDataLoaderIterator {\n  constructor(loader) {\n    super(loader);\n  }\n\n  *[Symbol.iterator]() {\n    for (let index of this.indexSampler) {\n      yield this.datasetFetcher.fetch(index);\n    }\n  }\n}\n","import EventObserver from './events';\nimport Logger from './logger';\nimport { PlanInputSpec, PlanOutputSpec } from './types/plan';\nimport SyftModel from './syft-model';\nimport { base64Encode, base64Decode } from './utils/base64';\n\nimport * as tf from '@tensorflow/tfjs-core';\nimport { DataLoader } from './data';\n\n/**\n * Class that contains training loop logic.\n *\n * @property {SyftModel} originalModel - Original model.\n * @property {SyftModel} currentModel - Trained model.\n * @property {number} epoch - Current epoch.\n * @property {number} batchIdx - Current batch.\n * @property {boolean} stopped - Is the training currently stopped.\n */\nexport class PlanTrainer {\n  static EVENT_TRAINING_START = 'start';\n  static EVENT_TRAINING_END = 'end';\n  static EVENT_TRAINING_STOP = 'stop';\n  static EVENT_EPOCH_START = 'epochStart';\n  static EVENT_EPOCH_END = 'epochEnd';\n  static EVENT_BATCH_START = 'batchStart';\n  static EVENT_BATCH_END = 'batchEnd';\n\n  /**\n   * @hideconstructor\n   * @param {Object} parameters - Dictionary of training parameters.\n   * @param {Syft} parameters.worker - Syft Worker.\n   * @param {Plan} parameters.plan - Training Plan to execute.\n   * @param {[PlanInputSpec]} parameters.inputs - Plan input specification.\n   * @param {[PlanOutputSpec]} parameters.outputs - Plan output specification.\n   * @param {SyftModel} parameters.model - Model to train.\n   * @param {DataLoader|tf.Tensor} parameters.data - DataLoader or plain tensor containing training data.\n   * @param {tf.Tensor} [parameters.target] - Training labels (optional if `data` is DataLoader).\n   * @param {number} parameters.epochs - Number of epochs.\n   * @param {number} [parameters.batchSize] - Batch size. Optional if `data` is DataLoader.\n   * @param {number} [parameters.stepsPerEpoch] - Optional max number of steps in epoch.\n   * @param {Object} [parameters.clientConfig] - Optional dictionary of additional client configuration parameters.\n   * @param {Object} [parameters.checkpoint] - Checkpoint.\n   * @param {Object} [parameters.events] - Optional dictionary of events.\n   * @param {Function} [parameters.events.start] - Training start event handler.\n   * @param {Function} [parameters.events.end] - Training end event handler.\n   * @param {Function} [parameters.events.stop] - Training stop event handler.\n   * @param {Function} [parameters.events.epochStart] - Training epoch start event handler.\n   * @param {Function} [parameters.events.epochEnd] - Training epoch end event handler.\n   * @param {Function} [parameters.events.batchStart] - Training batch start event handler.\n   * @param {Function} [parameters.events.batchEnd] - Training batch end event handler.\n   */\n  constructor({\n    worker,\n    plan,\n    inputs,\n    outputs,\n    model,\n    data,\n    target,\n    epochs,\n    batchSize,\n    stepsPerEpoch = null,\n    clientConfig = {},\n    checkpoint = null,\n    events = {},\n  }) {\n    this.worker = worker;\n\n    this.plan = plan;\n    this.planInputs = inputs;\n    this.planOutputs = outputs;\n\n    this.originalModel = model;\n\n    this.data = data;\n    this.target = target;\n\n    this.epochs = epochs || 1;\n    this.batchSize = data instanceof DataLoader ? data.batchSize : batchSize;\n    this.stepsPerEpoch = stepsPerEpoch;\n    this.clientConfig = clientConfig;\n    this.events = events;\n\n    this.logger = new Logger();\n    this.observer = new EventObserver();\n\n    // State\n    this.currentModel = null;\n    this.epoch = 0;\n    this.batchIdx = 0;\n    this.stopped = false;\n\n    // Register event handlers.\n    if (events && typeof events === 'object') {\n      for (let eventName of Object.keys(events)) {\n        this.on(eventName, events[eventName]);\n      }\n    }\n\n    if (checkpoint) {\n      this.applyCheckpoint(checkpoint);\n    }\n  }\n\n  /**\n   * Registers an event listener to the PlanTrainer's event observer.\n   *\n   * Available events: `start`, `end`, `epochStart`, `epochEnd`, `batchStart`, `batchEnd`.\n   *\n   * @param {string} event - Event name.\n   * @param {Function} handler - Event listener.\n   */\n  on(event, handler) {\n    let events = [\n      PlanTrainer.EVENT_TRAINING_START,\n      PlanTrainer.EVENT_TRAINING_END,\n      PlanTrainer.EVENT_TRAINING_STOP,\n      PlanTrainer.EVENT_EPOCH_START,\n      PlanTrainer.EVENT_EPOCH_END,\n      PlanTrainer.EVENT_BATCH_START,\n      PlanTrainer.EVENT_BATCH_END,\n    ];\n    if (events.includes(event)) {\n      this.observer.subscribe(event, handler.bind(this));\n    }\n  }\n\n  /**\n   * Starts the training loop.\n   *\n   * @fires PlanTrainer#start\n   * @fires PlanTrainer#end\n   * @fires PlanTrainer#stop\n   * @fires PlanTrainer#epochStart\n   * @fires PlanTrainer#epochEnd\n   * @fires PlanTrainer#batchStart\n   * @fires PlanTrainer#batchEnd\n   */\n  async start(resume = false) {\n    let startEpoch = 0;\n    let startBatch = 0;\n    let startModel = this.originalModel;\n\n    if (this.stopped && resume) {\n      this.stopped = false;\n      startEpoch = this.epoch;\n      startBatch = this.batchIdx;\n      startModel = this.currentModel;\n    }\n\n    // Copy model params to preserve original.\n    let modelParams = startModel.params.map((p) => p.clone());\n\n    /**\n     * `start` event.\n     * Triggered on training start.\n     * @event PlanTrainer#start\n     * @type {Object}\n     */\n    this.observer.broadcast(PlanTrainer.EVENT_TRAINING_START, {});\n\n    // Main training loop.\n    for (let epoch = startEpoch; epoch < this.epochs; epoch++) {\n      this.epoch = epoch;\n      this.batchIdx = startBatch;\n      // Reset start batch after it is used\n      startBatch = 0;\n\n      /**\n       * `epochStart` event.\n       * Triggered before epoch start.\n       * @event PlanTrainer#epochStart\n       * @type {Object}\n       * @property {number} epoch - Current epoch.\n       */\n      this.observer.broadcast(PlanTrainer.EVENT_EPOCH_START, { epoch });\n      if (this._isStopped()) {\n        return;\n      }\n\n      let batch;\n      while ((batch = this._nextBatch()) !== undefined) {\n        /**\n         * `batchStart` event.\n         * Triggered before batch start.\n         * @event PlanTrainer#batchStart\n         * @type {Object}\n         * @property {number} epoch - Current epoch.\n         * @property {number} batch - Current batch.\n         */\n        this.observer.broadcast(PlanTrainer.EVENT_BATCH_START, {\n          epoch,\n          batch: this.batchIdx,\n        });\n        if (this._isStopped()) {\n          return;\n        }\n\n        // Prepare data for Plan arguments\n        let argData = {};\n        argData[PlanInputSpec.TYPE_BATCH_SIZE] = this.batchSize;\n        argData[PlanInputSpec.TYPE_MODEL_PARAM] = modelParams;\n        argData[PlanInputSpec.TYPE_CLIENT_CONFIG_PARAM] = this.clientConfig;\n        if (this.data instanceof DataLoader) {\n          argData[PlanInputSpec.TYPE_DATA] = batch;\n        } else {\n          argData[PlanInputSpec.TYPE_DATA] = batch[0];\n          argData[PlanInputSpec.TYPE_TARGET] = batch[1];\n        }\n\n        // Execute the Plan\n        const planArgs = PlanInputSpec.resolve(this.planInputs, argData);\n        const planRawOutput = await this.plan.execute(this.worker, ...planArgs);\n        const output = PlanOutputSpec.resolve(this.planOutputs, planRawOutput);\n\n        // Set updated model params for the next run.\n        if (\n          Object.hasOwnProperty.call(output, PlanOutputSpec.TYPE_MODEL_PARAM)\n        ) {\n          const updatedModelParams = output[PlanOutputSpec.TYPE_MODEL_PARAM];\n          for (let i = 0; i < updatedModelParams.length; i++) {\n            modelParams[i].dispose();\n            modelParams[i] = updatedModelParams[i];\n          }\n        }\n\n        // Update current model.\n        this.currentModel = new SyftModel({\n          worker: this.worker,\n          modelParameters: modelParams,\n        });\n\n        // Populate loss/metrics into status.\n        const status = { epoch, batch: this.batchIdx };\n        if (Object.hasOwnProperty.call(output, PlanOutputSpec.TYPE_LOSS)) {\n          status['loss'] = await output[PlanOutputSpec.TYPE_LOSS].array();\n        }\n        if (Object.hasOwnProperty.call(output, PlanOutputSpec.TYPE_METRIC)) {\n          status['metrics'] = {};\n          for (let metric of Object.keys(output[PlanOutputSpec.TYPE_METRIC])) {\n            status['metrics'][metric] = await output[\n              PlanOutputSpec.TYPE_METRIC\n            ][metric].array();\n          }\n        }\n\n        // Free mem.\n        batch.map((item) => item.dispose());\n\n        /**\n         * `batchEnd` event.\n         * Triggered after batch end.\n         * @event PlanTrainer#batchEnd\n         * @type {Object}\n         * @property {number} epoch - Current epoch.\n         * @property {number} batch - Current batch.\n         * @property {number} [loss] - Batch loss.\n         * @property {Object} [metrics] - Dictionary containing metrics (if any defined in the `outputs`).\n         */\n        this.observer.broadcast(PlanTrainer.EVENT_BATCH_END, status);\n\n        // Process other browser events.\n        await tf.nextFrame();\n\n        // Limits number of steps per epoch\n        if (\n          typeof this.stepsPerEpoch === 'number' &&\n          this.batchIdx >= this.stepsPerEpoch\n        ) {\n          break;\n        }\n\n        this.batchIdx++;\n      }\n\n      /**\n       * `epochEnd` event.\n       * Triggered after epoch end.\n       * @event PlanTrainer#epochEnd\n       * @property {number} epoch - Current epoch.\n       */\n      this.observer.broadcast(PlanTrainer.EVENT_EPOCH_END, { epoch });\n    }\n\n    /**\n     * `end` event.\n     * Triggered after training end.\n     * @event PlanTrainer#end\n     */\n    this.observer.broadcast(PlanTrainer.EVENT_TRAINING_END, {});\n  }\n\n  /**\n   * @private\n   */\n  _isStopped() {\n    // Stop training\n    if (this.stopped) {\n      /**\n       * `stop` event.\n       * Triggered when training was stopped.\n       * @event PlanTrainer#stop\n       * @property {Object}\n       */\n      this.observer.broadcast(PlanTrainer.EVENT_TRAINING_STOP, {});\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the next batch of data from DataLoader or tensor.\n   * @return {tf.Tensor[]|undefined}\n   * @private\n   */\n  _nextBatch() {\n    if (this.data instanceof DataLoader) {\n      if (!this.dataIterator) {\n        this.dataIterator = this.data[Symbol.iterator]();\n      }\n\n      // Stop if current batch is larger than data length\n      if (this.batchIdx >= this.data.length) {\n        return undefined;\n      }\n\n      return this.dataIterator.next().value;\n    } else {\n      // Number of batches in data\n      const numBatches = Math.floor(this.data.shape[0] / this.batchSize);\n      // Stop if current batch is larger than data length\n      if (this.batchIdx >= numBatches) {\n        return undefined;\n      }\n\n      // Slice a batch.\n      const dataBatch = tf.slice(\n        this.data,\n        this.batchIdx * this.batchSize,\n        this.batchSize\n      );\n      const targetBatch = tf.slice(\n        this.target,\n        this.batchIdx * this.batchSize,\n        this.batchSize\n      );\n      return [dataBatch, targetBatch];\n    }\n  }\n\n  /**\n   * Stops training loop and returns training checkpoint.\n   *\n   * @returns {Promise<PlanTrainerCheckpoint>}\n   */\n  stop() {\n    return new Promise((resolve) => {\n      this.observer.subscribe(\n        PlanTrainer.EVENT_TRAINING_STOP,\n        () => {\n          resolve(this.createCheckpoint());\n        },\n        1\n      );\n      this.stopped = true;\n    });\n  }\n\n  /**\n   * Resume stopped training process.\n   */\n  async resume() {\n    if (this.stopped) {\n      await this.start(true);\n    }\n  }\n\n  /**\n   * Creates checkpoint using current training state.\n   *\n   * @return {PlanTrainerCheckpoint}\n   */\n  createCheckpoint() {\n    return new PlanTrainerCheckpoint({\n      epochs: this.epochs,\n      stepsPerEpoch: this.stepsPerEpoch,\n      batchSize: this.batchSize,\n      clientConfig: this.clientConfig,\n      originalModel: this.originalModel,\n      epoch: this.epoch,\n      batch: this.batchIdx,\n      currentModel: this.currentModel,\n    });\n  }\n\n  /**\n   * Restores `PlanTrainer` state from checkpoint.\n   *\n   * @param {PlanTrainerCheckpoint} checkpoint\n   */\n  applyCheckpoint(checkpoint) {\n    // Set values from checkpoint\n    this.epochs = checkpoint.epochs;\n    this.epoch = checkpoint.epoch;\n    this.stepsPerEpoch = checkpoint.stepsPerEpoch;\n    this.batchIdx = checkpoint.batch;\n    this.batchSize = checkpoint.batchSize;\n    this.currentModel = checkpoint.currentModel;\n    this.clientConfig = checkpoint.clientConfig;\n\n    // Mark training as stopped\n    this.stopped = true;\n  }\n}\n\n/**\n * Object that stores `PlanTrainer` state, to resume training from it.\n *\n * @param {Object} parameters - Dictionary of parameters\n * @param {number} parameters.epochs - Total number of epochs\n * @param {number} [parameters.stepsPerEpoch] - Max steps per epoch\n * @param {number} parameters.batchSize - Batch size\n * @param {Object} parameters.clientConfig - Client config\n * @param {number} parameters.epoch - Current epoch\n * @param {number} parameters.batch - Current batch number\n * @param {SyftModel} parameters.currentModel - Current state of the Model\n */\nexport class PlanTrainerCheckpoint {\n  constructor({\n    epochs,\n    stepsPerEpoch,\n    batchSize,\n    clientConfig,\n    epoch,\n    batch,\n    currentModel,\n  }) {\n    this.epochs = epochs;\n    this.stepsPerEpoch = stepsPerEpoch;\n    this.batchSize = batchSize;\n    this.clientConfig = clientConfig;\n    this.epoch = epoch;\n    this.batch = batch;\n    this.currentModel = currentModel;\n  }\n\n  /**\n   * Returns `PlanTrainerCheckpoint` serialized to plain Object.\n   *\n   * @return {Promise<Object>}\n   */\n  async toJSON() {\n    return {\n      epochs: this.epochs,\n      stepsPerEpoch: this.stepsPerEpoch,\n      batchSize: this.batchSize,\n      clientConfig: this.clientConfig || {},\n      epoch: this.epoch,\n      batch: this.batch,\n      currentModelBase64: base64Encode(await this.currentModel.toProtobuf()),\n    };\n  }\n\n  /**\n   * Creates `PlanTrainerCheckpoint` from object.\n   *\n   * @param {Syft} worker - Syft Worker\n   * @param {Object} obj - Object containing checkpoint data\n   * @return {PlanTrainerCheckpoint}\n   */\n  static fromJSON(worker, obj) {\n    const currentModel = new SyftModel({\n      worker,\n      serializedModelParameters: base64Decode(obj.currentModelBase64),\n    });\n    return new PlanTrainerCheckpoint({\n      ...obj,\n      currentModel,\n    });\n  }\n}\n","import EventObserver from './events';\nimport { protobuf, unserialize } from './protobuf';\nimport { base64Encode } from './utils/base64';\nimport { CYCLE_STATUS_ACCEPTED, CYCLE_STATUS_REJECTED } from './_constants';\nimport { GridUnknownCycleStatusError, PlanLoadFailedError } from './_errors';\nimport SyftModel from './syft-model';\nimport Logger from './logger';\nimport { PlanTrainer } from './plan-trainer';\n\n/**\n * Job represents a single training cycle done by the client.\n *\n * @property {Object.<string, Plan>} plans - Plans dictionary.\n * @property {Object.<string, Protocol>} protocols - [not implemented] Protocols dictionary.\n * @property {SyftModel} model - Model.\n */\nexport default class Job {\n  /**\n   * @hideconstructor\n   * @param {object} options\n   * @param {Syft} options.worker - Instance of Syft client.\n   * @param {string} options.modelName - Model name.\n   * @param {string} options.modelVersion - Model version.\n   * @param {string} options.authToken - Authentication token for the model.\n   * @param {GridAPIClient} options.gridClient - Instance of GridAPIClient.\n   */\n  constructor({ worker, modelName, modelVersion, authToken, gridClient }) {\n    this.worker = worker;\n    this.modelName = modelName;\n    this.modelVersion = modelVersion;\n    this.authToken = authToken;\n    this.grid = gridClient;\n    this.logger = new Logger();\n    this.observer = new EventObserver();\n\n    // Parameters to be loaded from PyGrid\n    this.worker_id = null;\n    this.requires_speed_test = false;\n    this.model = null;\n    this.plans = {};\n    this.protocols = {};\n    // Parameter for hosting request_key\n    this.cycleParams = {};\n    this.clientConfig = {};\n  }\n\n  /**\n   * Registers an event listener to the Job's event observer.\n   *\n   * Available events: `accepted`, `rejected`, `error`.\n   *\n   * @param {string} event - Event name.\n   * @param {Function} handler - Event listener.\n   */\n  on(event, handler) {\n    if (['accepted', 'rejected', 'error'].includes(event)) {\n      this.observer.subscribe(event, handler.bind(this));\n    }\n  }\n\n  /**\n   * Initializes the Job with provided training cycle params and\n   * downloads the model, plans, and protocols from PyGrid.\n   *\n   * @private\n   * @param {Object} cycleParams\n   * @returns {Promise<void>}\n   */\n  async initCycle(cycleParams) {\n    this.logger.log(\n      `Cycle initialization with params: ${JSON.stringify(cycleParams)}`\n    );\n    this.cycleParams = cycleParams;\n    this.clientConfig = cycleParams.client_config;\n\n    // Load model\n    const modelData = await this.grid.getModel(\n      this.worker_id,\n      cycleParams.request_key,\n      cycleParams.model_id\n    );\n    this.model = new SyftModel({\n      worker: this.worker,\n      serializedModelParameters: modelData,\n    });\n\n    // Load all plans\n    for (let planName of Object.keys(cycleParams.plans)) {\n      const planId = cycleParams.plans[planName];\n      const planBinary = await this.grid.getPlan(\n        this.worker_id,\n        cycleParams.request_key,\n        planId\n      );\n      try {\n        this.plans[planName] = unserialize(\n          this.worker,\n          planBinary,\n          protobuf.syft_proto.execution.v1.Plan\n        );\n      } catch (e) {\n        throw new PlanLoadFailedError(planName, e.message);\n      }\n    }\n\n    // Load all protocols\n    for (let protocolName of Object.keys(cycleParams.protocols)) {\n      const protocolId = cycleParams.protocols[protocolName];\n      const protocolBinary = await this.grid.getProtocol(\n        this.worker_id,\n        cycleParams.request_key,\n        protocolId\n      );\n      this.protocols[protocolName] = unserialize(\n        this.worker,\n        protocolBinary,\n        protobuf.syft_proto.execution.v1.Protocol\n      );\n    }\n  }\n\n  /**\n   * Starts the Job by executing following actions:\n   *  * Authenticates for given FL model.\n   *  * Meters connection speed to PyGrid (if requested by PyGrid).\n   *  * Registers into training cycle on PyGrid.\n   *  * Retrieves cycle and client parameters.\n   *  * Downloads the model, plans, protocols from PyGrid.\n   *  * Fires `accepted` event on success.\n   *\n   * @fires Job#accepted\n   * @fires Job#rejected\n   * @fires Job#error\n   * @returns {Promise<void>}\n   */\n  async start() {\n    let cycleParams;\n\n    try {\n      // Authenticate\n      const authResponse = await this.grid.authenticate(\n        this.modelName,\n        this.modelVersion,\n        this.authToken\n      );\n      this.worker_id = authResponse.worker_id;\n      // True if PyGrid requested to meter the speed\n      this.requires_speed_test = authResponse.requires_speed_test || false;\n\n      let [ping, download, upload] = [0, 0, 0];\n      // Test connection speed if required\n      if (this.requires_speed_test) {\n        ({ ping, download, upload } = await this.grid.getConnectionSpeed(\n          this.worker_id\n        ));\n      }\n\n      // Client request to join an active federated learning cycle on PyGrid\n      cycleParams = await this.grid.requestCycle(\n        this.worker_id,\n        this.modelName,\n        this.modelVersion,\n        ping,\n        download,\n        upload\n      );\n\n      // If the client's job request is accepted, load the model, plans, protocols, etc.\n      if (cycleParams.status === CYCLE_STATUS_ACCEPTED) {\n        this.logger.log(\n          `Accepted into cycle with params: ${JSON.stringify(\n            cycleParams,\n            null,\n            2\n          )}`\n        );\n        await this.initCycle(cycleParams);\n      }\n\n      // Throw an error if the request is neither accepted nor rejected\n      if (\n        ![CYCLE_STATUS_ACCEPTED, CYCLE_STATUS_REJECTED].includes(\n          cycleParams.status\n        )\n      ) {\n        throw new GridUnknownCycleStatusError(cycleParams.status);\n      }\n    } catch (error) {\n      /**\n       * `error` event.\n       * Triggered for plethora of error conditions.\n       *\n       * @event Job#error\n       */\n      this.observer.broadcast('error', error);\n      return;\n    }\n\n    // Trigger accepted or rejected event outside try/catch.\n    switch (cycleParams.status) {\n      case CYCLE_STATUS_ACCEPTED:\n        /**\n         * `accepted` event.\n         * Triggered when PyGrid accepts the client into training cycle.\n         *\n         * @event Job#accepted\n         * @type {Object}\n         * @property {SyftModel} model - Instance of SyftModel.\n         * @property {Object} clientConfig - Client configuration returned by PyGrid.\n         */\n        this.observer.broadcast('accepted', {\n          model: this.model,\n          clientConfig: this.clientConfig,\n        });\n        break;\n\n      case CYCLE_STATUS_REJECTED:\n        this.logger.log(\n          `Rejected from cycle with timeout: ${cycleParams.timeout}`\n        );\n\n        /**\n         * `rejected` event.\n         * Triggered when PyGrid rejects the client.\n         *\n         * @event Job#rejected\n         * @type {Object}\n         * @property {number|null} timeout - Time in seconds to retry. Empty when the FL model is not trainable anymore.\n         */\n        this.observer.broadcast('rejected', {\n          timeout: cycleParams.timeout,\n        });\n        break;\n    }\n  }\n\n  /**\n   * Alias for `Job.start`\n   *\n   * @see Job.start\n   * @returns {Promise<void>}\n   */\n  async request() {\n    return this.start();\n  }\n\n  /**\n   * Submits the model diff to PyGrid.\n   *\n   * @param {ArrayBuffer} diff - Serialized difference between original and trained model parameters.\n   * @returns {Promise<void>}\n   */\n  async report(diff) {\n    await this.grid.submitReport(\n      this.worker_id,\n      this.cycleParams.request_key,\n      base64Encode(diff)\n    );\n  }\n\n  /**\n   * Trains the model against specified plan and using specified parameters.\n   * Returns `PlanTrainer` object to have a handle on training process.\n   *\n   * @param {string} trainingPlan - Training Plan name.\n   * @param {Object} parameters - Dictionary of training parameters.\n   * @param {[PlanInputSpec]}  parameters.inputs - List of training Plan input arguments\n   * @param {[PlanOutputSpec]} parameters.outputs - List of training Plan outputs\n   * @param {tf.Tensor} parameters.data - Tensor containing training data\n   * @param {tf.Tensor} parameters.target - Tensor containing training targets\n   * @param {number} [parameters.epochs] - Epochs to train (if not specified, taken from Job)\n   * @param {number} [parameters.batchSize] - Batch size (if not specified, taken from Job)\n   * @param {number} [parameters.stepsPerEpoch] - Max number of steps per epoch (if not specified, taken from Job)\n   * @param {PlanTrainerCheckpoint} [parameters.checkpoint] - Checkpoint\n   * @param {Object} [parameters.events] - List of event listeners\n   * @param {Function} [parameters.events.start] - On training start listener\n   * @param {Function} [parameters.events.end] - On training end listener\n   * @param {Function} [parameters.events.epochStart] - On epoch start listener\n   * @param {Function} [parameters.events.epochEnd] - On epoch end listener\n   * @param {Function} [parameters.events.batchStart] - On batch start listener\n   * @param {Function} [parameters.events.batchEnd] - On batch end listener\n   * @returns {PlanTrainer}\n   */\n  train(trainingPlan, parameters) {\n    const trainingParams = {\n      clientConfig: this.clientConfig,\n      batchSize: this.clientConfig.batch_size,\n      epochs: this.clientConfig.max_epochs || 1,\n      stepsPerEpoch: this.clientConfig.max_updates || null,\n      ...parameters,\n    };\n\n    const trainer = new PlanTrainer({\n      worker: this.worker,\n      plan: this.plans[trainingPlan],\n      model: this.model,\n      ...trainingParams,\n    });\n\n    // For convenience of assigning event handlers, start training in the next macrotask\n    setTimeout(() => {\n      trainer.start(typeof parameters.checkpoint !== 'undefined');\n    }, 0);\n    return trainer;\n  }\n}\n","import EventObserver from './events';\nimport Logger from './logger';\nimport GridAPIClient from './grid-api-client';\nimport Job from './job';\nimport ObjectRegistry from './object-registry';\n\n/**\n * Syft client for model-centric federated learning.\n *\n * @param {Object} options\n * @param {string} options.url - Full URL to PyGrid app (`ws` and `http` schemas supported).\n * @param {boolean} options.verbose - Whether to enable logging and allow unsecured PyGrid connection.\n * @param {Object} options.peerConfig - [not implemented] WebRTC peer config used with RTCPeerConnection.\n *\n * @example\n *\n * const client = new Syft({url: \"ws://localhost:5000\", verbose: true})\n * const job = client.newJob({modelName: \"mnist\", modelVersion: \"1.0.0\"})\n * job.on('accepted', async ({model, clientConfig}) => {\n *   // Execute training\n *   const training = this.train('...', { ... })\n *   training.on('end', async () => {\n *     const diff = await model.createSerializedDiffFromModel(training.currentModel)\n *     await this.report(diff)\n *   }\n * })\n * job.on('rejected', ({timeout}) => {\n *   // Retry later or stop\n * })\n * job.on('error', (err) => {\n *   // Handle errors\n * })\n * job.request()\n */\nexport default class Syft {\n  constructor({ url, verbose, peerConfig }) {\n    // Create verbose logging if verbose value is true\n    this.logger = new Logger('syft.js', verbose);\n\n    // Force connection to be secure if verbose value is false\n    this.verbose = verbose;\n    this.gridClient = new GridAPIClient({ url, allowInsecureUrl: verbose });\n\n    // Create objects registry\n    this.objects = new ObjectRegistry();\n\n    // Create event listeners\n    this.observer = new EventObserver();\n\n    this.peerConfig = peerConfig;\n  }\n\n  /**\n   * Instantiates the new Job with given options.\n   *\n   * @param {Object} options\n   * @param {string} options.modelName - FL Model name.\n   * @param {string} options.modelVersion - FL Model version.\n   * @param {string} options.authToken - FL Model authentication token.\n   * @returns {Job}\n   */\n  newJob({ modelName, modelVersion, authToken }) {\n    return new Job({\n      worker: this,\n      modelName,\n      modelVersion,\n      authToken,\n      gridClient: this.gridClient,\n    });\n  }\n}\n"],"names":["SOCKET_STATUS","SOCKET_PING","GET_PROTOCOL","CYCLE_STATUS_ACCEPTED","CYCLE_STATUS_REJECTED","WEBRTC_JOIN_ROOM","WEBRTC_INTERNAL_MESSAGE","WEBRTC_PEER_LEFT","WEBRTC_DATACHANNEL_CHUNK_SIZE","WEBRTC_DATACHANNEL_MAX_BUFFER","WEBRTC_DATACHANNEL_BUFFER_TIMEOUT","WEBRTC_DATACHANNEL_MAX_BUFFER_TIMEOUTS","WEBRTC_PEER_CONFIG","iceServers","urls","WEBRTC_PEER_OPTIONS","optional","DtlsSrtpKeyAgreement","EventObserver","observers","type","func","expires","push","eventType","filter","i","data","forEach","observer","Logger","system","verbose","instance","message","output","Date","now","console","log","undefined","require$$0","createRandomBuffer","size","Promise","resolve","int32BuffSize","Math","ceil","buff","Uint32Array","int32Max","pow","randomInt32","random","int32ChunkSize","fillNextChunk","offset","stop","min","setTimeout","buffer","SpeedTest","downloadUrl","uploadUrl","pingUrl","maxUploadSizeMb","maxTestTimeSec","bwAvgWindow","bwLowJitterThreshold","bwMaxLowJitterConsecutiveMeasures","xhr","isUpload","reject","timeoutHandler","prevTime","prevSize","avgCollector","AvgCollector","avgWindow","lowJitterThreshold","maxLowJitterConsecutiveMeasures","req","upload","finish","error","clearTimeout","onprogress","onload","onerror","abort","getAvg","Error","onreadystatechange","readyState","e","loaded","time","deltaSize","deltaTime","speed","Number","isFinite","canStop","collect","XMLHttpRequest","result","meterXhr","open","send","currXhr","runPing","startTime","ping","measuresCount","prevAvg","avg","lowJitterConsecutiveMeasures","name","value","_typeof","NoDetailerError","d","NotEnoughArgsError","passed","expected","MissingVariableError","CannotFindCommandError","command","GridUnknownCycleStatusError","status","GridError","ModelLoadFailedError","PlanLoadFailedError","planName","ProtobufUnserializeFailedError","pbType","base64Decode","str","Uint8Array","decode","base64Encode","array","encode","HTTP_PATH_VERB","GridAPIClient","url","allowInsecureUrl","transport","match","wsUrl","httpUrl","replace","ws","wsMessages","logger","responseTimeout","_handleWsMessage","bind","_handleWsError","_handleWsClose","modelName","modelVersion","authToken","_send","model_name","model_version","auth_token","response","workerId","download","worker_id","model","version","requestKey","modelId","_sendHttp","request_key","model_id","planId","plan_id","receive_operations_as","protocolId","diff","speedTest","encodeURIComponent","getPing","all","getDownloadSpeed","getUploadSpeed","path","_sendWs","method","query","Object","keys","map","k","join","fetch","mode","headers","body","JSON","stringify","ok","statusText","json","res","_initWs","request_id","cleanUp","unsubscribe","onError","onClose","onMessage","event","subscribe","WebSocket","onopen","onclose","onmessage","parse","hasOwnProperty","call","handler","broadcast","util","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","LongBits","BufferWriter","Writer","utf8","BufferReader","Reader","$protobuf","root","Protocol","id","tags","description","planAssigments","workersResolved","plans","worker","pb","planAssignments","plan_assignments","item","getPbId","workers_resolved","Plan","role","execute","unbufferize","PlanInputSpec","index","specs","args","spec","TYPE_VALUE","TYPE_CLIENT_CONFIG_PARAM","PlanOutputSpec","out","ObjectRegistry","objects","gc","obj","tf","dispose","key","objectRegistry","set","get","Role","actions","state","placeholders","input_placeholder_ids","output_placeholder_ids","planScope","load","inputPlaceholders","getInputPlaceholders","outputPlaceholders","getOutputPlaceholders","argsLength","length","datum","tensors","ph","idx","action","returnIds","returnPlaceholderIds","resolvedResultingTensors","placeholder","setGc","clear","placeholdersArray","State","t","toTfTensor","tensorsPb","tensor","protobuf","syft_proto","execution","v1","StateTensor","create","torch_tensor","bufferize","placeholdersPb","stateTensor","Message","contents","ObjectMessage","TorchTensor","shape","dtype","chain","gradChain","_tfTensor","tensorData","types","torch","Size","dims","pbTensorData","TensorData","pbId","serializer","Serializer","SERIALIZER_ALL","contents_data","grad_chain","flat","flatten","TorchParameter","requiresGrad","grad","requires_grad","PlaceholderId","Placeholder","expected_shape","syft","Shape","Array","isArray","PointerTensor","idAtLocation","locationId","pointToAttr","garbageCollectData","ComputationAction","target","kwargs","scope","haveValuesForAllArgs","enoughInfo","arg","has","toTFTensor","getTensorByRef","reference","pullTensorsFromArgs","resolvedArgs","tensorByRef","self","functionName","split","pop","values","return_ids","return_placeholder_ids","PB_CLASS_MAP","PB_TO_UNBUFFERIZER","initMappings","messaging","Parameter","reduce","pbObj","includes","constructor","Id","Arg","Long","toNumber","ArgList","unbufferizer","unserialize","bin","ArrayBuffer","serialize","err","verify","field","toString","id_int","id_str","SyftModel","serializedModelParameters","modelParameters","params","getTfTensors","fromTfTensor","updatedModelParams","paramDiff","sub","createSerializedDiff","Transform","options","items","applyToItem","Compose","transforms","_data","transform","apply","ToTensor","Normalize","mean","std","channels","dataChannels","dataShape","rank","TypeError","means","stds","add","div","OneHot","depth","squeeze","oneHot","Dataset","getItem","getOwnPropertyDescriptor","getPrototypeOf","subscriptableHandler","prop","possibleIdx","parseInt","isInteger","Reflect","arguments","Proxy","Sampler","dataset","Symbol","iterator","SequentialSampler","RandomSampler","indices","j","floor","BatchSampler","sampler","batchSize","dropLast","batch","BaseDatasetFetcher","collateFn","MapDatasetFetcher","tfjs_collate","elem","dict","DataLoader","shuffle","batchSampler","SimpleDataloaderIterator","indexSampler","BaseDataLoaderIterator","loader","datasetFetcher","PlanTrainer","plan","inputs","outputs","epochs","stepsPerEpoch","clientConfig","checkpoint","events","planInputs","planOutputs","originalModel","currentModel","epoch","batchIdx","stopped","eventName","on","applyCheckpoint","EVENT_TRAINING_START","EVENT_TRAINING_END","EVENT_TRAINING_STOP","EVENT_EPOCH_START","EVENT_EPOCH_END","EVENT_BATCH_START","EVENT_BATCH_END","resume","startEpoch","startBatch","startModel","modelParams","p","clone","_isStopped","_nextBatch","argData","TYPE_BATCH_SIZE","TYPE_MODEL_PARAM","TYPE_DATA","TYPE_TARGET","planArgs","planRawOutput","TYPE_LOSS","TYPE_METRIC","metric","dataIterator","next","numBatches","dataBatch","targetBatch","createCheckpoint","start","PlanTrainerCheckpoint","toProtobuf","currentModelBase64","Job","gridClient","grid","requires_speed_test","protocols","cycleParams","client_config","getModel","modelData","getPlan","planBinary","protocolName","getProtocol","protocolBinary","authenticate","authResponse","getConnectionSpeed","requestCycle","initCycle","timeout","submitReport","trainingPlan","parameters","trainingParams","batch_size","max_epochs","max_updates","trainer","Syft","peerConfig"],"mappings":"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"}